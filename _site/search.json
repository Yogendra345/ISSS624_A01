[
  {
    "objectID": "InClass_Ex03/InClass_Ex03.html",
    "href": "InClass_Ex03/InClass_Ex03.html",
    "title": "InClass_Ex03 : Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method.",
    "section": "",
    "text": "Geographically weighted regression (GWR) is a spatial statistical technique that takes non-stationary variables into consideration (e.g., climate; demographic factors; physical environment characteristics) and models the local relationships between these independent variables and an outcome of interest (also known as dependent variable). In this hands-on exercise, we will learn how to build hedonic pricing models by using GWR methods. The dependent variable is the resale prices of condominium in 2015. The independent variables are divided into either structural and locational.\n\n\n\n\n\nAs defined by Cambridge dictionary, the word Hedonic means “connected with feelings of pleasure“\nHedonic pricing is a model that identifies price factors according to the premise that price is determined both by internal characteristics of the good being sold and external factors affecting it.\nA hedonic pricing model is often used to estimate quantitative values for environmental or ecosystem services that directly affect market prices for homes. This method of valuation can require a strong degree of statistical expertise and model specification, following a period of data collection.\n\n\n\n\nHedonic pricing identifies the internal and external factors and characteristics that affect an item’s price in the market.\nHedonic pricing is most often seen in the housing market, since real estate prices are determined by the characteristics of the property itself as well as the neighborhood or environment within which it exists.\nHedonic pricing captures a consumer’s willingness to pay for what they perceive are environmental differences that add or detract from the intrinsic value of an asset or property.\nIn simple words, ‘Hedonic pricing’ uses regression to see which factors matter the most and relative importance of each factor."
  },
  {
    "objectID": "InClass_Ex03/InClass_Ex03.html#the-data.",
    "href": "InClass_Ex03/InClass_Ex03.html#the-data.",
    "title": "InClass_Ex03 : Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method.",
    "section": "2. The Data.",
    "text": "2. The Data.\nTwo data sets will be used in this model building exercise, they are:\n\nURA Master Plan sub-zone boundary in shapefile format (i.e. MP14_SUBZONE_WEB_PL)\ncondo_resale_2015 in csv format (i.e. condo_resale_2015.csv)"
  },
  {
    "objectID": "InClass_Ex03/InClass_Ex03.html#getting-started.",
    "href": "InClass_Ex03/InClass_Ex03.html#getting-started.",
    "title": "InClass_Ex03 : Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method.",
    "section": "3. Getting Started.",
    "text": "3. Getting Started.\nBefore we get started, it is important for us to install the necessary R packages into R and launch these R packages into R environment.\nThe R packages needed for this exercise are as follows :\n\nolsrr - R package for building OLS and performing diagnostics tests\nGWmodel - R package for calibrating geographical weighted family of models\ncorrplot - R package for multivariate data visualization and analysis\nsf - Spatial data handling\ntidyverse, especially readr, ggplot2 and dplyr - Attribute data handling\ntmap - Choropleth mapping\n\nThe code chunks below installs and launches these R packages into R environment.\n\npacman::p_load(olsrr, corrplot, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary)\n\nI received error while installing gtsummary. Hence trying to install this package again.\n\ninstall.packages(\"gtsummary\")\n\nWarning: package 'gtsummary' is in use and will not be installed"
  },
  {
    "objectID": "InClass_Ex03/InClass_Ex03.html#important-note-on-gwmodel.",
    "href": "InClass_Ex03/InClass_Ex03.html#important-note-on-gwmodel.",
    "title": "InClass_Ex03 : Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method.",
    "section": "4. Important note on GWmodel.",
    "text": "4. Important note on GWmodel.\nGWmodel package provides a collection of localized spatial statistical methods, namely :\n\nGW summary statistics,\nGW principal components analysis,\nGW discriminant analysis and\nVarious forms of GW regression; some of which are provided in basic and robust (outlier resistant) forms. Commonly, outputs or parameters of the GWmodel are mapped to provide a useful exploratory tool, which can often precede (and direct) a more traditional or sophisticated statistical analysis."
  },
  {
    "objectID": "InClass_Ex03/InClass_Ex03.html#geospatial-data-wrangling.",
    "href": "InClass_Ex03/InClass_Ex03.html#geospatial-data-wrangling.",
    "title": "InClass_Ex03 : Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method.",
    "section": "5. Geospatial Data Wrangling.",
    "text": "5. Geospatial Data Wrangling.\n\n5.1 Importing geospatial data.\nThe geospatial data used in this hands-on exercise is called MP14_SUBZONE_WEB_PL. It is in ESRI shapefile format. The shapefile consists of URA Master Plan 2014’s planning sub-zone boundaries. Polygon features are used to represent these geographic boundaries. The GIS data is in svy21 projected coordinates systems.\nThe code chunk below is used to import MP_SUBZONE_WEB_PL shapefile by using st_read() of sf packages.\n\nmpsz = st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Yogendra345\\ISSS624_A01\\InClass_Ex03\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nThe report above shows that the R object used to contain the imported MP14_SUBZONE_WEB_PL shapefile is called mpsz and it is a simple feature object. The geometry type is multipolygon. it is also important to note that mpsz simple feature object does not have EPSG information.\n\n\n5.2 Updating CRS information.\nThe code chunk below updates the newly imported mpsz with the correct ESPG code (i.e. 3414)\nNote - Singapore has a special coordinate system called SVY21. This converts the special coordinates to lat/lng.\n\nmpsz_svy21 <- st_transform(mpsz, 3414)\n\nAfter transforming the projection metadata, you can varify the projection of the newly transformed mpsz_svy21 by using st_crs() of sf package.\nThe code chunk below will be used to verify the newly transformed mpsz_svy21\n\nst_crs(mpsz_svy21)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\nNotice that the EPSG is indicated as 3414 now.\nNext, we will reveal the extent of mpsz_svy21 by using st_bbox() of sf package.\n\nst_bbox(mpsz_svy21) #view extent\n\n     xmin      ymin      xmax      ymax \n 2667.538 15748.721 56396.440 50256.334"
  },
  {
    "objectID": "InClass_Ex03/InClass_Ex03.html#aspatial-data-wrangling.",
    "href": "InClass_Ex03/InClass_Ex03.html#aspatial-data-wrangling.",
    "title": "InClass_Ex03 : Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method.",
    "section": "6. Aspatial Data Wrangling.",
    "text": "6. Aspatial Data Wrangling.\n\n6.1 Importing the aspatial data.\nThe condo_resale_2015 is in csv file format. The codes chunk below uses read_csv() function of readr package to import condo_resale_2015 into R as a tibble data frame called condo_resale.\n\ncondo_resale = read_csv(\"data/aspatial/Condo_resale_2015.csv\")\n\nNew names:\nRows: 1436 Columns: 49\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" dbl\n(23): LATITUDE, LONGITUDE, POSTCODE, SELLING_PRICE, AREA_SQM, AGE, PROX_... lgl\n(26): ...24, ...25, ...26, ...27, ...28, ...29, ...30, ...31, ...32, ......\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...24`\n• `` -> `...25`\n• `` -> `...26`\n• `` -> `...27`\n• `` -> `...28`\n• `` -> `...29`\n• `` -> `...30`\n• `` -> `...31`\n• `` -> `...32`\n• `` -> `...33`\n• `` -> `...34`\n• `` -> `...35`\n• `` -> `...36`\n• `` -> `...37`\n• `` -> `...38`\n• `` -> `...39`\n• `` -> `...40`\n• `` -> `...41`\n• `` -> `...42`\n• `` -> `...43`\n• `` -> `...44`\n• `` -> `...45`\n• `` -> `...46`\n• `` -> `...47`\n• `` -> `...48`\n• `` -> `...49`\n\n\nAfter importing the data file into R, it is important for us to examine if the data file has been imported correctly.\nThe codes chunk below uses glimpse() to display the data structure of will do the job.\n\nglimpse(condo_resale)\n\nRows: 1,436\nColumns: 49\n$ LATITUDE             <dbl> 1.287145, 1.328698, 1.313727, 1.308563, 1.321437,…\n$ LONGITUDE            <dbl> 103.7802, 103.8123, 103.7971, 103.8247, 103.9505,…\n$ POSTCODE             <dbl> 118635, 288420, 267833, 258380, 467169, 466472, 3…\n$ SELLING_PRICE        <dbl> 3000000, 3880000, 3325000, 4250000, 1400000, 1320…\n$ AREA_SQM             <dbl> 309, 290, 248, 127, 145, 139, 218, 141, 165, 168,…\n$ AGE                  <dbl> 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22, 6,…\n$ PROX_CBD             <dbl> 7.941259, 6.609797, 6.898000, 4.038861, 11.783402…\n$ PROX_CHILDCARE       <dbl> 0.16597932, 0.28027246, 0.42922669, 0.39473543, 0…\n$ PROX_ELDERLYCARE     <dbl> 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.121…\n$ PROX_URA_GROWTH_AREA <dbl> 6.618741, 7.505109, 6.463887, 4.906512, 6.410632,…\n$ PROX_HAWKER_MARKET   <dbl> 1.76542207, 0.54507614, 0.37789301, 1.68259969, 0…\n$ PROX_KINDERGARTEN    <dbl> 0.05835552, 0.61592412, 0.14120309, 0.38200076, 0…\n$ PROX_MRT             <dbl> 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.528…\n$ PROX_PARK            <dbl> 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.116…\n$ PROX_PRIMARY_SCH     <dbl> 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.709…\n$ PROX_TOP_PRIMARY_SCH <dbl> 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.709…\n$ PROX_SHOPPING_MALL   <dbl> 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.307…\n$ PROX_SUPERMARKET     <dbl> 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.581…\n$ PROX_BUS_STOP        <dbl> 0.10336166, 0.28673408, 0.28504777, 0.29872340, 0…\n$ NO_Of_UNITS          <dbl> 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34, 3…\n$ FAMILY_FRIENDLY      <dbl> 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD             <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ ...24                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...25                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...26                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...27                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...28                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...29                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...30                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...31                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...32                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...33                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...34                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...35                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...36                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...37                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...38                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...39                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...40                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...41                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...42                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...43                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...44                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...45                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...46                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...47                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...48                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...49                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n\n\n\nhead(condo_resale$LONGITUDE) #see the data in XCOORD column\n\n[1] 103.7802 103.8123 103.7971 103.8247 103.9505 103.9386\n\n\n\nhead(condo_resale$LATITUDE) #see the data in YCOORD column\n\n[1] 1.287145 1.328698 1.313727 1.308563 1.321437 1.314198\n\n\nNext, summary() of base R is used to display the summary statistics of cond_resale tibble data frame.\n\nsummary(condo_resale)\n\n    LATITUDE       LONGITUDE        POSTCODE      SELLING_PRICE     \n Min.   :1.240   Min.   :103.7   Min.   : 18965   Min.   :  540000  \n 1st Qu.:1.309   1st Qu.:103.8   1st Qu.:259849   1st Qu.: 1100000  \n Median :1.328   Median :103.8   Median :469298   Median : 1383222  \n Mean   :1.334   Mean   :103.8   Mean   :440439   Mean   : 1751211  \n 3rd Qu.:1.357   3rd Qu.:103.9   3rd Qu.:589486   3rd Qu.: 1950000  \n Max.   :1.454   Max.   :104.0   Max.   :828833   Max.   :18000000  \n    AREA_SQM          AGE           PROX_CBD       PROX_CHILDCARE    \n Min.   : 34.0   Min.   : 0.00   Min.   : 0.3869   Min.   :0.004927  \n 1st Qu.:103.0   1st Qu.: 5.00   1st Qu.: 5.5574   1st Qu.:0.174481  \n Median :121.0   Median :11.00   Median : 9.3567   Median :0.258135  \n Mean   :136.5   Mean   :12.14   Mean   : 9.3254   Mean   :0.326313  \n 3rd Qu.:156.0   3rd Qu.:18.00   3rd Qu.:12.6661   3rd Qu.:0.368293  \n Max.   :619.0   Max.   :37.00   Max.   :19.1804   Max.   :3.465726  \n PROX_ELDERLYCARE  PROX_URA_GROWTH_AREA PROX_HAWKER_MARKET PROX_KINDERGARTEN \n Min.   :0.05451   Min.   :0.2145       Min.   :0.05182    Min.   :0.004927  \n 1st Qu.:0.61254   1st Qu.:3.1643       1st Qu.:0.55245    1st Qu.:0.276345  \n Median :0.94179   Median :4.6186       Median :0.90842    Median :0.413385  \n Mean   :1.05351   Mean   :4.5981       Mean   :1.27987    Mean   :0.458903  \n 3rd Qu.:1.35122   3rd Qu.:5.7550       3rd Qu.:1.68578    3rd Qu.:0.578474  \n Max.   :3.94916   Max.   :9.1554       Max.   :5.37435    Max.   :2.229045  \n    PROX_MRT         PROX_PARK       PROX_PRIMARY_SCH  PROX_TOP_PRIMARY_SCH\n Min.   :0.05278   Min.   :0.02906   Min.   :0.07711   Min.   :0.07711     \n 1st Qu.:0.34646   1st Qu.:0.26211   1st Qu.:0.44024   1st Qu.:1.34451     \n Median :0.57430   Median :0.39926   Median :0.63505   Median :1.88213     \n Mean   :0.67316   Mean   :0.49802   Mean   :0.75471   Mean   :2.27347     \n 3rd Qu.:0.84844   3rd Qu.:0.65592   3rd Qu.:0.95104   3rd Qu.:2.90954     \n Max.   :3.48037   Max.   :2.16105   Max.   :3.92899   Max.   :6.74819     \n PROX_SHOPPING_MALL PROX_SUPERMARKET PROX_BUS_STOP       NO_Of_UNITS    \n Min.   :0.0000     Min.   :0.0000   Min.   :0.001595   Min.   :  18.0  \n 1st Qu.:0.5258     1st Qu.:0.3695   1st Qu.:0.098356   1st Qu.: 188.8  \n Median :0.9357     Median :0.5687   Median :0.151710   Median : 360.0  \n Mean   :1.0455     Mean   :0.6141   Mean   :0.193974   Mean   : 409.2  \n 3rd Qu.:1.3994     3rd Qu.:0.7862   3rd Qu.:0.220466   3rd Qu.: 590.0  \n Max.   :3.4774     Max.   :2.2441   Max.   :2.476639   Max.   :1703.0  \n FAMILY_FRIENDLY     FREEHOLD      LEASEHOLD_99YR    ...24        \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   Mode:logical  \n 1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.0000   NA's:1436     \n Median :0.0000   Median :0.0000   Median :0.0000                 \n Mean   :0.4868   Mean   :0.4227   Mean   :0.4882                 \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000                 \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000                 \n  ...25          ...26          ...27          ...28          ...29        \n Mode:logical   Mode:logical   Mode:logical   Mode:logical   Mode:logical  \n NA's:1436      NA's:1436      NA's:1436      NA's:1436      NA's:1436     \n                                                                           \n                                                                           \n                                                                           \n                                                                           \n  ...30          ...31          ...32          ...33          ...34        \n Mode:logical   Mode:logical   Mode:logical   Mode:logical   Mode:logical  \n NA's:1436      NA's:1436      NA's:1436      NA's:1436      NA's:1436     \n                                                                           \n                                                                           \n                                                                           \n                                                                           \n  ...35          ...36          ...37          ...38          ...39        \n Mode:logical   Mode:logical   Mode:logical   Mode:logical   Mode:logical  \n NA's:1436      NA's:1436      NA's:1436      NA's:1436      NA's:1436     \n                                                                           \n                                                                           \n                                                                           \n                                                                           \n  ...40          ...41          ...42          ...43          ...44        \n Mode:logical   Mode:logical   Mode:logical   Mode:logical   Mode:logical  \n NA's:1436      NA's:1436      NA's:1436      NA's:1436      NA's:1436     \n                                                                           \n                                                                           \n                                                                           \n                                                                           \n  ...45          ...46          ...47          ...48          ...49        \n Mode:logical   Mode:logical   Mode:logical   Mode:logical   Mode:logical  \n NA's:1436      NA's:1436      NA's:1436      NA's:1436      NA's:1436     \n                                                                           \n                                                                           \n                                                                           \n                                                                           \n\n\n\n\n6.2 Converting aspatial data frame into a sf object\nCurrently, the condo_resale tibble data frame is aspatial. We will convert it to a sf object. The code chunk below converts condo_resale data frame into a simple feature data frame by using st_as_sf() of sf packages.\n\ncondo_resale.sf <- st_as_sf(condo_resale,\n                            coords = c(\"LONGITUDE\", \"LATITUDE\"),\n                            crs=4326) %>%\n  st_transform(crs=3414)\n\nNotice that st_transform() of sf package is used to convert the coordinates from wgs84 (i.e. crs:4326) to svy21 (i.e. crs=3414).\nNext, head() is used to list the content of condo_resale.sf object.\n\nhead(condo_resale.sf)\n\nSimple feature collection with 6 features and 47 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 22085.12 ymin: 29951.54 xmax: 41042.56 ymax: 34546.2\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 6 × 48\n  POSTCODE SELLI…¹ AREA_…²   AGE PROX_…³ PROX_…⁴ PROX_…⁵ PROX_…⁶ PROX_…⁷ PROX_…⁸\n     <dbl>   <dbl>   <dbl> <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1   118635 3000000     309    30    7.94   0.166   2.52     6.62   1.77   0.0584\n2   288420 3880000     290    32    6.61   0.280   1.93     7.51   0.545  0.616 \n3   267833 3325000     248    33    6.90   0.429   0.502    6.46   0.378  0.141 \n4   258380 4250000     127     7    4.04   0.395   1.99     4.91   1.68   0.382 \n5   467169 1400000     145    28   11.8    0.119   1.12     6.41   0.565  0.461 \n6   466472 1320000     139    22   10.3    0.125   0.789    5.09   0.781  0.0994\n# … with 38 more variables: PROX_MRT <dbl>, PROX_PARK <dbl>,\n#   PROX_PRIMARY_SCH <dbl>, PROX_TOP_PRIMARY_SCH <dbl>,\n#   PROX_SHOPPING_MALL <dbl>, PROX_SUPERMARKET <dbl>, PROX_BUS_STOP <dbl>,\n#   NO_Of_UNITS <dbl>, FAMILY_FRIENDLY <dbl>, FREEHOLD <dbl>,\n#   LEASEHOLD_99YR <dbl>, ...24 <lgl>, ...25 <lgl>, ...26 <lgl>, ...27 <lgl>,\n#   ...28 <lgl>, ...29 <lgl>, ...30 <lgl>, ...31 <lgl>, ...32 <lgl>,\n#   ...33 <lgl>, ...34 <lgl>, ...35 <lgl>, ...36 <lgl>, ...37 <lgl>, …\n\n\nNotice that the output is in point feature data frame.\n\n\n6.3 Exploratory Data Analysis (EDA)\nIn the section, you will learn how to use statistical graphics functions of ggplot2 package to perform EDA.\n\n\n6.3.1 EDA using statistical graphics.\nWe can plot the distribution of SELLING_PRICE by using appropriate Exploratory Data Analysis (EDA) as shown in the code chunk below.\n\nggplot(data=condo_resale.sf, aes(x=`SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\n\n\n\nThe figure above reveals a right skewed distribution. This means that more condominium units were transacted at relative lower prices.\nRemember , for right skewed distribution :\n\n\n\nFig-2 : Right Skewed Distribution\n\n\nStatistically, the skewed dsitribution can be normalised by using log transformation. The code chunk below is used to derive a new variable called LOG_SELLING_PRICE by using a log transformation on the variable SELLING_PRICE. It is performed using mutate() of dplyr package.\n\ncondo_resale.sf <- condo_resale.sf %>%\n  mutate(`LOG_SELLING_PRICE` = log(SELLING_PRICE))\n\nNow, we can plot the LOG_SELLING_PRICE using the code chunk below.\n\nggplot(data=condo_resale.sf, aes(x=`LOG_SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\n\n\n\nNotice that the distribution is relatively less skewed after the transformation.\n\n\n6.3.2 Multiple Histogram Plots distribution of variables\nIn this section, we will learn how to draw a small multiple histograms (also known as trellis plot) by using ggarrange() of ggpubr package.\nThe code chunk below is used to create 12 histograms. Then, ggarrange() is used to organised these histogram into a 3 columns by 4 rows small multiple plot.\n\nAREA_SQM <-  ggplot(data = condo_resale.sf,\n                 aes(x = `AREA_SQM`))+\n                  geom_histogram(bins = 20,color=\"black\", fill=\"light blue\")\n##\nAGE <- ggplot(data = condo_resale.sf,\n              aes(x=`AGE`))+\n          geom_histogram(bins=20,color=\"black\",fill=\"light blue\")\n##\n\nPROX_CBD <- ggplot(data=condo_resale.sf, aes(x= `PROX_CBD`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n##\n\nPROX_CHILDCARE <- ggplot(data=condo_resale.sf, aes(x= `PROX_CHILDCARE`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n##\n\nPROX_ELDERLYCARE <- ggplot(data=condo_resale.sf, aes(x= `PROX_ELDERLYCARE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")+\n  geom_density()\n##\n\nPROX_URA_GROWTH_AREA <- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_URA_GROWTH_AREA`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n##\n\nPROX_HAWKER_MARKET <- ggplot(data=condo_resale.sf, aes(x= `PROX_HAWKER_MARKET`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n##\n\nPROX_KINDERGARTEN <- ggplot(data=condo_resale.sf, aes(x= `PROX_KINDERGARTEN`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n##\n\nPROX_MRT <- ggplot(data=condo_resale.sf, aes(x= `PROX_MRT`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n##\n\nPROX_PARK <- ggplot(data=condo_resale.sf, aes(x= `PROX_PARK`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n##\n\nPROX_PRIMARY_SCH <- ggplot(data=condo_resale.sf, aes(x= `PROX_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n##\n\nPROX_TOP_PRIMARY_SCH <- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_TOP_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")+\n  geom_density()\n##\n\n\nggarrange(AREA_SQM, AGE, PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, \n          PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN, PROX_MRT,\n          PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH,  \n          ncol = 4, nrow = 3)\n\n\n\n\n\n\n6.3.3 Understand geospatial distribution condominium resale prices in Singapore.\nLastly, we want to reveal the geospatial distribution condominium resale prices in Singapore. The map will be prepared by using tmap package.\nFirst, we will turn on the interactive mode of tmap by using the code chunk below.\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\n\nNext, the code chunks below is used to create an interactive point symbol map.\n\n#tm_shape(mpsz_svy21)+\n#  tm_polygons() +\n#tm_shape(condo_resale.sf) +  \n#  tm_dots(col = \"SELLING_PRICE\",size = 0.1,\n#          alpha = 0.8,\n#          style=\"quantile\") +\n#  tm_view(set.zoom.limits = c(11,14))\n\nLet us see how tm_bubbles will look like in map.\n\n#tm_shape(mpsz_svy21)+\n#  tm_polygons() +\n#tm_shape(condo_resale.sf) +  \n#  tm_bubbles(col = \"SELLING_PRICE\",size = 0.05,\n#          alpha = 0.3,\n#          style=\"quantile\") +\n#  tm_view(set.zoom.limits = c(11,14))\n\nset.zoom.limits argument of tm_view() sets the minimum and maximum zoom level to 11 and 14 respectively.\nThe code below will be used to turn R display into plot mode.\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting"
  },
  {
    "objectID": "InClass_Ex03/InClass_Ex03.html#hedonic-pricing-modelling-in-r.",
    "href": "InClass_Ex03/InClass_Ex03.html#hedonic-pricing-modelling-in-r.",
    "title": "InClass_Ex03 : Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method.",
    "section": "7. Hedonic Pricing Modelling in R.",
    "text": "7. Hedonic Pricing Modelling in R.\nIn this section, we will learn how to building hedonic pricing models for condominium resale units using lm() of R base.\n7.1 Simple Linear Regression Method.\nFirst, we will build a simple linear regression model by using SELLING_PRICE as the dependent variable and AREA_SQM as the independent variable.\n\ncondo.slr <- lm(formula=SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\nlm() returns an object of class “lm” or for multiple responses of class c(“mlm”, “lm”).\nThe functions summary() and anova() can be used to obtain and print a summary and analysis of variance table of the results. The generic accessor functions coefficients, effects, fitted.values and residuals extract various useful features of the value returned by lm.\n\nsummary(condo.slr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3695815  -391764   -87517   258900 13503875 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -258121.1    63517.2  -4.064 5.09e-05 ***\nAREA_SQM      14719.0      428.1  34.381  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 942700 on 1434 degrees of freedom\nMultiple R-squared:  0.4518,    Adjusted R-squared:  0.4515 \nF-statistic:  1182 on 1 and 1434 DF,  p-value: < 2.2e-16\n\n\nThe output report reveals that the SELLING_PRICE can be explained by using the formula:\n      *y = -258121.1 + 14719x1*\nThe R-squared of 0.4518 reveals that the simple regression model built is able to explain about 45% of the resale prices.\nSince p-value is much smaller than 0.001, we will reject the null hypothesis that mean is a good estimator of SELLING_PRICE. This will allow us to infer that simple linear regression model above is a good estimator of SELLING_PRICE.\nThe Coefficients: section of the report reveals that the p-values of both the estimates of the Intercept and ARA_SQM are smaller than 0.001. In view of this, the null hypothesis of the B0 and B1 are equal to 0 will be rejected. As a results, we will be able to infer that the B0 and B1 are good parameter estimates.\nTo visualise the best fit curve on a scatterplot, we can incorporate lm() as a method function in ggplot’s geometry as shown in the code chunk below.\n\nggplot(data=condo_resale.sf,  \n       aes(x=`AREA_SQM`, y=`SELLING_PRICE`)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nFigure above reveals that there are a few statistical outliers with relatively high selling prices.\n\n\n7.1 Multiple Linear Regression Method.\nBefore building a multiple regression model, it is important to ensure that the indepdent variables used are not highly correlated to each other. If these highly correlated independent variables are used in building a regression model by mistake, the quality of the model will be compromised. This phenomenon is known as multicollinearity in statistics.\nCorrelation matrix is commonly used to visualize the relationships between the independent variables. Beside the pairs() of R, there are many packages support the display of a correlation matrix. In this section, the corrplot package will be used.\nThe code chunk below is used to plot a scatterplot matrix of the relationship between the independent variables in condo_resale data.frame.\n\ncorrplot(cor(condo_resale[, 5:23]),\n         diag = FALSE, order = \"AOE\",\n         number.cex = 0.4,number.font = 3,\n         tl.pos = \"td\", tl.cex = 0.4,tl.col = 'Blue', \n         method = \"number\", type = \"upper\")\n\n\n\n\nMatrix reorder is very important for mining the hiden structure and patter in the matrix. There are four methods in corrplot (parameter order), named “AOE”, “FPC”, “hclust”, “alphabet”. In the code chunk above, AOE order is used. It orders the variables by using the angular order of the eigenvectors method suggested by Michael Friendly.\nFrom the scatterplot matrix, it is clear that Freehold is highly correlated to LEASE_99YEAR. In view of this, it is wiser to only include either one of them in the subsequent model building. As a result, LEASE_99YEAR is excluded in the subsequent model building.\n\n\n7.2 Building a hedonic pricing model using multiple linear regression method\nThe code chunk below using lm() to calibrate the multiple linear regression model.\n\ncondo.mlr <- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE    + \n                  PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                  PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + PROX_KINDERGARTEN + \n                  PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + \n                  PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n                  PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                data=condo_resale.sf)\nsummary(condo.mlr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + PROX_CHILDCARE + \n    PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + \n    PROX_KINDERGARTEN + PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + \n    PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3475964  -293923   -23069   241043 12260381 \n\nCoefficients:\n                       Estimate Std. Error t value Pr(>|t|)    \n(Intercept)           481728.40  121441.01   3.967 7.65e-05 ***\nAREA_SQM               12708.32     369.59  34.385  < 2e-16 ***\nAGE                   -24440.82    2763.16  -8.845  < 2e-16 ***\nPROX_CBD              -78669.78    6768.97 -11.622  < 2e-16 ***\nPROX_CHILDCARE       -351617.91  109467.25  -3.212  0.00135 ** \nPROX_ELDERLYCARE      171029.42   42110.51   4.061 5.14e-05 ***\nPROX_URA_GROWTH_AREA   38474.53   12523.57   3.072  0.00217 ** \nPROX_HAWKER_MARKET     23746.10   29299.76   0.810  0.41782    \nPROX_KINDERGARTEN     147468.99   82668.87   1.784  0.07466 .  \nPROX_MRT             -314599.68   57947.44  -5.429 6.66e-08 ***\nPROX_PARK             563280.50   66551.68   8.464  < 2e-16 ***\nPROX_PRIMARY_SCH      180186.08   65237.95   2.762  0.00582 ** \nPROX_TOP_PRIMARY_SCH    2280.04   20410.43   0.112  0.91107    \nPROX_SHOPPING_MALL   -206604.06   42840.60  -4.823 1.57e-06 ***\nPROX_SUPERMARKET      -44991.80   77082.64  -0.584  0.55953    \nPROX_BUS_STOP         683121.35  138353.28   4.938 8.85e-07 ***\nNO_Of_UNITS             -231.18      89.03  -2.597  0.00951 ** \nFAMILY_FRIENDLY       140340.77   47020.55   2.985  0.00289 ** \nFREEHOLD              359913.01   49220.22   7.312 4.38e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 755800 on 1417 degrees of freedom\nMultiple R-squared:  0.6518,    Adjusted R-squared:  0.6474 \nF-statistic: 147.4 on 18 and 1417 DF,  p-value: < 2.2e-16\n\n\n\n\n7.3 Preparing Publication Quality Table: olsrr method.\nWith reference to the report above, it is clear that not all the independent variables are statistically significant. We will revised the model by removing those variables which are not statistically significant.\nNow, we are ready to calibrate the revised model by using the code chunk below.\n\ncondo.mlr1 <- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                   PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                   PROX_URA_GROWTH_AREA + PROX_MRT  + PROX_PARK + \n                   PROX_PRIMARY_SCH + PROX_SHOPPING_MALL    + PROX_BUS_STOP + \n                   NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD,\n                 data=condo_resale.sf)\n#\nols_regress(condo.mlr1)\n\n                             Model Summary                               \n------------------------------------------------------------------------\nR                       0.807       RMSE                     755957.289 \nR-Squared               0.651       Coef. Var                    43.168 \nAdj. R-Squared          0.647       MSE                571471422208.591 \nPred R-Squared          0.638       MAE                      414819.628 \n------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.512586e+15          14        1.080418e+14    189.059    0.0000 \nResidual      8.120609e+14        1421    571471422208.591                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     527633.222    108183.223                   4.877    0.000     315417.244     739849.200 \n            AREA_SQM      12777.523       367.479        0.584     34.771    0.000      12056.663      13498.382 \n                 AGE     -24687.739      2754.845       -0.167     -8.962    0.000     -30091.739     -19283.740 \n            PROX_CBD     -77131.323      5763.125       -0.263    -13.384    0.000     -88436.469     -65826.176 \n      PROX_CHILDCARE    -318472.751    107959.512       -0.084     -2.950    0.003    -530249.889    -106695.613 \n    PROX_ELDERLYCARE     185575.623     39901.864        0.090      4.651    0.000     107302.737     263848.510 \nPROX_URA_GROWTH_AREA      39163.254     11754.829        0.060      3.332    0.001      16104.571      62221.936 \n            PROX_MRT    -294745.107     56916.367       -0.112     -5.179    0.000    -406394.234    -183095.980 \n           PROX_PARK     570504.807     65507.029        0.150      8.709    0.000     442003.938     699005.677 \n    PROX_PRIMARY_SCH     159856.136     60234.599        0.062      2.654    0.008      41697.849     278014.424 \n  PROX_SHOPPING_MALL    -220947.251     36561.832       -0.115     -6.043    0.000    -292668.213    -149226.288 \n       PROX_BUS_STOP     682482.221    134513.243        0.134      5.074    0.000     418616.359     946348.082 \n         NO_Of_UNITS       -245.480        87.947       -0.053     -2.791    0.005       -418.000        -72.961 \n     FAMILY_FRIENDLY     146307.576     46893.021        0.057      3.120    0.002      54320.593     238294.560 \n            FREEHOLD     350599.812     48506.485        0.136      7.228    0.000     255447.802     445751.821 \n-----------------------------------------------------------------------------------------------------------------\n\n\n\n\n7.4 Preparing Publication Quality Table: gtsummary method.\nThe gtsummary package provides an elegant and flexible way to create publication-ready summary tables in R.\nIn the code chunk below, tbl_regression() is used to create a well formatted regression report.\n\ntbl_regression(condo.mlr1, intercept = TRUE)\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n<0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n<0.001\n    AGE\n-24,688\n-30,092, -19,284\n<0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n<0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n<0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n<0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n<0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n<0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n<0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n<0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n<0.001\n  \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\nWith gtsummary package, model statistics can be included in the report by either appending them to the report table by using add_glance_table() or adding as a table source note by using add_glance_source_note() as shown in the code chunk below.\n\ntbl_regression(condo.mlr1, \n               intercept = TRUE) %>% \n  add_glance_source_note(\n    label = list(sigma ~ \"\\U03C3\"),\n    include = c(r.squared, adj.r.squared, \n                AIC, statistic,\n                p.value, sigma))\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n<0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n<0.001\n    AGE\n-24,688\n-30,092, -19,284\n<0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n<0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n<0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n<0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n<0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n<0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n<0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n<0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n<0.001\n  \n  \n    \n      R² = 0.651; Adjusted R² = 0.647; AIC = 42,967; Statistic = 189; p-value = <0.001; σ = 755,957\n    \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\n\n\n7.5 Checking for multi-collinearity.\nIn this section, let us see fantastic R package specially programmed for performing OLS regression. It is called olsrr. It provides a collection of very useful methods for building better multiple linear regression models:\n\ncomprehensive regression output\nresidual diagnostics\nmeasures of influence\nheteroskedasticity tests\ncollinearity diagnostics\nmodel fit assessment\nvariable contribution assessment\nvariable selection procedures\n\nIn the code chunk below, the ols_vif_tol() of olsrr package is used to test if there are sign of multicollinearity.\n\nols_vif_tol(condo.mlr1)\n\n              Variables Tolerance      VIF\n1              AREA_SQM 0.8728554 1.145665\n2                   AGE 0.7071275 1.414172\n3              PROX_CBD 0.6356147 1.573280\n4        PROX_CHILDCARE 0.3066019 3.261559\n5      PROX_ELDERLYCARE 0.6598479 1.515501\n6  PROX_URA_GROWTH_AREA 0.7510311 1.331503\n7              PROX_MRT 0.5236090 1.909822\n8             PROX_PARK 0.8279261 1.207837\n9      PROX_PRIMARY_SCH 0.4524628 2.210126\n10   PROX_SHOPPING_MALL 0.6738795 1.483945\n11        PROX_BUS_STOP 0.3514118 2.845664\n12          NO_Of_UNITS 0.6901036 1.449058\n13      FAMILY_FRIENDLY 0.7244157 1.380423\n14             FREEHOLD 0.6931163 1.442759\n\n\nSince the VIF of the independent variables are less than 10. We can safely conclude that there are no sign of multicollinearity among the independent variables.\n\n\n7.6 Test for Non-Linearity\nIn multiple linear regression, it is important for us to test the assumption that linearity and additivity of the relationship between dependent and independent variables.\nIn the code chunk below, the ols_plot_resid_fit() of olsrr package is used to perform linearity assumption test.\n\nols_plot_resid_fit(condo.mlr1)\n\n\n\n\nThe figure above reveals that most of the data poitns are scattered around the 0 line, hence we can safely conclude that the relationships between the dependent variable and independent variables are linear.\n\n\n\n\n\n7.7 Test for Normality Assumption\nLastly, the code chunk below uses ols_plot_resid_hist() of olsrr package to perform normality assumption test.\n\nols_plot_resid_hist(condo.mlr1)\n\n\n\n\nThe figure reveals that the residual of the multiple linear regression model (i.e. condo.mlr1) is resemble normal distribution.\nIf we prefer formal statistical test methods, the ols_test_normality() of olsrr package can be used as shown in the code chun below.\n\nols_test_normality(condo.mlr1)\n\nWarning in ks.test.default(y, \"pnorm\", mean(y), sd(y)): ties should not be\npresent for the Kolmogorov-Smirnov test\n\n\n-----------------------------------------------\n       Test             Statistic       pvalue  \n-----------------------------------------------\nShapiro-Wilk              0.6856         0.0000 \nKolmogorov-Smirnov        0.1366         0.0000 \nCramer-von Mises         121.0768        0.0000 \nAnderson-Darling         67.9551         0.0000 \n-----------------------------------------------\n\n\nThe summary table above reveals that the p-values of the four tests are way smaller than the alpha value of 0.05. Hence we will reject the null hypothesis and infer that there is statistical evidence that the residual are not normally distributed.\n\n\n7.8 Testing for Spatial Autocorrelation\nThe hedonic model we try to build are using geographically referenced attributes, hence it is also important for us to visualize the residual of the hedonic pricing model.\nIn order to perform spatial autocorrelation test, we need to convert condo_resale.sf from sf data frame into a SpatialPointsDataFrame.\nFirst, we will export the residual of the hedonic pricing model and save it as a data frame.\n\nmlr.output <- as.data.frame(condo.mlr1$residuals)\n\nNext, we will join the newly created data frame with condo_resale.sf object.\n\ncondo_resale.res.sf <- cbind(condo_resale.sf, \n                        condo.mlr1$residuals) %>%\nrename(`MLR_RES` = `condo.mlr1.residuals`)\n\nNext, we will convert condo_resale.res.sf from simple feature object into a SpatialPointsDataFrame because spdep package can only process sp conformed spatial data objects.\nThe code chunk below will be used to perform the data conversion process.\n\ncondo_resale.sp <- as_Spatial(condo_resale.res.sf)\ncondo_resale.sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1436 \nextent      : 14940.85, 43352.45, 24765.67, 48382.81  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 49\nnames       : POSTCODE, SELLING_PRICE, AREA_SQM, AGE,    PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN,    PROX_MRT,   PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH, PROX_SHOPPING_MALL, ... \nmin values  :    18965,        540000,       34,   0, 0.386916393,    0.004927023,      0.054508623,          0.214539508,        0.051817113,       0.004927023, 0.052779424, 0.029064164,      0.077106132,          0.077106132,                  0, ... \nmax values  :   828833,       1.8e+07,      619,  37, 19.18042832,     3.46572633,      3.949157205,           9.15540001,        5.374348075,       2.229045366,  3.48037319,  2.16104919,      3.928989144,          6.748192062,        3.477433767, ... \n\n\nNext, we will use tmap package to display the distribution of the residuals on an interactive map.\nThe code churn below will turn on the interactive mode of tmap.\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\n\nThe code chunks below is used to create an interactive point symbol map.\n\ntm_shape(mpsz_svy21)+\n  tmap_options(check.and.fix = TRUE) +\n  tm_polygons(alpha = 0.4) +\ntm_shape(condo_resale.res.sf) +  \n  tm_dots(col = \"MLR_RES\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n\nWarning: The shape mpsz_svy21 is invalid (after reprojection). See\nsf::st_is_valid\n\n\nVariable(s) \"MLR_RES\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\n\nThe figure above reveal that there is sign of spatial autocorrelation.\nTo proof that our observation is indeed true, the Moran’s I test will be performed\nFirst, we will compute the distance-based weight matrix by using dnearneigh() function of spdep.\n\nnb <- dnearneigh(coordinates(condo_resale.sp), 0, 1500, longlat = FALSE)\nsummary(nb)\n\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\n\nNext, nb2listw() of spdep packge will be used to convert the output neighbours lists (i.e. nb) into a spatial weights.\n\nnb_lw <- nb2listw(nb, style = 'W')\nsummary(nb_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\nWeights style: W \nWeights constants summary:\n     n      nn   S0       S1       S2\nW 1436 2062096 1436 94.81916 5798.341\n\n\nNext, lm.morantest() of spdep package will be used to perform Moran’s I test for residual spatial autocorrelation\n\nlm.morantest(condo.mlr1, nb_lw)\n\n\n    Global Moran I for regression residuals\n\ndata:  \nmodel: lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD +\nPROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_MRT +\nPROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP +\nNO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, data = condo_resale.sf)\nweights: nb_lw\n\nMoran I statistic standard deviate = 24.366, p-value < 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nObserved Moran I      Expectation         Variance \n    1.438876e-01    -5.487594e-03     3.758259e-05 \n\n\nThe Global Moran’s I test for residual spatial autocorrelation shows that it’s p-value is less than 0.00000000000000022 which is less than the alpha value of 0.05. Hence, we will reject the null hypothesis that the residuals are randomly distributed.\nSince the Observed Global Moran I = 0.1424418 which is greater than 0, we can infer than the residuals resemble cluster distribution."
  },
  {
    "objectID": "InClass_Ex03/InClass_Ex03.html#building-hedonic-pricing-models-using-gwmodel.",
    "href": "InClass_Ex03/InClass_Ex03.html#building-hedonic-pricing-models-using-gwmodel.",
    "title": "InClass_Ex03 : Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method.",
    "section": "8. Building Hedonic Pricing Models using GWmodel.",
    "text": "8. Building Hedonic Pricing Models using GWmodel.\nIn this section, we are going to learn how to modelling hedonic pricing using both the fixed and adaptive bandwidth schemes.\n\n8.1 Building Fixed Bandwidth GWR Model.\n\n8.1.1 Computing fixed bandwidth.\nIn the code chunk below bw.gwr() of GWModel package is used to determine the optimal fixed bandwidth to use in the model. Notice that the argument adaptive is set to FALSE indicates that we are interested to compute the fixed bandwidth.\nTwo possible approaches can be used to determine the stopping rule, they are:\n\nCV cross-validation approach and\nAIC corrected (AICc) approach.\nWe define the stopping rule using approach argeement.\n\nbw.fixed <- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                     PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                     PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + \n                     PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                     FAMILY_FRIENDLY + FREEHOLD, \n                   data=condo_resale.sp, \n                   approach=\"CV\", \n                   kernel=\"gaussian\", \n                   adaptive=FALSE, \n                   longlat=FALSE)\n\nFixed bandwidth: 17660.96 CV score: 8.259118e+14 \nFixed bandwidth: 10917.26 CV score: 7.970454e+14 \nFixed bandwidth: 6749.419 CV score: 7.273273e+14 \nFixed bandwidth: 4173.553 CV score: 6.300006e+14 \nFixed bandwidth: 2581.58 CV score: 5.404958e+14 \nFixed bandwidth: 1597.687 CV score: 4.857515e+14 \nFixed bandwidth: 989.6077 CV score: 4.722431e+14 \nFixed bandwidth: 613.7939 CV score: 1.378294e+16 \nFixed bandwidth: 1221.873 CV score: 4.778717e+14 \nFixed bandwidth: 846.0596 CV score: 4.791629e+14 \nFixed bandwidth: 1078.325 CV score: 4.751406e+14 \nFixed bandwidth: 934.7772 CV score: 4.72518e+14 \nFixed bandwidth: 1023.495 CV score: 4.730305e+14 \nFixed bandwidth: 968.6643 CV score: 4.721317e+14 \nFixed bandwidth: 955.7206 CV score: 4.722072e+14 \nFixed bandwidth: 976.6639 CV score: 4.721387e+14 \nFixed bandwidth: 963.7202 CV score: 4.721484e+14 \nFixed bandwidth: 971.7199 CV score: 4.721293e+14 \nFixed bandwidth: 973.6083 CV score: 4.721309e+14 \nFixed bandwidth: 970.5527 CV score: 4.721295e+14 \nFixed bandwidth: 972.4412 CV score: 4.721296e+14 \nFixed bandwidth: 971.2741 CV score: 4.721292e+14 \nFixed bandwidth: 970.9985 CV score: 4.721293e+14 \nFixed bandwidth: 971.4443 CV score: 4.721292e+14 \nFixed bandwidth: 971.5496 CV score: 4.721293e+14 \nFixed bandwidth: 971.3793 CV score: 4.721292e+14 \nFixed bandwidth: 971.3391 CV score: 4.721292e+14 \nFixed bandwidth: 971.3143 CV score: 4.721292e+14 \nFixed bandwidth: 971.3545 CV score: 4.721292e+14 \nFixed bandwidth: 971.3296 CV score: 4.721292e+14 \nFixed bandwidth: 971.345 CV score: 4.721292e+14 \nFixed bandwidth: 971.3355 CV score: 4.721292e+14 \nFixed bandwidth: 971.3413 CV score: 4.721292e+14 \nFixed bandwidth: 971.3377 CV score: 4.721292e+14 \nFixed bandwidth: 971.34 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3408 CV score: 4.721292e+14 \nFixed bandwidth: 971.3403 CV score: 4.721292e+14 \nFixed bandwidth: 971.3406 CV score: 4.721292e+14 \nFixed bandwidth: 971.3404 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \n\n\n\n\nNote that cross-validation stops when Rate of Change is very very small or there is no change.\nThe result shows that the recommended bandwidth is 971.3405 meters.\nQuiz: Do you know why it is in meter?\nThe bandwidth is the distance beyond which a value of zero is assigned to weight observations. Larger bandwidths include a larger number of observations receiving a non-zero weight and more observations are used to fit a local regression. We are trying to find similar neighbors within a given distance and hence recommended bandwidth is in meters. See the following graph to understand more.\n\n\n\nFixed Bandwidth\n\n\n\n8.1.2 GWModel method - fixed bandwith.\nNow we can use the code chunk below to calibrate the gwr model using fixed bandwidth and gaussian kernel.\n\ngwr.fixed <- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                         PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                         PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + \n                         PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                         FAMILY_FRIENDLY + FREEHOLD, \n                       data=condo_resale.sp, \n                       bw=bw.fixed, \n                       kernel = 'gaussian', \n                       longlat = FALSE)\n\nThe output is saved in a list of class “gwrm”. The code below can be used to display the model output.\n\ngwr.fixed\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2022-12-11 15:53:16 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sp, bw = bw.fixed, kernel = \"gaussian\", \n    longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(>|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  < 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  < 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  < 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  < 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: < 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Fixed bandwidth: 971.3405 \n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -3.5988e+07 -5.1998e+05  7.6780e+05  1.7412e+06\n   AREA_SQM              1.0003e+03  5.2758e+03  7.4740e+03  1.2301e+04\n   AGE                  -1.3475e+05 -2.0813e+04 -8.6260e+03 -3.7784e+03\n   PROX_CBD             -7.7047e+07 -2.3608e+05 -8.3600e+04  3.4646e+04\n   PROX_CHILDCARE       -6.0097e+06 -3.3667e+05 -9.7425e+04  2.9007e+05\n   PROX_ELDERLYCARE     -3.5000e+06 -1.5970e+05  3.1971e+04  1.9577e+05\n   PROX_URA_GROWTH_AREA -3.0170e+06 -8.2013e+04  7.0749e+04  2.2612e+05\n   PROX_MRT             -3.5282e+06 -6.5836e+05 -1.8833e+05  3.6922e+04\n   PROX_PARK            -1.2062e+06 -2.1732e+05  3.5383e+04  4.1335e+05\n   PROX_PRIMARY_SCH     -2.2695e+07 -1.7066e+05  4.8472e+04  5.1555e+05\n   PROX_SHOPPING_MALL   -7.2585e+06 -1.6684e+05 -1.0517e+04  1.5923e+05\n   PROX_BUS_STOP        -1.4676e+06 -4.5207e+04  3.7601e+05  1.1664e+06\n   NO_Of_UNITS          -1.3170e+03 -2.4822e+02 -3.0846e+01  2.5496e+02\n   FAMILY_FRIENDLY      -2.2749e+06 -1.1140e+05  7.6214e+03  1.6107e+05\n   FREEHOLD             -9.2067e+06  3.8073e+04  1.5169e+05  3.7528e+05\n                             Max.\n   Intercept            112793548\n   AREA_SQM                 21575\n   AGE                     434201\n   PROX_CBD               2704596\n   PROX_CHILDCARE         1654087\n   PROX_ELDERLYCARE      38867814\n   PROX_URA_GROWTH_AREA  78515730\n   PROX_MRT               3124316\n   PROX_PARK             18122425\n   PROX_PRIMARY_SCH       4637503\n   PROX_SHOPPING_MALL     1529952\n   PROX_BUS_STOP         11342182\n   NO_Of_UNITS              12907\n   FAMILY_FRIENDLY        1720744\n   FREEHOLD               6073636\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 438.3804 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 997.6196 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 42263.61 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41632.36 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 42515.71 \n   Residual sum of squares: 2.53407e+14 \n   R-square value:  0.8909912 \n   Adjusted R-square value:  0.8430417 \n\n   ***********************************************************************\n   Program stops at: 2022-12-11 15:53:17 \n\n\n\n\n\n8.2 Building Adaptive Bandwidth GWR Model.\nIn this section, we will calibrate the gwr-based hedonic pricing model by using adaptive bandwidth approach.\n\n\n8.2.1 Computing the adaptive bandwidth.\nSimilar to the earlier section, we will first use bw.gwr() to determine the recommended data point to use.\nThe code chunk used look very similar to the one used to compute the fixed bandwidth except the adaptive argument has changed to TRUE.\n\nbw.adaptive <- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE  + \n                        PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE    + \n                        PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                        PROX_PRIMARY_SCH + PROX_SHOPPING_MALL   + PROX_BUS_STOP + \n                        NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                      data=condo_resale.sp, \n                      approach=\"CV\", \n                      kernel=\"gaussian\", \n                      adaptive=TRUE, \n                      longlat=FALSE)\n\nAdaptive bandwidth: 895 CV score: 7.952401e+14 \nAdaptive bandwidth: 561 CV score: 7.667364e+14 \nAdaptive bandwidth: 354 CV score: 6.953454e+14 \nAdaptive bandwidth: 226 CV score: 6.15223e+14 \nAdaptive bandwidth: 147 CV score: 5.674373e+14 \nAdaptive bandwidth: 98 CV score: 5.426745e+14 \nAdaptive bandwidth: 68 CV score: 5.168117e+14 \nAdaptive bandwidth: 49 CV score: 4.859631e+14 \nAdaptive bandwidth: 37 CV score: 4.646518e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \nAdaptive bandwidth: 25 CV score: 4.430816e+14 \nAdaptive bandwidth: 32 CV score: 4.505602e+14 \nAdaptive bandwidth: 27 CV score: 4.462172e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \n\n\nThe result shows that the 30 is the recommended data points to be used.\n\n\n\n8.2.2 Constructing the adaptive bandwidth gwr model.\nNow, we can go ahead to calibrate the gwr-based hedonic pricing model by using adaptive bandwidth and gaussian kernel as shown in the code chunk below.\n\ngwr.adaptive <- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                            PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE + \n                            PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                            PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP + \n                            NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                          data=condo_resale.sp, bw=bw.adaptive, \n                          kernel = 'gaussian', \n                          adaptive=TRUE, \n                          longlat = FALSE)\n\nThe code below can be used to display the model output.\n\ngwr.adaptive\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2022-12-11 15:53:22 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sp, bw = bw.adaptive, kernel = \"gaussian\", \n    adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(>|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  < 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  < 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  < 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  < 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: < 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 30 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -1.3487e+08 -2.4669e+05  7.7928e+05  1.6194e+06\n   AREA_SQM              3.3188e+03  5.6285e+03  7.7825e+03  1.2738e+04\n   AGE                  -9.6746e+04 -2.9288e+04 -1.4043e+04 -5.6119e+03\n   PROX_CBD             -2.5330e+06 -1.6256e+05 -7.7242e+04  2.6624e+03\n   PROX_CHILDCARE       -1.2790e+06 -2.0175e+05  8.7158e+03  3.7778e+05\n   PROX_ELDERLYCARE     -1.6212e+06 -9.2050e+04  6.1029e+04  2.8184e+05\n   PROX_URA_GROWTH_AREA -7.2686e+06 -3.0350e+04  4.5869e+04  2.4613e+05\n   PROX_MRT             -4.3781e+07 -6.7282e+05 -2.2115e+05 -7.4593e+04\n   PROX_PARK            -2.9020e+06 -1.6782e+05  1.1601e+05  4.6572e+05\n   PROX_PRIMARY_SCH     -8.6418e+05 -1.6627e+05 -7.7853e+03  4.3222e+05\n   PROX_SHOPPING_MALL   -1.8272e+06 -1.3175e+05 -1.4049e+04  1.3799e+05\n   PROX_BUS_STOP        -2.0579e+06 -7.1461e+04  4.1104e+05  1.2071e+06\n   NO_Of_UNITS          -2.1993e+03 -2.3685e+02 -3.4699e+01  1.1657e+02\n   FAMILY_FRIENDLY      -5.9879e+05 -5.0927e+04  2.6173e+04  2.2481e+05\n   FREEHOLD             -1.6340e+05  4.0765e+04  1.9023e+05  3.7960e+05\n                            Max.\n   Intercept            18758355\n   AREA_SQM                23064\n   AGE                     13303\n   PROX_CBD             11346650\n   PROX_CHILDCARE        2892127\n   PROX_ELDERLYCARE      2465671\n   PROX_URA_GROWTH_AREA  7384059\n   PROX_MRT              1186242\n   PROX_PARK             2588497\n   PROX_PRIMARY_SCH      3381462\n   PROX_SHOPPING_MALL   38038564\n   PROX_BUS_STOP        12081592\n   NO_Of_UNITS              1010\n   FAMILY_FRIENDLY       2072414\n   FREEHOLD              1813995\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 350.3088 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 1085.691 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 41982.22 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41546.74 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 41914.08 \n   Residual sum of squares: 2.528227e+14 \n   R-square value:  0.8912425 \n   Adjusted R-square value:  0.8561185 \n\n   ***********************************************************************\n   Program stops at: 2022-12-11 15:53:23 \n\n\nThe report shows that the AICc the adaptive distance gwr is 42966.76 which is slightly smaller than the AICc of the fixed distance gwr of 42967.14.\n\n\n\n8.3 Visualising GWR Output.\nIn addition to regression residuals, the output feature class table includes fields for observed and predicted y values, condition number (cond), Local R2, residuals, and explanatory variable coefficients and standard errors:\n\nCondition Number: this diagnostic evaluates local collinearity. In the presence of strong local collinearity, results become unstable. Results associated with condition numbers larger than 30, may be unreliable.\nLocal R2: these values range between 0.0 and 1.0 and indicate how well the local regression model fits observed y values. Very low values indicate the local model is performing poorly. Mapping the Local R2 values to see where GWR predicts well and where it predicts poorly may provide clues about important variables that may be missing from the regression model.\nPredicted: these are the estimated (or fitted) y values 3. computed by GWR.\nResiduals: to obtain the residual values, the fitted y values are subtracted from the observed y values. Standardized residuals have a mean of zero and a standard deviation of 1. A cold-to-hot rendered map of standardized residuals can be produce by using these values.\nCoefficient Standard Error: these values measure the reliability of each coefficient estimate. Confidence in those estimates are higher when standard errors are small in relation to the actual coefficient values. Large standard errors may indicate problems with local collinearity.\n\nThey are all stored in a SpatialPointsDataFrame or SpatialPolygonsDataFrame object integrated with fit.points, GWR coefficient estimates, y value, predicted values, coefficient standard errors and t-values in its “data” slot in an object called SDF of the output list.\nIn addition to regression residuals, the output feature class table includes fields for observed and predicted y values, condition number (cond), Local R2, residuals, and explanatory variable coefficients and standard errors:\n\nCondition Number: this diagnostic evaluates local collinearity. In the presence of strong local collinearity, results become unstable. Results associated with condition numbers larger than 30, may be unreliable.\nLocal R2: these values range between 0.0 and 1.0 and indicate how well the local regression model fits observed y values. Very low values indicate the local model is performing poorly. Mapping the Local R2 values to see where GWR predicts well and where it predicts poorly may provide clues about important variables that may be missing from the regression model.\nPredicted: these are the estimated (or fitted) y values 3. computed by GWR.\nResiduals: to obtain the residual values, the fitted y values are subtracted from the observed y values. Standardized residuals have a mean of zero and a standard deviation of 1. A cold-to-hot rendered map of standardized residuals can be produce by using these values.\nCoefficient Standard Error: these values measure the reliability of each coefficient estimate. Confidence in those estimates are higher when standard errors are small in relation to the actual coefficient values. Large standard errors may indicate problems with local collinearity.\n\nThey are all stored in a SpatialPointsDataFrame or SpatialPolygonsDataFrame object integrated with fit.points, GWR coefficient estimates, y value, predicted values, coefficient standard errors and t-values in its “data” slot in an object called SDF of the output list.\n\n\n8.4 Converting SDF into sf data.frame.\nTo visualize the fields in SDF, we need to first covert it into sf data.frame by using the code chunk below.\n\ncondo_resale.sf.adaptive <- st_as_sf(gwr.adaptive$SDF) %>%\n  st_transform(crs=3414)\n\n\ncondo_resale.sf.adaptive.svy21 <- st_transform(condo_resale.sf.adaptive, 3414)\ncondo_resale.sf.adaptive.svy21  \n\nSimple feature collection with 1436 features and 51 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14940.85 ymin: 24765.67 xmax: 43352.45 ymax: 48382.81\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n    Intercept  AREA_SQM        AGE  PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE\n1   2050011.7  9561.892  -9514.634 -120681.9      319266.92       -393417.79\n2   1633128.2 16576.853 -58185.479 -149434.2      441102.18        325188.74\n3   3433608.2 13091.861 -26707.386 -259397.8     -120116.82        535855.81\n4    234358.9 20730.601 -93308.988 2426853.7      480825.28        314783.72\n5   2285804.9  6722.836 -17608.018 -316835.5       90764.78       -137384.61\n6  -3568877.4  6039.581 -26535.592  327306.1     -152531.19       -700392.85\n7  -2874842.4 16843.575 -59166.727 -983577.2     -177810.50       -122384.02\n8   2038086.0  6905.135 -17681.897 -285076.6       70259.40        -96012.78\n9   1718478.4  9580.703 -14401.128  105803.4     -657698.02       -123276.00\n10  3457054.0 14072.011 -31579.884 -234895.4       79961.45        548581.04\n   PROX_URA_GROWTH_AREA    PROX_MRT  PROX_PARK PROX_PRIMARY_SCH\n1            -159980.20  -299742.96 -172104.47        242668.03\n2            -142290.39 -2510522.23  523379.72       1106830.66\n3            -253621.21  -936853.28  209099.85        571462.33\n4           -2679297.89 -2039479.50 -759153.26       3127477.21\n5             303714.81   -44567.05  -10284.62         30413.56\n6             -28051.25   733566.47 1511488.92        320878.23\n7            1397676.38 -2745430.34  710114.74       1786570.95\n8             269368.71   -14552.99   73533.34         53359.73\n9            -361974.72  -476785.32 -132067.59        -40128.92\n10           -150024.38 -1503835.53  574155.47        108996.67\n   PROX_SHOPPING_MALL PROX_BUS_STOP  NO_Of_UNITS FAMILY_FRIENDLY  FREEHOLD\n1          300881.390     1210615.4  104.8290640       -9075.370  303955.6\n2          -87693.378     1843587.2 -288.3441183      310074.664  396221.3\n3         -126732.712     1411924.9   -9.5532945        5949.746  168821.7\n4          -29593.342     7225577.5 -161.3551620     1556178.531 1212515.6\n5           -7490.586      677577.0   42.2659674       58986.951  328175.2\n6          258583.881     1086012.6 -214.3671271      201992.641  471873.1\n7         -384251.210     5094060.5   -0.9212521      359659.512  408871.9\n8          -39634.902      735767.1   30.1741069       55602.506  347075.0\n9          276718.757     2815772.4  675.1615559      -30453.297  503872.8\n10        -454726.822     2123557.0  -21.3044311     -100935.586  213324.6\n         y    yhat    residual CV_Score Stud_residual Intercept_SE AREA_SQM_SE\n1  3000000 2886532   113468.16        0    0.38207013     516105.5    823.2860\n2  3880000 3466801   413198.52        0    1.01433140     488083.5    825.2380\n3  3325000 3616527  -291527.20        0   -0.83780678     963711.4    988.2240\n4  4250000 5435482 -1185481.63        0   -2.84614670     444185.5    617.4007\n5  1400000 1388166    11834.26        0    0.03404453    2119620.6   1376.2778\n6  1320000 1516702  -196701.94        0   -0.72065800   28572883.7   2348.0091\n7  3410000 3266881   143118.77        0    0.41291992     679546.6    893.5893\n8  1420000 1431955   -11955.27        0   -0.03033109    2217773.1   1415.2604\n9  2025000 1832799   192200.83        0    0.52018109     814281.8    943.8434\n10 2550000 2223364   326635.53        0    1.10559735    2410252.0   1271.4073\n      AGE_SE PROX_CBD_SE PROX_CHILDCARE_SE PROX_ELDERLYCARE_SE\n1   5889.782    37411.22          319111.1           120633.34\n2   6226.916    23615.06          299705.3            84546.69\n3   6510.236    56103.77          349128.5           129687.07\n4   6010.511   469337.41          304965.2           127150.69\n5   8180.361   410644.47          698720.6           327371.55\n6  14601.909  5272846.47         1141599.8          1653002.19\n7   8970.629   346164.20          530101.1           148598.71\n8   8661.309   438035.69          742532.8           399221.05\n9  11791.208    89148.35          704630.7           329683.30\n10  9941.980   173532.77          500976.2           281876.74\n   PROX_URA_GROWTH_AREA_SE PROX_MRT_SE PROX_PARK_SE PROX_PRIMARY_SCH_SE\n1                 56207.39    185181.3     205499.6            152400.7\n2                 76956.50    281133.9     229358.7            165150.7\n3                 95774.60    275483.7     314124.3            196662.6\n4                470762.12    279877.1     227249.4            240878.9\n5                474339.56    363830.0     364580.9            249087.7\n6               5496627.21    730453.2    1741712.0            683265.5\n7                371692.97    375511.9     297400.9            344602.8\n8                517977.91    423155.4     440984.4            261251.2\n9                153436.22    285325.4     304998.4            278258.5\n10               239182.57    571355.7     599131.8            331284.8\n   PROX_SHOPPING_MALL_SE PROX_BUS_STOP_SE NO_Of_UNITS_SE FAMILY_FRIENDLY_SE\n1               109268.8         600668.6       218.1258           131474.7\n2                98906.8         410222.1       208.9410           114989.1\n3               119913.3         464156.7       210.9828           146607.2\n4               177104.1         562810.8       361.7767           108726.6\n5               301032.9         740922.4       299.5034           160663.7\n6              2931208.6        1418333.3       602.5571           331727.0\n7               249969.5         821236.4       532.1978           129241.2\n8               351634.0         775038.4       338.6777           171895.1\n9               289872.7         850095.5       439.9037           220223.4\n10              265529.7         631399.2       259.0169           189125.5\n   FREEHOLD_SE Intercept_TV AREA_SQM_TV     AGE_TV PROX_CBD_TV\n1     115954.0    3.9720784   11.614302  -1.615447 -3.22582173\n2     130110.0    3.3460017   20.087361  -9.344188 -6.32792021\n3     141031.5    3.5629010   13.247868  -4.102368 -4.62353528\n4     138239.1    0.5276150   33.577223 -15.524302  5.17080808\n5     210641.1    1.0784029    4.884795  -2.152474 -0.77155660\n6     374347.3   -0.1249043    2.572214  -1.817269  0.06207388\n7     182216.9   -4.2305303   18.849348  -6.595605 -2.84136028\n8     216649.4    0.9189786    4.879056  -2.041481 -0.65080678\n9     220473.7    2.1104224   10.150733  -1.221345  1.18682383\n10    206346.2    1.4343123   11.068059  -3.176418 -1.35360852\n   PROX_CHILDCARE_TV PROX_ELDERLYCARE_TV PROX_URA_GROWTH_AREA_TV PROX_MRT_TV\n1         1.00048819          -3.2612693            -2.846248368 -1.61864578\n2         1.47178634           3.8462625            -1.848971738 -8.92998600\n3        -0.34404755           4.1319138            -2.648105057 -3.40075727\n4         1.57665606           2.4756745            -5.691404992 -7.28705261\n5         0.12990138          -0.4196596             0.640289855 -0.12249416\n6        -0.13361179          -0.4237096            -0.005103357  1.00426206\n7        -0.33542751          -0.8235874             3.760298131 -7.31116712\n8         0.09462126          -0.2405003             0.520038994 -0.03439159\n9        -0.93339393          -0.3739225            -2.359121712 -1.67102293\n10        0.15961128           1.9461735            -0.627237944 -2.63204802\n   PROX_PARK_TV PROX_PRIMARY_SCH_TV PROX_SHOPPING_MALL_TV PROX_BUS_STOP_TV\n1   -0.83749312           1.5923022            2.75358842        2.0154464\n2    2.28192684           6.7019454           -0.88662640        4.4941192\n3    0.66565951           2.9058009           -1.05686949        3.0419145\n4   -3.34061770          12.9836105           -0.16709578       12.8383775\n5   -0.02820944           0.1220998           -0.02488294        0.9145046\n6    0.86781794           0.4696245            0.08821750        0.7656963\n7    2.38773567           5.1844351           -1.53719231        6.2029165\n8    0.16674816           0.2042469           -0.11271635        0.9493299\n9   -0.43301073          -0.1442145            0.95462153        3.3123012\n10   0.95831249           0.3290120           -1.71252687        3.3632555\n   NO_Of_UNITS_TV FAMILY_FRIENDLY_TV FREEHOLD_TV  Local_R2\n1     0.480589953        -0.06902748    2.621347 0.8846744\n2    -1.380026395         2.69655779    3.045280 0.8899773\n3    -0.045279967         0.04058290    1.197050 0.8947007\n4    -0.446007570        14.31276425    8.771149 0.9073605\n5     0.141120178         0.36714544    1.557983 0.9510057\n6    -0.355762335         0.60891234    1.260522 0.9247586\n7    -0.001731033         2.78285441    2.243875 0.8310458\n8     0.089093858         0.32346758    1.602012 0.9463936\n9     1.534793921        -0.13828365    2.285410 0.8380365\n10   -0.082251138        -0.53369623    1.033819 0.9080753\n                    geometry\n1  POINT (22085.12 29951.54)\n2   POINT (25656.84 34546.2)\n3   POINT (23963.99 32890.8)\n4  POINT (27044.28 32319.77)\n5  POINT (41042.56 33743.64)\n6   POINT (39717.04 32943.1)\n7   POINT (28419.1 33513.37)\n8  POINT (40763.57 33879.61)\n9  POINT (23595.63 28884.78)\n10 POINT (24586.56 33194.31)\n\n\n\ngwr.adaptive.output <- as.data.frame(gwr.adaptive$SDF)\ncondo_resale.sf.adaptive <- cbind(condo_resale.res.sf, as.matrix(gwr.adaptive.output))\n\nNext, glimpse() is used to display the content of condo_resale.sf.adaptive sf data frame.\n\nglimpse(condo_resale.sf.adaptive)\n\nRows: 1,436\nColumns: 103\n$ POSTCODE                <dbl> 118635, 288420, 267833, 258380, 467169, 466472…\n$ SELLING_PRICE           <dbl> 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ AREA_SQM                <dbl> 309, 290, 248, 127, 145, 139, 218, 141, 165, 1…\n$ AGE                     <dbl> 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22,…\n$ PROX_CBD                <dbl> 7.941259, 6.609797, 6.898000, 4.038861, 11.783…\n$ PROX_CHILDCARE          <dbl> 0.16597932, 0.28027246, 0.42922669, 0.39473543…\n$ PROX_ELDERLYCARE        <dbl> 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.…\n$ PROX_URA_GROWTH_AREA    <dbl> 6.618741, 7.505109, 6.463887, 4.906512, 6.4106…\n$ PROX_HAWKER_MARKET      <dbl> 1.76542207, 0.54507614, 0.37789301, 1.68259969…\n$ PROX_KINDERGARTEN       <dbl> 0.05835552, 0.61592412, 0.14120309, 0.38200076…\n$ PROX_MRT                <dbl> 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.…\n$ PROX_PARK               <dbl> 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.…\n$ PROX_PRIMARY_SCH        <dbl> 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.…\n$ PROX_TOP_PRIMARY_SCH    <dbl> 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.…\n$ PROX_SHOPPING_MALL      <dbl> 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.…\n$ PROX_SUPERMARKET        <dbl> 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.…\n$ PROX_BUS_STOP           <dbl> 0.10336166, 0.28673408, 0.28504777, 0.29872340…\n$ NO_Of_UNITS             <dbl> 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34…\n$ FAMILY_FRIENDLY         <dbl> 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD                <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR          <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ ...24                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...25                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...26                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...27                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...28                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...29                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...30                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...31                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...32                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...33                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...34                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...35                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...36                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...37                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...38                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...39                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...40                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...41                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...42                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...43                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...44                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...45                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...46                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...47                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...48                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...49                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ LOG_SELLING_PRICE       <dbl> 14.91412, 15.17135, 15.01698, 15.26243, 14.151…\n$ MLR_RES                 <dbl> -1489099.55, 415494.57, 194129.69, 1088992.71,…\n$ Intercept               <dbl> 2050011.67, 1633128.24, 3433608.17, 234358.91,…\n$ AREA_SQM.1              <dbl> 9561.892, 16576.853, 13091.861, 20730.601, 672…\n$ AGE.1                   <dbl> -9514.634, -58185.479, -26707.386, -93308.988,…\n$ PROX_CBD.1              <dbl> -120681.94, -149434.22, -259397.77, 2426853.66…\n$ PROX_CHILDCARE.1        <dbl> 319266.925, 441102.177, -120116.816, 480825.28…\n$ PROX_ELDERLYCARE.1      <dbl> -393417.795, 325188.741, 535855.806, 314783.72…\n$ PROX_URA_GROWTH_AREA.1  <dbl> -159980.203, -142290.389, -253621.206, -267929…\n$ PROX_MRT.1              <dbl> -299742.96, -2510522.23, -936853.28, -2039479.…\n$ PROX_PARK.1             <dbl> -172104.47, 523379.72, 209099.85, -759153.26, …\n$ PROX_PRIMARY_SCH.1      <dbl> 242668.03, 1106830.66, 571462.33, 3127477.21, …\n$ PROX_SHOPPING_MALL.1    <dbl> 300881.390, -87693.378, -126732.712, -29593.34…\n$ PROX_BUS_STOP.1         <dbl> 1210615.44, 1843587.22, 1411924.90, 7225577.51…\n$ NO_Of_UNITS.1           <dbl> 104.8290640, -288.3441183, -9.5532945, -161.35…\n$ FAMILY_FRIENDLY.1       <dbl> -9075.370, 310074.664, 5949.746, 1556178.531, …\n$ FREEHOLD.1              <dbl> 303955.61, 396221.27, 168821.75, 1212515.58, 3…\n$ y                       <dbl> 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ yhat                    <dbl> 2886531.8, 3466801.5, 3616527.2, 5435481.6, 13…\n$ residual                <dbl> 113468.16, 413198.52, -291527.20, -1185481.63,…\n$ CV_Score                <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Stud_residual           <dbl> 0.38207013, 1.01433140, -0.83780678, -2.846146…\n$ Intercept_SE            <dbl> 516105.5, 488083.5, 963711.4, 444185.5, 211962…\n$ AREA_SQM_SE             <dbl> 823.2860, 825.2380, 988.2240, 617.4007, 1376.2…\n$ AGE_SE                  <dbl> 5889.782, 6226.916, 6510.236, 6010.511, 8180.3…\n$ PROX_CBD_SE             <dbl> 37411.22, 23615.06, 56103.77, 469337.41, 41064…\n$ PROX_CHILDCARE_SE       <dbl> 319111.1, 299705.3, 349128.5, 304965.2, 698720…\n$ PROX_ELDERLYCARE_SE     <dbl> 120633.34, 84546.69, 129687.07, 127150.69, 327…\n$ PROX_URA_GROWTH_AREA_SE <dbl> 56207.39, 76956.50, 95774.60, 470762.12, 47433…\n$ PROX_MRT_SE             <dbl> 185181.3, 281133.9, 275483.7, 279877.1, 363830…\n$ PROX_PARK_SE            <dbl> 205499.6, 229358.7, 314124.3, 227249.4, 364580…\n$ PROX_PRIMARY_SCH_SE     <dbl> 152400.7, 165150.7, 196662.6, 240878.9, 249087…\n$ PROX_SHOPPING_MALL_SE   <dbl> 109268.8, 98906.8, 119913.3, 177104.1, 301032.…\n$ PROX_BUS_STOP_SE        <dbl> 600668.6, 410222.1, 464156.7, 562810.8, 740922…\n$ NO_Of_UNITS_SE          <dbl> 218.1258, 208.9410, 210.9828, 361.7767, 299.50…\n$ FAMILY_FRIENDLY_SE      <dbl> 131474.73, 114989.07, 146607.22, 108726.62, 16…\n$ FREEHOLD_SE             <dbl> 115954.0, 130110.0, 141031.5, 138239.1, 210641…\n$ Intercept_TV            <dbl> 3.9720784, 3.3460017, 3.5629010, 0.5276150, 1.…\n$ AREA_SQM_TV             <dbl> 11.614302, 20.087361, 13.247868, 33.577223, 4.…\n$ AGE_TV                  <dbl> -1.6154474, -9.3441881, -4.1023685, -15.524301…\n$ PROX_CBD_TV             <dbl> -3.22582173, -6.32792021, -4.62353528, 5.17080…\n$ PROX_CHILDCARE_TV       <dbl> 1.000488185, 1.471786337, -0.344047555, 1.5766…\n$ PROX_ELDERLYCARE_TV     <dbl> -3.26126929, 3.84626245, 4.13191383, 2.4756745…\n$ PROX_URA_GROWTH_AREA_TV <dbl> -2.846248368, -1.848971738, -2.648105057, -5.6…\n$ PROX_MRT_TV             <dbl> -1.61864578, -8.92998600, -3.40075727, -7.2870…\n$ PROX_PARK_TV            <dbl> -0.83749312, 2.28192684, 0.66565951, -3.340617…\n$ PROX_PRIMARY_SCH_TV     <dbl> 1.59230221, 6.70194543, 2.90580089, 12.9836104…\n$ PROX_SHOPPING_MALL_TV   <dbl> 2.753588422, -0.886626400, -1.056869486, -0.16…\n$ PROX_BUS_STOP_TV        <dbl> 2.0154464, 4.4941192, 3.0419145, 12.8383775, 0…\n$ NO_Of_UNITS_TV          <dbl> 0.480589953, -1.380026395, -0.045279967, -0.44…\n$ FAMILY_FRIENDLY_TV      <dbl> -0.06902748, 2.69655779, 0.04058290, 14.312764…\n$ FREEHOLD_TV             <dbl> 2.6213469, 3.0452799, 1.1970499, 8.7711485, 1.…\n$ Local_R2                <dbl> 0.8846744, 0.8899773, 0.8947007, 0.9073605, 0.…\n$ coords.x1               <dbl> 22085.12, 25656.84, 23963.99, 27044.28, 41042.…\n$ coords.x2               <dbl> 29951.54, 34546.20, 32890.80, 32319.77, 33743.…\n$ geometry                <POINT [m]> POINT (22085.12 29951.54), POINT (25656.…\n\n\n\nsummary(gwr.adaptive$SDF$yhat)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n  171347  1102001  1385528  1751842  1982307 13887901 \n\n\n\n\n8.5 Visualizing local R2.\nThe code chunks below is used to create an interactive point symbol map.\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\ntm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"Local_R2\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\nWarning: The shape mpsz_svy21 is invalid (after reprojection). See\nsf::st_is_valid\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\n\n\n\n8.6 Visualizing coefficient estimates.\nThe code chunks below is used to create an interactive point symbol map.\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\nAREA_SQM_SE <- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_SE\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\nAREA_SQM_TV <- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_TV\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\ntmap_arrange(AREA_SQM_SE, AREA_SQM_TV, \n             asp=1, ncol=2,\n             sync = TRUE)\n\nWarning: The shape mpsz_svy21 is invalid (after reprojection). See\nsf::st_is_valid\n\nWarning: The shape mpsz_svy21 is invalid (after reprojection). See\nsf::st_is_valid\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\n\n\n\n8.7 By URA Planning Region.\n\ntm_shape(mpsz_svy21[mpsz_svy21$REGION_N==\"CENTRAL REGION\", ])+\n  tm_polygons()+\ntm_shape(condo_resale.sf.adaptive) + \n  tm_bubbles(col = \"Local_R2\",\n           size = 0.15,\n           border.col = \"gray60\",\n           border.lwd = 1)\n\nWarning: The shape mpsz_svy21[mpsz_svy21$REGION_N == \"CENTRAL REGION\", ] is\ninvalid. See sf::st_is_valid"
  },
  {
    "objectID": "InClass_Ex02/Africa_Water/Take_Home_Ex1.html",
    "href": "InClass_Ex02/Africa_Water/Take_Home_Ex1.html",
    "title": "Take Home Ex 1 : Nigeria Water Functional & Non Functional Water Points",
    "section": "",
    "text": "Water is an important resource to mankind. Clean and accessible water is critical to human health. It provides a healthy environment, a sustainable economy, reduces poverty and ensures peace and security. Yet over 40% of the global population does not have access to sufficient clean water. By 2025, 1.8 billion people will be living in countries or regions with absolute water scarcity, according to UN-Water. The lack of water poses a major threat to several sectors, including food security. Agriculture uses about 70% of the world’s accessible freshwater.\nDeveloping countries are most affected by water shortages and poor water quality. Up to 80% of illnesses in the developing world are linked to inadequate water supply and sanitation. Despite technological advancement, providing clean water to the rural community is still a major development issue in many countries globally, especially countries in the Africa continent.\nTo address the issue of providing clean and sustainable water supply to the rural community, a global Water Point Data Exchange (WPdx) project has been initiated. The main aim of this initiative is to collect water point related data from rural areas at the water point or small water scheme level and share the data via WPdx Data Repository, a cloud-based data library. What is so special of this project is that data are collected based on WPDx Data Standard.\n\n\n\nWater is life"
  },
  {
    "objectID": "InClass_Ex02/Africa_Water/Take_Home_Ex1.html#data-wrangling.",
    "href": "InClass_Ex02/Africa_Water/Take_Home_Ex1.html#data-wrangling.",
    "title": "Take Home Ex 1 : Nigeria Water Functional & Non Functional Water Points",
    "section": "4. Data Wrangling.",
    "text": "4. Data Wrangling.\n\n4.1 Recoding NA values into string.\nIn the code chunk below, replace_na() is used to re-code all the NA values in status_cle field into Unknown.\n\n#|eval: false\nwp_nga <- read_rds(\"C:/Yogendra345/ISSS624_A01/InClass_Ex02/Africa_Water/data/new_data1/RDS/wp_nga.rds\") %>%\n  mutate(status_cle = replace_na(status_cle, \"Unknown\"))\n\n\n\n\n4.2 Exploratory Data Analysis (EDA).\nIn the code chunk below, freq() of funModeling package is used to display the distribution of status_cle field in wp_nga.\n\nfreq(data=wp_nga, \n     input = 'status_cle')\n\nAbove bar plot shows us that, we have 48.29% functional water points and 30.93% non-functional water points.\nTotal number of water points 7 + 175 + 234 + 1686 + 2403 + 4579 + 10656 + 29385 + 45883 = 95008."
  },
  {
    "objectID": "InClass_Ex02/Africa_Water/Take_Home_Ex1.html#extracting-water-point-data.",
    "href": "InClass_Ex02/Africa_Water/Take_Home_Ex1.html#extracting-water-point-data.",
    "title": "Take Home Ex 1 : Nigeria Water Functional & Non Functional Water Points",
    "section": "5. Extracting Water Point Data.",
    "text": "5. Extracting Water Point Data.\nIn this section, we will extract the water point records by using classes in status_cle field. If we see the source data, we observe that water points are classified as -\n\nFunctional\nFunctional but not in use\nFunctional but needs repair\nUnknown\nNon-functional\nNon-functional due to dry season\nAbandoned / Decommissioned\n\n\n5.1 Extracting funtional water point.\n\nwpt_functional <- wp_nga %>%\n  filter(status_cle %in%\n           c(\"Functional\", \n             \"Functional but not in use\",\n             \"Functional but needs repair\"))\n\nLet us draw a bar plot graph to visualize water points using freq function of funmodeling package.\n\nfreq(data=wpt_functional, \n     input = 'status_cle')\n\n\n\n5.2 Extracting ‘Non-funtional’ water point.\nIn the code chunk below, filter() of dplyr is used to select non-functional water points.\n\nwpt_nonfunctional <- wp_nga %>%\n  filter(status_cle %in%\n           c(\"Abandoned/Decommissioned\", \n             \"Abandoned\",\n             \"Non-Functional\",\n             \"Non functional due to dry season\",\n             \"Non-Functional due to dry season\"))\n\n\nfreq(data=wpt_nonfunctional, \n     input = 'status_cle')\n\n\n\n5.4 Extracting water point with ‘Unknown’ class.\nIn the code chunk below, filter() of dplyr is used to select water points with unknown status.\n\nwpt_unknown <- wp_nga %>%\n  filter(status_cle == \"Unknown\")\n\n\n\n5.4 Performing Point-in-Polygon Count.\n\nnga_wp <- nga %>% \n  mutate(`total wpt` = lengths(\n    st_intersects(nga, wp_nga))) %>%\n  mutate(`wpt functional` = lengths(\n    st_intersects(nga, wpt_functional))) %>%\n  mutate(`wpt non-functional` = lengths(\n    st_intersects(nga, wpt_nonfunctional))) %>%\n  mutate(`wpt unknown` = lengths(\n    st_intersects(nga, wpt_unknown)))\n\n\n\n\n\n\n5.5 Saving the Analytical Data Table.\n\nnga_wp <- nga_wp %>%\n  mutate(pct_functional = `wpt functional`/`total wpt`) %>%\n  mutate(`pct_non-functional` = `wpt non-functional`/`total wpt`) %>%\n  select(3:4, 9:10, 18:23)\n\nThings to learn from the code chunk above:\n\nmutate() of dplyr package is used to derive two fields namely pct_functional and pct_non-functional.\nto keep the file size small, select() of dplyr is used to retain only field 3,4,9,10, 18,19,20,21,22,and 23.\n\nNow, we have the tidy sf data table subsequent analysis. We will save the sf data table into rds format.\n\nwrite_rds(nga_wp, \"C:/Yogendra345/ISSS624_A01/InClass_Ex02/Africa_Water/data/new_data1/RDS/nga_wp.rds\")"
  },
  {
    "objectID": "InClass_Ex02/Africa_Water/Take_Home_Ex1.html#visualizing-the-spatial-distribution-of-water-points.",
    "href": "InClass_Ex02/Africa_Water/Take_Home_Ex1.html#visualizing-the-spatial-distribution-of-water-points.",
    "title": "Take Home Ex 1 : Nigeria Water Functional & Non Functional Water Points",
    "section": "6. Visualizing the spatial distribution of water points.",
    "text": "6. Visualizing the spatial distribution of water points.\n\nnga_wp <- read_rds(\"C:/Yogendra345/ISSS624_A01/InClass_Ex02/Africa_Water/data/new_data1/RDS/nga_wp1.rds\")\ntotal <- qtm(nga_wp, \"total wpt\")+\ntm_layout(legend.outside = FALSE,\n              legend.stack = \"vertical\",\n              legend.text.size =0.30,\n              legend.title.size=0.4)\nwp_functional <- qtm(nga_wp, \"wpt functional\")+\ntm_layout(legend.outside = FALSE,\n              legend.stack = \"vertical\",\n              legend.text.size =0.3,\n              legend.title.size=0.4)\nwp_nonfunctional <- qtm(nga_wp, \"wpt non-functional\")+\ntm_layout(legend.outside = FALSE,\n              legend.stack = \"vertical\",\n              legend.text.size =0.3,\n              legend.title.size=0.4)\nunknown <- qtm(nga_wp, \"wpt unknown\")+\ntm_layout(legend.outside = FALSE,\n              legend.stack = \"vertical\",\n              legend.text.size =0.35,\n              legend.title.size=0.4)\ntmap_arrange(total, wp_functional, wp_nonfunctional, unknown, asp=1, ncol=2)\n\n\n\n\n\ntm_shape(nga_wp)+\n  tm_fill(c(\"wpt non-functional\", \"wpt functional\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.7) +\n  tmap_style(\"classic\")\n\ntmap style set to \"classic\"\n\n\nother available styles are: \"white\", \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"watercolor\""
  },
  {
    "objectID": "InClass_Ex02/Africa_Water/Take_Home_Ex1.html#computing-contiguity-spatial-weights.",
    "href": "InClass_Ex02/Africa_Water/Take_Home_Ex1.html#computing-contiguity-spatial-weights.",
    "title": "Take Home Ex 1 : Nigeria Water Functional & Non Functional Water Points",
    "section": "7. Computing Contiguity Spatial Weights.",
    "text": "7. Computing Contiguity Spatial Weights.\nIn this section we will further analyse using poly2nb() of spdep package to compute contiguity weight matrices for the study area. This function builds a neighbours list based on regions with contiguous boundaries.\nIMPORTANT NOTE - We can pass a “queen” argument that takes TRUE or FALSE as options. If we do not specify this argument the default is set to TRUE, that is, if we don’t specify queen = FALSE this function will return a list of first order neighbours using the Queen criteria.\n\n7.1 Computing (QUEEN) contiguity based neighbors.\nThe code chunk below is used to compute Queen contiguity weight matrix.\n\nwm_q <- poly2nb(nga_wp, queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 4440 \nPercentage nonzero weights: 0.7411414 \nAverage number of links: 5.736434 \n1 region with no links:\n86\nLink number distribution:\n\n  0   1   2   3   4   5   6   7   8   9  10  11  12  14 \n  1   2  14  57 125 182 140 122  72  41  12   4   1   1 \n2 least connected regions:\n138 560 with 1 link\n1 most connected region:\n508 with 14 links\n\n\nThe summary report above shows that there are 774 area units in Nigeria.\nThe most connected unit has 14 neighbors and there are 2 regions with just one neighbor.\nFor each polygon in our polygon object, wm_q lists all neighboring polygons. For example, to see the neighbors for the first polygon in the object, type:\n\nwm_q[[1]]\n\n[1]   2 548 624 721\n\n\nPolygon 1 has 4 neighbors.\n\nwm_q[[508]]\n\n [1]  20 106 123 171 174 239 402 419 468 471 494 511 644 753\n\n\nPolygon 508 has 14 neighbors.\n\nnga_wp$shapeName[508]\n\n[1] \"Mokwa\"\n\n\n\nnga_wp$shapeName[c(20,106,123,171,174,239,402,419,468,471,494,511,644,753)]\n\n [1] \"Agaie\"    \"Bida\"     \"Borgu\"    \"Edati\"    \"Edu\"      \"Gbako\"   \n [7] \"Kaiama\"   \"Katcha\"   \"Lavun\"    \"Lokoja\"   \"Mashegu\"  \"Moro\"    \n[13] \"Pategi\"   \"Wushishi\"\n\n\nWe can retrieve the Functional Water Points of these 14 regions by using the code chunk below.\n\nnb1 <- wm_q[[508]]\nnb1 <- nga_wp$`wpt functional`[nb1]\nnb1\n\n [1]  47 211  80 103 126 101 114  22  65  41  18 101 154  72\n\n\n\nstr(wm_q)\n\nList of 774\n $ : int [1:4] 2 548 624 721\n $ : int [1:3] 1 624 721\n $ : int [1:3] 261 447 507\n $ : int [1:7] 257 263 436 446 454 466 709\n $ : int [1:5] 203 208 331 617 738\n $ : int [1:7] 170 217 218 337 379 553 758\n $ : int [1:6] 8 176 214 281 349 555\n $ : int [1:4] 7 214 544 555\n $ : int [1:5] 18 104 337 601 757\n $ : int [1:7] 25 216 325 364 365 528 632\n $ : int [1:7] 26 27 43 157 191 524 565\n $ : int [1:8] 135 263 417 446 520 690 695 709\n $ : int [1:5] 31 37 471 583 584\n $ : int [1:8] 170 362 363 546 577 581 589 626\n $ : int [1:7] 49 82 177 297 306 352 580\n $ : int [1:5] 30 187 328 357 360\n $ : int [1:3] 35 638 639\n $ : int [1:5] 9 19 104 576 601\n $ : int [1:6] 18 103 104 376 574 576\n $ : int [1:5] 419 466 471 508 641\n $ : int [1:5] 61 162 269 520 596\n $ : int [1:3] 49 297 326\n $ : int [1:5] 54 291 537 618 619\n $ : int [1:4] 123 527 673 761\n $ : int [1:7] 10 181 216 314 325 366 552\n $ : int [1:4] 11 27 191 562\n $ : int [1:5] 11 26 562 565 762\n $ : int [1:7] 29 173 300 315 316 358 369\n $ : int [1:7] 28 173 182 358 378 460 591\n $ : int [1:8] 16 38 39 186 192 329 357 360\n $ : int [1:6] 13 94 211 471 561 584\n $ : int [1:3] 51 62 693\n $ : int [1:6] 166 227 238 655 743 750\n $ : int [1:7] 42 104 213 330 553 559 757\n $ : int [1:7] 17 275 295 378 460 638 639\n $ : int [1:8] 50 107 164 247 408 432 455 759\n $ : int [1:11] 13 38 40 211 212 320 570 583 584 620 ...\n $ : int [1:7] 30 37 39 40 41 192 320\n $ : int [1:4] 30 38 186 320\n $ : int [1:4] 37 38 41 620\n $ : int [1:5] 38 40 192 620 634\n $ : int [1:4] 34 136 137 559\n $ : int [1:3] 11 157 524\n $ : int [1:6] 45 290 303 328 360 634\n $ : int [1:3] 44 290 303\n $ : int [1:4] 438 521 668 742\n $ : int [1:5] 166 234 238 698 750\n $ : int [1:4] 113 265 386 701\n $ : int [1:7] 15 22 51 297 326 580 623\n $ : int [1:8] 36 98 107 409 416 432 681 696\n $ : int [1:8] 32 49 62 207 461 580 623 693\n $ : int [1:6] 53 78 80 165 602 636\n $ : int [1:8] 52 80 199 280 602 621 622 739\n $ : int [1:7] 23 79 293 294 532 537 618\n $ : int [1:3] 122 430 605\n $ : int [1:5] 77 376 533 576 728\n $ : int [1:4] 58 199 322 621\n $ : int [1:7] 57 322 323 522 523 621 622\n $ : int [1:5] 88 128 493 700 714\n $ : int [1:7] 61 158 561 578 592 596 626\n $ : int [1:5] 21 60 269 596 626\n $ : int [1:6] 32 51 207 461 462 693\n $ : int [1:6] 90 237 384 416 467 765\n $ : int [1:8] 65 74 109 113 131 148 251 407\n $ : int [1:5] 64 74 113 265 701\n $ : int [1:6] 103 104 288 351 559 574\n $ : int [1:7] 304 348 511 594 609 640 694\n $ : int [1:2] 157 191\n $ : int [1:9] 115 140 146 248 273 274 473 500 512\n $ : int [1:5] 71 301 341 343 610\n $ : int [1:9] 70 173 298 299 301 343 344 550 625\n $ : int [1:8] 73 361 594 607 609 638 639 665\n $ : int [1:6] 72 361 374 377 665 666\n $ : int [1:6] 64 65 109 683 701 754\n $ : int [1:7] 272 398 422 433 485 501 768\n $ : int [1:8] 254 287 427 459 547 647 677 751\n $ : int [1:6] 56 533 534 579 716 728\n $ : int [1:7] 52 79 80 165 215 532 579\n $ : int [1:5] 54 78 532 579 618\n $ : int [1:5] 52 53 78 215 739\n $ : int [1:5] 99 145 233 426 689\n $ : int [1:3] 15 352 580\n $ : int [1:4] 132 258 383 414\n $ : int [1:5] 123 148 437 673 692\n $ : int [1:7] 105 156 394 654 675 707 712\n $ : int 0\n $ : int [1:6] 151 221 226 399 410 486\n $ : int [1:6] 59 150 489 648 700 714\n $ : int [1:7] 260 408 416 463 674 681 759\n $ : int [1:9] 63 163 232 236 237 452 497 710 765\n $ : int [1:4] 160 271 406 440\n $ : int [1:6] 119 390 392 487 656 668\n $ : int [1:6] 123 354 402 607 665 666\n $ : int [1:8] 31 158 436 471 520 561 596 709\n $ : int [1:6] 391 392 405 469 656 708\n $ : int [1:7] 97 139 389 403 420 451 653\n $ : int [1:5] 96 389 451 662 773\n $ : int [1:5] 50 231 432 696 708\n $ : int [1:5] 81 426 689 760 769\n  [list output truncated]\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"region.id\")= chr [1:774] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language poly2nb(pl = nga_wp, queen = TRUE)\n - attr(*, \"type\")= chr \"queen\"\n - attr(*, \"sym\")= logi TRUE\n\n\n\n\n7.2 Creating (ROOK) contiguity based neighbors.\nThe code chunk below is used to compute Rook contiguity weight matrix.\n\nwm_r <- poly2nb(nga_wp, queen=FALSE)\nsummary(wm_r)\n\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 4420 \nPercentage nonzero weights: 0.7378029 \nAverage number of links: 5.710594 \n1 region with no links:\n86\nLink number distribution:\n\n  0   1   2   3   4   5   6   7   8   9  10  11  12  14 \n  1   2  14  59 127 181 141 124  66  42  11   4   1   1 \n2 least connected regions:\n138 560 with 1 link\n1 most connected region:\n508 with 14 links\n\n\nThe summary report above shows that there are 774 area units in Nigeria. The most connect area unit which is 508, has 14 neighbors. There are two area units with only one neighbors.\n\n\n7.3 Visualizing contiguity weights.\nA connectivity graph takes a point and displays a line to each neighboring point. We are working with polygons at the moment, so we will need to get points in order to make our connectivity graphs. The most typically method for this will be polygon centroids. We will calculate these in the sf package before moving onto the graphs. Getting Latitude and Longitude of Polygon Centroids.\n\nlongitude <- map_dbl(nga_wp$geometry, ~st_centroid(.x)[[1]])\n\nWe do the same for latitude with one key difference. We access the second value per each centroid with [[2]].\n\nlatitude <- map_dbl(nga_wp$geometry, ~st_centroid(.x)[[2]])\n\nNow that we have latitude and longitude, we use cbind to put longitude and latitude into the same object.\n\ncoords <- cbind(longitude, latitude)\n\nWe check the first few observations to see if things are formatted correctly.\n\nhead(coords)\n\n     longitude  latitude\n[1,]  7.372450  5.113107\n[2,]  7.352131  5.083219\n[3,] 13.322900 13.428835\n[4,]  6.847325  8.825812\n[5,]  7.771541  5.022061\n[6,]  8.219654  6.259845\n\n\n\n7.3.1 Plotting Queen contiguity based neighbors map.\n\nplot(nga_wp$geometry, border=\"lightgrey\")\nplot(wm_q, coords, pch = 19, cex = 0.36, add = TRUE, col= \"red\")\n\n\n\n\n\n\n7.3.2 Plotting Rook contiguity based neighbors map.\n\nplot(nga_wp$geometry, border=\"lightgrey\")\nplot(wm_r, coords, pch = 19, cex = 0.36, add = TRUE, col = \"red\")\n\n\n\n\n7.3.3 Plotting both Queen and Rook contiguity based neighbors maps.\n\npar(mfrow=c(1,2))\nplot(nga_wp$geometry, border=\"lightgrey\")\nplot(wm_q, coords, pch = 19, cex = 0.26, add = TRUE, col= \"red\", main=\"Queen Contiguity\")\nplot(nga_wp$geometry, border=\"lightgrey\")\nplot(wm_r, coords, pch = 19, cex = 0.26, add = TRUE, col = \"red\", main=\"Rook Contiguity\")\n\n\n\n\n\n\n\n7.4 Computing distance based neighbors.\nIn this section, we will derive distance-based weight matrices by using dnearneigh() of spdep package.\nThe function identifies neighbors of region points by Euclidean distance with a distance band with lower d1= and upper d2= bounds controlled by the bounds= argument. If unprojected coordinates are used and either specified in the coordinates object x or with x as a two column matrix and longlat=TRUE, great circle distances in km will be calculated assuming the WGS84 reference ellipsoid.\n\n7.4.1 Determine the cut-off distance\nFirstly, we need to determine the upper limit for distance band by using the steps below:\n\nReturn a matrix with the indices of points belonging to the set of the k nearest neighbors of each other by using knearneigh() of spdep.\nConvert the knn object returned by knearneigh() into a neighbors list of class nb with a list of integer vectors containing neighbour region number ids by using knn2nb().\nReturn the length of neighbour relationship edges by using nbdists() of spdep. The function returns in the units of the coordinates if the coordinates are projected, in km otherwise.\nRemove the list structure of the returned object by using unlist().\n\n\n#coords <- coordinates(hunan)\nk1 <- knn2nb(knearneigh(coords))\nk1dists <- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  2.662  12.815  20.242  22.031  27.706  71.661 \n\n\nThe summary report shows that the largest first nearest neighbor distance is 71.661 km, so using this as the upper threshold gives certainty that all units will have at least one neighbor.\n\n\n7.4.2 Computing fixed distance weight matrix.\nNow, we will compute the distance weight matrix by using dnearneigh() as shown in the code chunk below.\n\nwm_d72 <- dnearneigh(coords, 0, 72, longlat = TRUE)\nwm_d72\n\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 18112 \nPercentage nonzero weights: 3.023323 \nAverage number of links: 23.40052 \n\n\nNext, we will use str() to display the content of wm_d72 weight matrix.\n\nstr(wm_d72)\n\nList of 774\n $ : int [1:63] 2 5 10 25 55 66 68 103 122 181 ...\n $ : int [1:62] 1 5 10 25 55 66 68 103 122 181 ...\n $ : int [1:2] 261 447\n $ : int [1:10] 12 20 257 263 446 454 466 641 690 695\n $ : int [1:56] 1 2 55 66 104 136 137 169 184 202 ...\n $ : int [1:21] 9 14 18 19 56 170 217 218 330 337 ...\n $ : int [1:19] 8 15 22 176 177 214 281 282 283 295 ...\n $ : int [1:32] 7 15 22 49 176 177 214 275 276 277 ...\n $ : int [1:26] 6 18 19 56 66 77 103 104 217 218 ...\n $ : int [1:63] 1 2 23 25 66 103 181 191 203 204 ...\n $ : int [1:22] 26 27 43 68 126 157 190 191 204 336 ...\n $ : int [1:11] 4 135 257 263 401 417 429 446 454 690 ...\n $ : int [1:13] 31 37 38 40 94 211 320 393 436 471 ...\n $ : int [1:24] 6 170 193 194 195 217 309 310 311 362 ...\n $ : int [1:27] 7 8 22 32 49 51 62 82 176 177 ...\n $ : int [1:37] 30 38 39 41 44 45 70 71 120 124 ...\n $ : int [1:34] 28 29 35 72 172 173 178 179 182 275 ...\n $ : int [1:29] 6 9 19 56 66 77 103 104 217 218 ...\n $ : int [1:41] 6 9 18 25 56 66 77 103 104 181 ...\n $ : int [1:7] 4 106 239 263 419 454 466\n $ : int [1:9] 60 61 162 269 484 520 578 596 626\n $ : int [1:31] 7 8 15 32 49 51 62 82 176 177 ...\n $ : int [1:64] 10 25 52 53 54 56 58 77 78 79 ...\n $ : int [1:5] 123 476 527 673 761\n $ : int [1:68] 1 2 10 19 23 54 56 66 77 103 ...\n $ : int [1:30] 11 27 43 68 157 190 191 204 336 370 ...\n $ : int [1:24] 11 26 43 68 157 191 204 336 370 371 ...\n $ : int [1:43] 17 29 35 70 71 124 172 173 178 179 ...\n $ : int [1:45] 17 28 35 70 71 124 172 173 178 179 ...\n $ : int [1:30] 16 38 39 40 41 44 45 175 185 186 ...\n $ : int [1:13] 13 37 94 158 210 211 212 289 308 561 ...\n $ : int [1:28] 15 22 49 51 62 82 177 196 207 214 ...\n $ : int [1:29] 47 111 130 142 145 155 166 219 227 233 ...\n $ : int [1:11] 42 86 104 136 137 213 375 553 559 733 ...\n $ : int [1:32] 17 28 29 172 173 178 179 182 275 276 ...\n $ : int [1:8] 50 107 247 408 432 455 681 759\n $ : int [1:21] 13 31 38 39 40 41 186 192 197 198 ...\n $ : int [1:25] 13 16 30 37 39 40 41 44 186 192 ...\n $ : int [1:27] 16 30 37 38 40 41 44 185 186 192 ...\n $ : int [1:21] 13 30 37 38 39 41 44 186 192 211 ...\n $ : int [1:22] 16 30 37 38 39 40 44 45 186 192 ...\n $ : int [1:20] 34 86 136 137 184 202 285 286 375 499 ...\n $ : int [1:19] 11 26 27 68 122 126 157 190 191 246 ...\n $ : int [1:27] 16 30 38 39 40 41 45 70 175 186 ...\n $ : int [1:27] 16 30 41 44 70 175 187 188 192 290 ...\n $ : int [1:12] 119 380 387 417 423 429 438 459 521 656 ...\n $ : int [1:24] 33 111 127 130 155 166 227 234 238 242 ...\n $ : int [1:12] 64 65 74 113 131 265 386 407 428 482 ...\n $ : int [1:30] 8 15 22 32 51 62 82 176 177 207 ...\n $ : int [1:4] 36 107 409 432\n $ : int [1:27] 15 22 32 49 62 82 177 207 214 284 ...\n $ : int [1:47] 23 53 54 57 58 77 78 79 80 165 ...\n $ : int [1:37] 23 52 54 57 58 78 79 80 165 189 ...\n $ : int [1:58] 23 25 52 53 56 57 58 77 78 79 ...\n $ : int [1:33] 1 2 5 68 122 157 169 184 190 208 ...\n $ : int [1:51] 6 9 18 19 23 25 54 66 77 78 ...\n $ : int [1:34] 52 53 54 58 78 79 80 165 189 197 ...\n $ : int [1:37] 23 52 53 54 57 78 79 165 189 197 ...\n $ : int [1:5] 128 129 493 700 748\n $ : int [1:14] 21 61 158 269 310 311 561 563 578 589 ...\n $ : int [1:11] 21 60 162 268 269 484 578 589 592 596 ...\n $ : int [1:28] 15 22 32 49 51 82 177 196 207 214 ...\n $ : int [1:5] 384 416 467 765 772\n $ : int [1:7] 48 65 74 113 131 265 407\n $ : int [1:11] 48 64 74 109 113 265 386 407 683 701 ...\n $ : int [1:47] 1 2 5 9 10 18 19 25 56 103 ...\n $ : int [1:25] 72 120 124 179 182 304 305 346 347 348 ...\n $ : int [1:30] 1 2 11 26 27 43 55 122 157 190 ...\n $ : int [1:8] 140 146 248 274 473 500 512 513\n $ : int [1:44] 16 28 29 44 45 71 120 124 172 173 ...\n $ : int [1:49] 16 28 29 70 120 124 172 173 175 178 ...\n $ : int [1:18] 17 67 182 361 374 378 404 566 567 568 ...\n $ : int [1:6] 361 374 377 404 665 666\n $ : int [1:14] 48 64 65 109 113 116 251 265 672 683 ...\n $ : int [1:15] 110 229 255 258 272 373 382 398 422 433 ...\n $ : int [1:9] 254 287 427 459 470 547 647 677 751\n $ : int [1:55] 9 18 19 23 25 52 54 56 78 79 ...\n $ : int [1:51] 23 52 53 54 56 57 58 77 79 80 ...\n $ : int [1:57] 23 52 53 54 56 57 58 77 78 80 ...\n $ : int [1:39] 23 52 53 54 57 77 78 79 165 189 ...\n $ : int [1:19] 99 145 227 233 242 255 270 426 449 483 ...\n $ : int [1:21] 15 22 32 49 51 62 177 207 214 297 ...\n $ : int [1:6] 132 258 383 414 529 767\n $ : int [1:3] 148 437 692\n $ : int [1:38] 101 105 130 142 145 155 156 219 235 242 ...\n $ : int [1:17] 34 42 136 137 184 202 285 286 499 538 ...\n $ : int [1:19] 147 149 151 221 226 245 267 399 410 415 ...\n $ : int [1:5] 150 489 648 700 714\n $ : int [1:12] 100 107 159 260 408 458 463 542 674 676 ...\n $ : int 237\n $ : int [1:3] 160 271 406\n $ : int [1:11] 95 119 390 391 392 423 487 642 656 668 ...\n $ : int [1:3] 354 607 665\n $ : int [1:7] 13 31 158 436 561 596 709\n $ : int [1:10] 92 390 391 392 405 423 469 656 708 770\n $ : int [1:17] 97 108 139 167 168 350 389 403 412 420 ...\n $ : int [1:13] 96 108 114 139 147 168 389 403 420 451 ...\n $ : int [1:4] 153 231 432 696\n $ : int [1:18] 81 145 154 167 227 233 255 270 426 449 ...\n  [list output truncated]\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"region.id\")= chr [1:774] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language dnearneigh(x = coords, d1 = 0, d2 = 72, longlat = TRUE)\n - attr(*, \"dnn\")= num [1:2] 0 72\n - attr(*, \"bounds\")= chr [1:2] \"GE\" \"LE\"\n - attr(*, \"nbtype\")= chr \"distance\"\n - attr(*, \"sym\")= logi TRUE\n\n\nAnother way to display the structure of the weight matrix is to combine table() and card() of spdep.\n\ntable(nga_wp$shapeName, card(wm_d72))\n\n                    \n                     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\n  Aba North          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Aba South          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Abadam             0 1 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Abaji              0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Abak               0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Abakaliki          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  1  0\n  Abeokuta North     0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Abeokuta South     0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Abi                0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Aboh-Mbaise        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Abua/Odual         0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  1\n  Abuja Municipal    0 0 0 0 0 0 0 0 0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Adavi              0 0 0 0 0 0 0 0 0  0  0  0  1  0  0  0  0  0  0  0  0  0\n  Ado                0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ado-Odo/Ota        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ado Ekiti          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Afijio             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Afikpo North       0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Afikpo South       0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Agaie              0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Agatu              0 0 0 0 0 0 0 0 1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Agege              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Aguata             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Agwara             0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ahiazu-Mbaise      0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ahoada East        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ahoada West        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Aiyedade           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Aiyedire           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Aiyekire (Gbonyin) 0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ajaokuta           0 0 0 0 0 0 0 0 0  0  0  0  1  0  0  0  0  0  0  0  0  0\n  Ajeromi-Ifelodun   0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ajingi             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Akamkpa            0 0 0 0 0 0 0 0 0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Akinyele           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Akko               0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Akoko-Edo          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  1  0\n  Akoko North East   0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Akoko North West   0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Akoko South East   0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  1  0\n  Akoko South West   0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  1\n  Akpabuyo           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Akuku Toru         0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Akure North        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Akure South        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Akwanga            0 0 0 0 0 0 0 0 0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Albasu             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Aleiro             0 0 0 0 0 0 0 0 0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Alimosho           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Alkaleri           0 0 0 1 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Amuwo-Odofin       0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Anambra East       0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Anambra West       0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Anaocha            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Andoni             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Aninri             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Aniocha North      0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Aniocha South      0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Anka               0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ankpa              0 0 0 0 0 0 0 0 0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Apa                0 0 0 0 0 0 0 0 0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Apapa              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ardo-Kola          0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Arewa-Dandi        0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Argungu            0 0 0 0 0 0 0 0 0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Arochukwu          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Asa                0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Asari-Toru         0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Askira/Uba         0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Atakumosa East     0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Atakumosa West     0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Atiba              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  1  0  0  0  0\n  Atigbo             0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Augie              0 0 0 0 0 0 0 0 0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Auyo               0 0 0 0 0 0 0 0 0  0  0  0  0  0  1  0  0  0  0  0  0  0\n  Awe                0 0 0 0 0 0 0 0 1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Awgu               0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Awka North         0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Awka South         0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ayamelum           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Babura             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Badagry            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  1  0\n  Bade               0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bagudo             0 0 1 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bagwai             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bakassi            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  1  0  0  0  0  0\n  Bakori             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Bakura             0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Balanga            0 0 0 0 0 0 0 0 0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Bali               1 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bama               0 0 1 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Barikin Ladi       0 0 0 0 0 0 0 0 0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Baruten            0 0 1 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bassa              0 0 0 0 0 0 1 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Batagarawa         0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  1  0  0  0  0  0\n  Batsari            0 0 0 0 0 0 0 0 0  0  0  0  1  0  0  0  0  0  0  0  0  0\n  Bauchi             0 0 0 1 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Baure              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  1  0  0  0  0\n  Bayo               0 0 0 0 0 0 0 0 0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Bebeji             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bekwara            0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Bende              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Biase              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bichi              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bida               0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Billiri            0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bindawa            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Binji              0 0 0 0 0 0 0 0 0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Biriniwa           0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Birni Kudu         0 0 0 0 0 0 0 0 0  0  0  0  0  0  1  0  0  0  0  0  0  0\n  Birnin-Gwari       1 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Birnin Kebbi       0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Birnin Magaji      0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Biu                0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bodinga            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  1  0  0  0  0  0  0\n  Bogoro             0 0 0 0 0 0 0 0 1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Boki               0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bokkos             0 0 0 0 0 0 0 0 0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Boluwaduro         0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bomadi             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  1  0  0  0  0\n  Bonny              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Borgu              1 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Boripe             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bosso              0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Brass              0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Buji               0 0 0 0 0 0 0 0 0  0  0  0  0  0  1  0  0  0  0  0  0  0\n  Bukkuyum           0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bungudu            0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bunkure            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bunza              0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bursari            0 0 0 1 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Buruku             0 0 0 0 0 0 0 0 1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Burutu             0 0 0 0 0 0 0 0 0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Bwari              0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Calabar-Municipal  0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Calabar South      0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Chanchaga          0 0 0 0 0 0 0 0 1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Charanchi          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Chibok             0 0 1 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Chikun             0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dala               0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Damaturu           0 0 0 1 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Damban             0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dambatta           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Damboa             0 0 0 1 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dan Musa           0 0 0 0 0 0 0 0 0  0  0  0  0  0  1  0  0  0  0  0  0  0\n  Dandi              0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dandume            0 0 0 0 0 0 0 0 0  0  0  0  0  0  1  0  0  0  0  0  0  0\n  Dange-Shuni        0 0 0 0 0 0 0 0 0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Danja              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Darazo             0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dass               0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Daura              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Dawakin Kudu       0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dawakin Tofa       0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Degema             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dekina             0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Demsa              0 0 0 0 0 0 0 0 0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Dikwa              0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Doguwa             0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Doma               0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Donga              0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dukku              0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dunukofia          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dutse              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Dutsi              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dutsin-Ma          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  1  0\n  Eastern Obolo      0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ebonyi             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  1\n  Edati              0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ede North          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ede South          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Edu                0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Efon               0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Egbado North       0 0 0 0 0 0 0 0 0  0  0  0  0  0  1  0  0  0  0  0  0  0\n  Egbado South       0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Egbeda             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Egbedore           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Egor               0 0 0 0 0 0 0 0 0  0  0  0  1  0  0  0  0  0  0  0  0  0\n  Ehime-Mbano        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ejigbo             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ekeremor           0 0 0 0 0 0 0 0 1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Eket               0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ekiti              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ekiti East         0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ekiti South West   0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ekiti West         0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ekwusigo           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Eleme              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Emohua             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Emure              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Enugu East         0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Enugu North        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Enugu South        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Epe                0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  1\n  Esan Central       0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Esan North East    0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Esan South East    0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Esan West          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Ese-Odo            0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Esit - Eket        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Essien Udim        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Etche              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ethiope East       0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  1\n  Ethiope West       0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  1  0\n  Eti-Osa            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Etim Ekpo          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Etinan             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Etsako Central     0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Etsako East        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  1  0  0  0  0\n  Etsako West        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  1  0  0  0  0\n  Etung              0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ewekoro            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ezeagu             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ezinihitte         0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ezza North         0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ezza South         0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Fagge              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Fakai              0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Faskari            0 0 0 0 0 0 0 0 0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Fika               0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Fufore             0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Funakaye           0 0 0 0 0 0 0 0 1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Fune               0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Funtua             0 0 0 0 0 0 0 0 0  0  0  0  0  0  1  0  0  0  0  0  0  0\n  Gabasawa           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gada               0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gagarawa           0 0 0 0 0 0 0 0 0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Gamawa             0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Ganjuwa            0 0 0 1 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ganye              0 0 0 1 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Garki              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Garko              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Garum Mallam       0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gashaka            0 1 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gassol             1 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gaya               0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gbako              0 0 0 0 0 0 0 0 1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gboko              0 0 0 0 0 0 0 0 1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Geidam             0 0 1 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gezawa             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Giade              0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Girei              0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Giwa               0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  1  0  0  0  0  0  0\n  Gokana             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gombe              0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Gombi              0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Goronyo            0 0 0 0 0 0 0 0 0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Gubio              0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gudu               0 0 0 1 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gujba              0 0 0 1 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gulani             0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Guma               0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Gumel              0 0 0 0 0 0 0 0 0  0  0  0  1  0  0  0  0  0  0  0  0  0\n  Gummi              0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gurara             0 0 0 0 0 0 0 0 0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Guri               0 0 0 0 0 0 0 0 0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Gusau              0 0 0 0 0 0 0 0 1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Guyuk              0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Guzamala           0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gwadabawa          0 0 0 0 0 0 0 0 0  0  0  0  1  0  0  0  0  0  0  0  0  0\n  Gwagwalada         0 0 0 0 0 0 0 0 0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Gwale              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gwandu             0 0 0 0 0 0 0 0 0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Gwaram             0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Gwarzo             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gwer East          0 0 0 0 0 0 0 0 0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Gwer West          0 0 0 0 0 0 0 0 0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Gwiwa              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gwoza              0 0 1 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Hadejia            0 0 0 0 0 0 0 0 0  0  0  0  0  0  1  0  0  0  0  0  0  0\n  Hawul              0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Hong               0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibadan North       0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibadan North East  0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibadan North West  0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibadan South East  0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibadan South West  0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibaji              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibarapa Central    0 0 0 0 0 0 0 0 0  0  0  0  0  0  1  0  0  0  0  0  0  0\n  Ibarapa East       0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibarapa North      0 0 0 0 0 0 0 0 0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Ibeju/Lekki        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibeno              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibesikpo Asutan    0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibi                0 0 0 1 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibiono Ibom        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Idah               0 0 0 0 0 0 0 0 0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Idanre             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Ideato North       0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ideato South       0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Idemili North      0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Idemili South      0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ido                0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ido-Osi            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ifako-Ijaye        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ife Central        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ife East           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ife North          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ife South          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ifedayo            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ifedore            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ifelodun           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  1  0  0  0  0  0\n  Ifo                0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Igabi              0 0 0 0 0 0 0 0 1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Igalamela-Odolu    0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  1  0  0  0  0\n  Igbo-Etiti         0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Igbo-Eze North     0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Igbo-Eze South     0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  1\n  Igueben            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Ihiala             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ihitte/Uboma       0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ijebu East         0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  1  0\n  Ijebu North        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ijebu North East   0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ijebu Ode          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ijero              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ijumu              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Ika                0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ika North East     0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ika South          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikara              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  1  0\n  Ikeduru            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikeja              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikenne             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikere              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikole              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikom               0 0 0 0 0 0 0 0 0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Ikono              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikorodu            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikot Abasi         0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikot Ekpene        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikpoba-Okha        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  1  0  0  0  0  0  0\n  Ikwerre            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikwo               0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Ikwuano            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ila                0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ilaje              0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ile-Oluji-Okeigbo  0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ilejemeji          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ilesha East        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ilesha West        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Illela             0 0 0 0 0 0 0 0 1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ilorin East        0 0 0 0 0 0 0 0 0  0  0  0  1  0  0  0  0  0  0  0  0  0\n  Ilorin South       0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ilorin West        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Imeko-Afon         0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ingawa             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ini                0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ipokia             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  1  0\n  Irele              0 0 0 0 0 0 0 0 0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Irepo              0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Irepodun           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Irepodun/Ifelodun  0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Irewole            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Isa                0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ise/Orun           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Iseyin             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Ishielu            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Isi-Uzo            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Isiala-Ngwa North  0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Isiala-Ngwa South  0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Isiala Mbano       0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Isin               0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Isiukwuato         0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Isokan             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Isoko North        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Isoko South        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Isu                0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Itas/Gadau         0 0 0 0 0 0 0 0 0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Itesiwaju          0 0 0 0 0 0 0 0 1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Itu                0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ivo                0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Iwajowa            0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Iwo                0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Izzi               0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  1  0  0  0  0\n  Jaba               0 0 0 0 0 0 0 0 1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Jada               0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Jahun              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  1  0\n  Jakusko            0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Jalingo            0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Jama'are           0 0 0 0 0 0 0 0 0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Jega               0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Jema'a             0 0 0 0 0 0 0 0 1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Jere               0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Jibia              0 0 0 0 0 0 0 0 0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Jos East           0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Jos North          0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Jos South          0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Kabba/Bunu         0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Kabo               0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kachia             0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kaduna North       0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kaduna South       0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kafin Hausa        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  1  0  0  0  0  0  0\n  Kafur              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kaga               0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kagarko            0 0 0 0 0 0 0 0 1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kaiama             0 1 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kaita              0 0 0 0 0 0 0 0 0  0  0  0  0  0  1  0  0  0  0  0  0  0\n  Kajola             0 0 0 0 0 0 0 0 0  0  0  0  1  0  0  0  0  0  0  0  0  0\n  Kajuru             0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kala/Balge         0 0 1 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kalgo              0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Kaltungo           0 0 0 0 0 0 0 0 0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Kanam              0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kankara            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  1  0  0  0  0  0\n  Kanke              0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kankia             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kano Municipal     0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Karasuwa           0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Karaye             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Karim-Lamido       0 0 0 1 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Karu               0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Katagum            0 0 0 0 0 0 0 0 0  0  0  0  1  0  0  0  0  0  0  0  0  0\n  Katcha             0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Katsina            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  1  0  0  0  0  0\n  Katsina-Ala        0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kaugama            0 0 0 0 0 0 0 0 0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Kaura              0 0 0 0 0 0 0 0 0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Kaura Namoda       0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kauru              0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kazaure            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Keana              0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kebbe              0 0 0 0 0 0 0 0 1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Keffi              0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Khana              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kibiya             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kirfi              0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kiri Kasamma       0 0 0 0 0 0 0 0 0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Kiru               0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kiyawa             0 0 0 0 0 0 0 0 0  0  0  0  0  0  1  0  0  0  0  0  0  0\n  Kogi               0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Koko/Besse         0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kokona             0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kolokuma/Opokuma   0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Konduga            0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Konshisha          0 0 0 0 0 0 0 0 0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Kontagora          0 0 1 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kosofe             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kubau              0 0 0 0 0 0 0 0 1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kudan              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  1  0  0  0  0  0\n  Kuje               0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Kukawa             0 0 1 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kumbotso           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kunchi             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kura               0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kurfi              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  1  0  0  0  0\n  Kurmi              0 1 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kusada             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kwali              0 0 0 0 0 0 0 0 0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Kwami              0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kwande             0 0 0 0 0 0 0 0 1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kware              0 0 0 0 0 0 0 0 0  0  0  0  0  0  1  0  0  0  0  0  0  0\n  Kwaya Kusar        0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Lafia              0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Lagelu             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Lagos Island       0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Lagos Mainland     0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Lamurde            0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Langtang North     0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Langtang South     0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Lapai              0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Lau                0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Lavun              0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Lere               0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Logo               0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Lokoja             0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Machina            0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Madagali           0 0 0 1 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Madobi             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mafa               0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Magama             0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Magumeri           0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mai'adua           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  1  0  0  0  0  0  0\n  Maiduguri          0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Maigatari          0 0 0 0 0 0 0 0 0  0  0  0  1  0  0  0  0  0  0  0  0  0\n  Maiha              0 0 0 1 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Maiyama            0 0 0 0 0 0 0 0 0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Makoda             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Makurdi            0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Malam Madori       0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  1  0  0  0  0  0  0\n  Malumfashi         0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mangu              0 0 0 0 0 0 0 0 0  0  0  0  1  0  0  0  0  0  0  0  0  0\n  Mani               0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Maradun            0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mariga             0 1 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Markafi            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Marte              0 0 0 1 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Maru               0 0 1 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mashegu            0 0 1 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mashi              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  1  0  0  0  0  0  0\n  Matazu             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mayo-Belwa         0 0 0 0 0 0 0 0 0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Mbaitoli           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mbo                0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Michika            0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Miga               0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Mikang             0 0 0 0 0 0 0 0 1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Minjibir           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Misau              0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mkpat Enin         0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Moba               0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mobbar             0 1 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mokwa              0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Monguno            0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mopa-Muro          0 0 0 0 0 0 0 0 0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Moro               0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mubi North         0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mubi South         0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Musawa             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  1\n  Mushin             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Muya               0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nafada             0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nangere            0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nasarawa           0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nasarawa-Eggon     0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ndokwa East        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ndokwa West        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nembe              0 0 0 0 0 0 0 0 0  0  0  0  1  0  0  0  0  0  0  0  0  0\n  Ngala              0 0 0 1 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nganzai            0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ngaski             0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ngor-Okpala        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nguru              0 0 0 0 0 0 0 0 1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ningi              0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Njaba              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Njikoka            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nkanu East         0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nkanu West         0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nkwerre            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nnewi North        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nnewi South        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nsit Atai          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nsit Ibom          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nsit Ubium         0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nsukka             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Numan              0 0 0 0 0 0 0 0 0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Nwangele           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Obafemi-Owode      0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Obanliku           0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Obi                0 0 0 0 0 0 0 1 0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Obi Ngwa           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Obia/Akpor         0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Obokun             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Obot Akara         0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Obowo              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Obubra             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  1  0  0  0  0  0\n  Obudu              0 0 0 0 0 0 0 0 1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Odeda              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Odigbo             0 0 0 0 0 0 0 0 0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Odo-Otin           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Odogbolu           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Odukpani           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Offa               0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ofu                0 0 0 0 0 0 0 0 0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Ogba/Egbema/Ndoni  0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ogbadibo           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  1  0\n  Ogbaru             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ogbia              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  1  0  0  0  0  0\n  Ogbomosho North    0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ogbomosho South    0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ogo Oluwa          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ogoja              0 0 0 0 0 0 0 0 0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Ogori/Magongo      0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Ogu/Bolo           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ogun waterside     0 0 0 0 0 0 0 0 0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Oguta              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ohafia             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ohaji/Egbema       0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ohaozara           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ohaukwu            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ohimini            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  1  0  0  0  0  0  0\n  Oji-River          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ojo                0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oju                0 0 0 0 0 0 0 0 0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Oke-Ero            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Okehi              0 0 0 0 0 0 0 0 0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Okene              0 0 0 0 0 0 0 0 0  0  0  0  0  0  1  0  0  0  0  0  0  0\n  Okigwe             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Okitipupa          0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Okobo              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Okpe               0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  1  0\n  Okpokwu            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Okrika             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ola-oluwa          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Olamabolo          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  1  0  0  0  0\n  Olorunda           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Olorunsogo         0 0 0 0 0 0 0 0 0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Oluyole            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Omala              0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Omumma             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ona-Ara            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ondo East          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ondo West          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Onicha             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Onitsha North      0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Onitsha South      0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Onna               0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Opobo/Nkoro        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oredo              0 0 0 0 0 0 0 0 0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Orelope            0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Orhionmwon         0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ori Ire            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  1\n  Oriade             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Orlu               0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Orolu              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oron               0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Orsu               0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oru East           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oru West           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oruk Anam          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Orumba North       0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Orumba South       0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ose                0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Oshimili North     0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oshimili South     0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oshodi-Isolo       0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Osisioma Ngwa      0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Osogbo             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oturkpo            0 0 0 0 0 0 0 0 0  0  0  0  1  0  0  0  0  0  0  0  0  0\n  Ovia North East    0 0 0 0 0 0 0 0 0  0  0  0  1  0  0  0  0  0  0  0  0  0\n  Ovia South West    0 0 0 0 0 0 0 0 0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Owan East          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Owan West          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  1  0  0  0  0\n  Owerri-Municipal   0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Owerri North       0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Owerri West        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Owo                0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Oye                0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oyi                0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oyigbo             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oyo East           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oyo West           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oyun               0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Paikoro            0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Pankshin           0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Patani             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Pategi             0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Port-Harcourt      0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Potiskum           0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Qua'an Pan         0 0 0 0 0 0 0 0 1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Rabah              0 0 0 0 0 0 0 0 0  0  0  0  1  0  0  0  0  0  0  0  0  0\n  Rafi               0 0 0 1 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Rano               0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Remo North         0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Rijau              0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Rimi               0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  1\n  Rimin Gado         0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ringim             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Riyom              0 0 0 0 0 0 0 0 0  0  0  0  1  0  0  0  0  0  0  0  0  0\n  Rogo               0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Roni               0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Sabon-Gari         0 0 0 0 0 0 0 0 0  0  0  0  0  0  1  0  0  0  0  0  0  0\n  Sabon Birni        0 0 0 1 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Sabuwa             0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Safana             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  1  0  0  0  0  0  0\n  Sagbama            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  1\n  Sakaba             0 0 0 1 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Saki East          0 0 0 0 0 0 0 0 1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Saki West          0 0 0 1 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Sandamu            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  1  0\n  Sanga              0 0 0 0 0 0 0 0 0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Sapele             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  1  0  0  0  0  0\n  Sardauna           1 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Shagamu            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Shagari            0 0 0 0 0 0 0 0 0  0  0  0  1  0  0  0  0  0  0  0  0  0\n  Shanga             0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Shani              0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Shanono            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Shelleng           0 0 0 0 0 0 0 0 0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Shendam            0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Shinkafi           0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Shira              0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Shiroro            0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Shomgom            0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Shomolu            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Silame             0 0 0 0 0 0 0 0 0  0  0  0  0  0  1  0  0  0  0  0  0  0\n  Soba               0 0 0 0 0 0 0 0 0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Sokoto North       0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  1  0  0  0  0  0  0\n  Sokoto South       0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  1  0  0  0  0  0  0\n  Song               0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Southern Ijaw      0 0 0 0 0 0 0 0 1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Sule-Tankarkar     0 0 0 0 0 0 0 0 0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Suleja             0 0 0 0 0 0 0 0 0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Sumaila            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  1  0  0  0  0\n  Suru               0 0 0 0 0 0 0 0 1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Surulere           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Tafa               0 0 0 0 0 0 0 0 0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Tafawa-Balewa      0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Tai                0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Takai              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  1  0  0  0  0  0\n  Takum              0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Talata Mafara      0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Tambuwal           0 0 0 0 0 0 0 0 0  0  0  0  1  0  0  0  0  0  0  0  0  0\n  Tangaza            0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Tarauni            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Tarka              0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Tarmua             0 0 0 1 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Taura              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  1  0  0  0  0\n  Tofa               0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Toro               0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Toto               0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Toungo             0 1 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Tsafe              0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Tsanyawa           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Tudun Wada         0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  1  0  0  0  0\n  Tureta             0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Udenu              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  1\n  Udi                0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Udu                0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Udung Uko          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ughelli North      0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ughelli South      0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Ugwunagbo          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Uhunmwonde         0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Ukanafun           0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ukum               0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ukwa East          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ukwa West          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ukwuani            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Umu-Nneochi        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Umuahia North      0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Umuahia South      0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ungogo             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Unuimo             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Uruan              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Urue-Offong/Oruko  0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ushongo            0 0 0 0 0 0 0 0 0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Ussa               0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Uvwie              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  1  0\n  Uyo                0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Uzo-Uwani          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Vandeikya          0 0 0 0 0 0 0 0 0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Wamako             0 0 0 0 0 0 0 0 0  0  0  0  0  0  1  0  0  0  0  0  0  0\n  Wamba              0 0 0 0 0 0 0 0 0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Warawa             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Warji              0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Warri North        0 0 0 0 0 0 0 0 0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Warri South        0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  1  0  0  0  0  0  0\n  Warri South West   0 0 0 0 0 0 0 0 0  0  0  0  1  0  0  0  0  0  0  0  0  0\n  Wasagu/Danko       0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Wase               0 0 0 1 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Wudil              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Wukari             0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Wurno              0 0 0 0 0 0 0 0 0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Wushishi           0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yabo               0 0 0 0 0 0 0 0 0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Yagba East         0 0 0 0 0 0 0 0 0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Yagba West         0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  1  0  0  0  0  0  0\n  Yakurr             0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  1  0\n  Yala               0 0 0 0 0 0 0 0 0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Yamaltu/Deba       0 0 0 0 0 0 0 0 0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Yankwashi          0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  1  0\n  Yauri              0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yenegoa            0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Yola North         0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yola South         0 0 0 0 0 0 0 0 1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yorro              0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yunusari           0 1 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yusufari           0 0 1 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Zaki               0 0 0 0 0 0 0 0 0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Zango              0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  1  0  0  0  0  0  0\n  Zango-Kataf        0 0 0 0 0 0 0 0 0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Zaria              0 0 0 0 0 0 0 0 0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Zing               0 0 0 0 0 0 0 0 1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Zurmi              0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Zuru               0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0\n                    \n                     23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41\n  Aba North           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Aba South           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Abadam              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Abaji               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Abak                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Abakaliki           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Abeokuta North      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Abeokuta South      0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0\n  Abi                 0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Aboh-Mbaise         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Abua/Odual          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Abuja Municipal     0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Adavi               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ado                 0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ado-Odo/Ota         0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ado Ekiti           0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0\n  Afijio              0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0\n  Afikpo North        0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Afikpo South        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1\n  Agaie               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Agatu               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Agege               0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Aguata              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Agwara              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ahiazu-Mbaise       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ahoada East         0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Ahoada West         0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Aiyedade            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Aiyedire            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Aiyekire (Gbonyin)  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Ajaokuta            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ajeromi-Ifelodun    0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ajingi              0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Akamkpa             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Akinyele            0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0\n  Akko                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Akoko-Edo           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Akoko North East    0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Akoko North West    0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Akoko South East    0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Akoko South West    0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Akpabuyo            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Akuku Toru          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Akure North         0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Akure South         0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Akwanga             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Albasu              0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Aleiro              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Alimosho            0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Alkaleri            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Amuwo-Odofin        0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Anambra East        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Anambra West        0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0\n  Anaocha             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Andoni              0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Aninri              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Aniocha North       0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0\n  Aniocha South       0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0\n  Anka                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ankpa               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Apa                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Apapa               0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ardo-Kola           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Arewa-Dandi         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Argungu             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Arochukwu           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Asa                 0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Asari-Toru          0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Askira/Uba          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Atakumosa East      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Atakumosa West      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Atiba               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Atigbo              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Augie               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Auyo                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Awe                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Awgu                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Awka North          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Awka South          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ayamelum            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Babura              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Badagry             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bade                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bagudo              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bagwai              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Bakassi             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bakori              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bakura              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Balanga             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bali                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bama                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Barikin Ladi        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Baruten             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bassa               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Batagarawa          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Batsari             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bauchi              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Baure               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bayo                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bebeji              0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0\n  Bekwara             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bende               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Biase               0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Bichi               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0\n  Bida                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Billiri             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bindawa             0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Binji               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Biriniwa            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Birni Kudu          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Birnin-Gwari        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Birnin Kebbi        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Birnin Magaji       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Biu                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bodinga             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bogoro              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Boki                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bokkos              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Boluwaduro          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bomadi              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bonny               0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Borgu               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Boripe              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bosso               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Brass               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Buji                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bukkuyum            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bungudu             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bunkure             0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0\n  Bunza               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bursari             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Buruku              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Burutu              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bwari               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Calabar-Municipal   0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Calabar South       0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Chanchaga           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Charanchi           0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Chibok              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Chikun              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dala                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0\n  Damaturu            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Damban              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dambatta            0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0\n  Damboa              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dan Musa            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dandi               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dandume             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dange-Shuni         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Danja               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Darazo              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dass                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Daura               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dawakin Kudu        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Dawakin Tofa        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Degema              0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dekina              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Demsa               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dikwa               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Doguwa              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Doma                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Donga               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dukku               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dunukofia           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dutse               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dutsi               1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dutsin-Ma           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Eastern Obolo       0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0\n  Ebonyi              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Edati               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ede North           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ede South           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Edu                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Efon                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Egbado North        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Egbado South        0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Egbeda              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Egbedore            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Egor                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ehime-Mbano         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ejigbo              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ekeremor            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Eket                0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0\n  Ekiti               0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ekiti East          0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ekiti South West    0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ekiti West          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ekwusigo            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Eleme               0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0\n  Emohua              0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0\n  Emure               0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Enugu East          0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0\n  Enugu North         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Enugu South         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Epe                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Esan Central        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Esan North East     0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Esan South East     0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Esan West           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ese-Odo             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Esit - Eket         0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Essien Udim         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Etche               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ethiope East        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ethiope West        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Eti-Osa             0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Etim Ekpo           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Etinan              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Etsako Central      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Etsako East         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Etsako West         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Etung               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ewekoro             0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Ezeagu              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ezinihitte          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ezza North          0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ezza South          0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Fagge               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0\n  Fakai               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Faskari             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Fika                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Fufore              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Funakaye            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Fune                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Funtua              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gabasawa            0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0\n  Gada                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gagarawa            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gamawa              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ganjuwa             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ganye               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Garki               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Garko               0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Garum Mallam        0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0\n  Gashaka             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gassol              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gaya                0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Gbako               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gboko               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Geidam              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gezawa              0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0\n  Giade               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Girei               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Giwa                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gokana              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Gombe               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gombi               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Goronyo             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gubio               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gudu                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gujba               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gulani              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Guma                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gumel               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gummi               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gurara              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Guri                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gusau               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Guyuk               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Guzamala            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gwadabawa           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gwagwalada          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gwale               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Gwandu              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gwaram              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gwarzo              0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0\n  Gwer East           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gwer West           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gwiwa               0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gwoza               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Hadejia             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Hawul               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Hong                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibadan North        0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0\n  Ibadan North East   0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0\n  Ibadan North West   0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0\n  Ibadan South East   0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Ibadan South West   0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0\n  Ibaji               0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibarapa Central     0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibarapa East        0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibarapa North       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibeju/Lekki         0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibeno               0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Ibesikpo Asutan     0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibi                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibiono Ibom         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Idah                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Idanre              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ideato North        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ideato South        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Idemili North       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Idemili South       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ido                 0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Ido-Osi             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0\n  Ifako-Ijaye         0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Ife Central         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ife East            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1\n  Ife North           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ife South           0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0\n  Ifedayo             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ifedore             0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0\n  Ifelodun            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ifo                 0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Igabi               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Igalamela-Odolu     0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Igbo-Etiti          0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Igbo-Eze North      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Igbo-Eze South      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Igueben             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ihiala              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ihitte/Uboma        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ijebu East          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ijebu North         0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Ijebu North East    0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ijebu Ode           1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ijero               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ijumu               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ika                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ika North East      0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ika South           0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikara               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikeduru             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikeja               0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0\n  Ikenne              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1\n  Ikere               0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0\n  Ikole               0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikom                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikono               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikorodu             0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Ikot Abasi          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikot Ekpene         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikpoba-Okha         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikwerre             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikwo                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikwuano             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ila                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ilaje               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ile-Oluji-Okeigbo   0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0\n  Ilejemeji           0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0\n  Ilesha East         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ilesha West         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Illela              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ilorin East         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ilorin South        1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ilorin West         1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Imeko-Afon          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ingawa              0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Ini                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ipokia              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Irele               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Irepo               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Irepodun            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Irepodun/Ifelodun   0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Irewole             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Isa                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ise/Orun            0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Iseyin              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ishielu             0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Isi-Uzo             0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Isiala-Ngwa North   0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Isiala-Ngwa South   0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Isiala Mbano        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Isin                0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Isiukwuato          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Isokan              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Isoko North         0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Isoko South         1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Isu                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Itas/Gadau          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Itesiwaju           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Itu                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ivo                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Iwajowa             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Iwo                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Izzi                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Jaba                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Jada                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Jahun               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Jakusko             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Jalingo             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Jama'are            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Jega                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Jema'a              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Jere                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Jibia               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Jos East            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Jos North           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Jos South           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kabba/Bunu          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kabo                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Kachia              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kaduna North        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kaduna South        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kafin Hausa         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kafur               0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kaga                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kagarko             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kaiama              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kaita               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kajola              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kajuru              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kala/Balge          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kalgo               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kaltungo            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kanam               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kankara             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kanke               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kankia              0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kano Municipal      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Karasuwa            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Karaye              0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0\n  Karim-Lamido        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Karu                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Katagum             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Katcha              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Katsina             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Katsina-Ala         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kaugama             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kaura               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kaura Namoda        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kauru               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kazaure             0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Keana               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kebbe               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Keffi               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Khana               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kibiya              0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Kirfi               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kiri Kasamma        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kiru                0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Kiyawa              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kogi                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Koko/Besse          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kokona              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kolokuma/Opokuma    0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Konduga             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Konshisha           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kontagora           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kosofe              0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Kubau               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kudan               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kuje                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kukawa              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kumbotso            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Kunchi              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Kura                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Kurfi               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kurmi               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kusada              0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Kwali               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kwami               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kwande              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kware               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kwaya Kusar         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Lafia               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Lagelu              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0\n  Lagos Island        0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Lagos Mainland      0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Lamurde             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Langtang North      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Langtang South      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Lapai               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Lau                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Lavun               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Lere                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Logo                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Lokoja              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Machina             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Madagali            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Madobi              0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0\n  Mafa                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Magama              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Magumeri            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mai'adua            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Maiduguri           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Maigatari           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Maiha               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Maiyama             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Makoda              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Makurdi             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Malam Madori        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Malumfashi          1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mangu               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mani                0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Maradun             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mariga              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Markafi             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Marte               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Maru                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mashegu             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mashi               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Matazu              1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mayo-Belwa          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mbaitoli            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mbo                 0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Michika             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Miga                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mikang              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Minjibir            0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0\n  Misau               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mkpat Enin          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Moba                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Mobbar              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mokwa               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Monguno             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mopa-Muro           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Moro                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mubi North          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mubi South          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Musawa              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mushin              0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Muya                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nafada              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nangere             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nasarawa            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nasarawa-Eggon      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ndokwa East         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ndokwa West         0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Nembe               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ngala               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nganzai             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ngaski              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ngor-Okpala         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nguru               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ningi               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Njaba               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Njikoka             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nkanu East          0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0\n  Nkanu West          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1\n  Nkwerre             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nnewi North         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nnewi South         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nsit Atai           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Nsit Ibom           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nsit Ubium          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0\n  Nsukka              1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Numan               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nwangele            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Obafemi-Owode       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Obanliku            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Obi                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Obi Ngwa            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Obia/Akpor          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Obokun              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Obot Akara          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Obowo               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Obubra              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Obudu               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Odeda               0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Odigbo              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Odo-Otin            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Odogbolu            0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0\n  Odukpani            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Offa                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1\n  Ofu                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ogba/Egbema/Ndoni   0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1\n  Ogbadibo            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ogbaru              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ogbia               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ogbomosho North     0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Ogbomosho South     0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0\n  Ogo Oluwa           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Ogoja               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ogori/Magongo       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ogu/Bolo            0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Ogun waterside      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oguta               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ohafia              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1\n  Ohaji/Egbema        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ohaozara            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Ohaukwu             0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ohimini             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oji-River           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ojo                 1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oju                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oke-Ero             0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Okehi               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Okene               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Okigwe              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Okitipupa           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Okobo               0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Okpe                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Okpokwu             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Okrika              0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0\n  Ola-oluwa           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Olamabolo           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Olorunda            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Olorunsogo          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oluyole             0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Omala               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Omumma              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ona-Ara             0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0\n  Ondo East           0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ondo West           1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Onicha              0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0\n  Onitsha North       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Onitsha South       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Onna                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0\n  Opobo/Nkoro         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Oredo               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Orelope             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Orhionmwon          1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ori Ire             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oriade              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Orlu                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Orolu               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oron                0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Orsu                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oru East            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oru West            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oruk Anam           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Orumba North        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Orumba South        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ose                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oshimili North      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Oshimili South      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oshodi-Isolo        0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Osisioma Ngwa       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Osogbo              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oturkpo             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ovia North East     0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ovia South West     0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Owan East           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Owan West           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Owerri-Municipal    0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Owerri North        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Owerri West         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Owo                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oye                 0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0\n  Oyi                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oyigbo              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oyo East            0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0\n  Oyo West            0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oyun                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0\n  Paikoro             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Pankshin            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Patani              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Pategi              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Port-Harcourt       0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0\n  Potiskum            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Qua'an Pan          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Rabah               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Rafi                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Rano                0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Remo North          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Rijau               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Rimi                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Rimin Gado          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Ringim              0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Riyom               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Rogo                1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Roni                0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Sabon-Gari          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Sabon Birni         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Sabuwa              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Safana              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Sagbama             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Sakaba              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Saki East           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Saki West           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Sandamu             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Sanga               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Sapele              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Sardauna            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Shagamu             0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0\n  Shagari             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Shanga              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Shani               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Shanono             0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0\n  Shelleng            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Shendam             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Shinkafi            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Shira               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Shiroro             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Shomgom             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Shomolu             0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Silame              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Soba                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Sokoto North        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Sokoto South        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Song                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Southern Ijaw       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Sule-Tankarkar      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Suleja              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Sumaila             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Suru                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Surulere            0  0  0  0  0  0  1  0  0  0  0  0  0  1  0  0  0  0  0\n  Tafa                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Tafawa-Balewa       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Tai                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1\n  Takai               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Takum               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Talata Mafara       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Tambuwal            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Tangaza             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Tarauni             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Tarka               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Tarmua              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Taura               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Tofa                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Toro                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Toto                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Toungo              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Tsafe               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Tsanyawa            0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0\n  Tudun Wada          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Tureta              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Udenu               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Udi                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0\n  Udu                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Udung Uko           0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ughelli North       1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ughelli South       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ugwunagbo           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Uhunmwonde          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ukanafun            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ukum                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ukwa East           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ukwa West           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ukwuani             0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Umu-Nneochi         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Umuahia North       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Umuahia South       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ungogo              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1\n  Unuimo              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Uruan               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1\n  Urue-Offong/Oruko   0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Ushongo             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ussa                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Uvwie               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Uyo                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Uzo-Uwani           0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Vandeikya           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Wamako              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Wamba               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Warawa              0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0\n  Warji               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Warri North         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Warri South         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Warri South West    0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Wasagu/Danko        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Wase                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Wudil               0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0\n  Wukari              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Wurno               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Wushishi            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yabo                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yagba East          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yagba West          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yakurr              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yala                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yamaltu/Deba        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yankwashi           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yauri               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yenegoa             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yola North          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yola South          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yorro               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yunusari            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yusufari            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Zaki                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Zango               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Zango-Kataf         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Zaria               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Zing                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Zurmi               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Zuru                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n                    \n                     42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60\n  Aba North           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Aba South           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Abadam              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Abaji               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Abak                0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0\n  Abakaliki           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Abeokuta North      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Abeokuta South      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Abi                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Aboh-Mbaise         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Abua/Odual          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Abuja Municipal     0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Adavi               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ado                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ado-Odo/Ota         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ado Ekiti           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Afijio              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Afikpo North        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Afikpo South        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Agaie               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Agatu               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Agege               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Aguata              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Agwara              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ahiazu-Mbaise       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ahoada East         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ahoada West         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Aiyedade            0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Aiyedire            0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Aiyekire (Gbonyin)  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ajaokuta            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ajeromi-Ifelodun    0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ajingi              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Akamkpa             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Akinyele            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Akko                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Akoko-Edo           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Akoko North East    0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Akoko North West    0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Akoko South East    0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Akoko South West    0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Akpabuyo            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Akuku Toru          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Akure North         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Akure South         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Akwanga             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Albasu              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Aleiro              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Alimosho            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Alkaleri            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Amuwo-Odofin        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Anambra East        0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Anambra West        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Anaocha             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Andoni              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Aninri              0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0\n  Aniocha North       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Aniocha South       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Anka                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ankpa               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Apa                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Apapa               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ardo-Kola           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Arewa-Dandi         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Argungu             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Arochukwu           0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Asa                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Asari-Toru          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Askira/Uba          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Atakumosa East      0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Atakumosa West      0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Atiba               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Atigbo              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Augie               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Auyo                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Awe                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Awgu                0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0\n  Awka North          0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0\n  Awka South          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Ayamelum            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Babura              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Badagry             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bade                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bagudo              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bagwai              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bakassi             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bakori              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bakura              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Balanga             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bali                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bama                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Barikin Ladi        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Baruten             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bassa               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Batagarawa          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Batsari             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bauchi              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Baure               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bayo                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bebeji              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bekwara             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bende               0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0\n  Biase               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bichi               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bida                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Billiri             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bindawa             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Binji               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Biriniwa            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Birni Kudu          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Birnin-Gwari        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Birnin Kebbi        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Birnin Magaji       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Biu                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bodinga             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bogoro              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Boki                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bokkos              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Boluwaduro          0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bomadi              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bonny               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Borgu               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Boripe              0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Bosso               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Brass               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Buji                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bukkuyum            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bungudu             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bunkure             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bunza               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bursari             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Buruku              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Burutu              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Bwari               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Calabar-Municipal   0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Calabar South       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Chanchaga           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Charanchi           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Chibok              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Chikun              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dala                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Damaturu            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Damban              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dambatta            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Damboa              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dan Musa            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dandi               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dandume             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dange-Shuni         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Danja               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Darazo              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dass                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Daura               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dawakin Kudu        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dawakin Tofa        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Degema              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dekina              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Demsa               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dikwa               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Doguwa              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Doma                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Donga               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dukku               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dunukofia           0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Dutse               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dutsi               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Dutsin-Ma           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Eastern Obolo       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ebonyi              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Edati               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ede North           0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Ede South           0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Edu                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Efon                0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Egbado North        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Egbado South        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Egbeda              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Egbedore            0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Egor                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ehime-Mbano         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ejigbo              0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ekeremor            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Eket                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ekiti               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ekiti East          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ekiti South West    0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ekiti West          0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ekwusigo            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Eleme               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Emohua              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Emure               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Enugu East          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Enugu North         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Enugu South         1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Epe                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Esan Central        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Esan North East     0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Esan South East     0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Esan West           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ese-Odo             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Esit - Eket         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Essien Udim         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Etche               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Ethiope East        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ethiope West        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Eti-Osa             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Etim Ekpo           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1\n  Etinan              0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Etsako Central      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Etsako East         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Etsako West         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Etung               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ewekoro             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ezeagu              0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ezinihitte          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ezza North          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ezza South          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Fagge               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Fakai               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Faskari             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Fika                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Fufore              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Funakaye            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Fune                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Funtua              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gabasawa            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gada                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gagarawa            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gamawa              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ganjuwa             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ganye               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Garki               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Garko               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Garum Mallam        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gashaka             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gassol              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gaya                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gbako               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gboko               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Geidam              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gezawa              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Giade               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Girei               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Giwa                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gokana              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gombe               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gombi               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Goronyo             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gubio               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gudu                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gujba               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gulani              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Guma                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gumel               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gummi               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gurara              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Guri                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gusau               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Guyuk               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Guzamala            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gwadabawa           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gwagwalada          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gwale               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gwandu              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gwaram              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gwarzo              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gwer East           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gwer West           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gwiwa               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Gwoza               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Hadejia             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Hawul               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Hong                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibadan North        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibadan North East   0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibadan North West   0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibadan South East   0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibadan South West   0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibaji               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibarapa Central     0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibarapa East        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibarapa North       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibeju/Lekki         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibeno               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibesikpo Asutan     0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibi                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ibiono Ibom         0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Idah                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Idanre              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ideato North        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1\n  Ideato South        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Idemili North       0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Idemili South       0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0\n  Ido                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ido-Osi             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ifako-Ijaye         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ife Central         0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Ife East            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ife North           0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ife South           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ifedayo             0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ifedore             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ifelodun            0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ifo                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Igabi               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Igalamela-Odolu     0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Igbo-Etiti          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Igbo-Eze North      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Igbo-Eze South      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Igueben             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ihiala              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Ihitte/Uboma        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ijebu East          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ijebu North         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ijebu North East    0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ijebu Ode           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ijero               0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ijumu               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ika                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1\n  Ika North East      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ika South           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikara               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikeduru             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikeja               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikenne              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikere               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikole               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikom                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikono               0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0\n  Ikorodu             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikot Abasi          0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikot Ekpene         0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0\n  Ikpoba-Okha         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikwerre             0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikwo                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ikwuano             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ila                 0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ilaje               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ile-Oluji-Okeigbo   0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ilejemeji           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ilesha East         0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Ilesha West         0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Illela              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ilorin East         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ilorin South        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ilorin West         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Imeko-Afon          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ingawa              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ini                 0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0\n  Ipokia              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Irele               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Irepo               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Irepodun            0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Irepodun/Ifelodun   0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Irewole             1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Isa                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ise/Orun            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Iseyin              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ishielu             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Isi-Uzo             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Isiala-Ngwa North   0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Isiala-Ngwa South   0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Isiala Mbano        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Isin                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Isiukwuato          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Isokan              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Isoko North         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Isoko South         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Isu                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Itas/Gadau          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Itesiwaju           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Itu                 0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ivo                 0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0\n  Iwajowa             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Iwo                 0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Izzi                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Jaba                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Jada                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Jahun               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Jakusko             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Jalingo             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Jama'are            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Jega                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Jema'a              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Jere                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Jibia               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Jos East            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Jos North           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Jos South           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kabba/Bunu          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kabo                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kachia              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kaduna North        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kaduna South        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kafin Hausa         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kafur               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kaga                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kagarko             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kaiama              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kaita               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kajola              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kajuru              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kala/Balge          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kalgo               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kaltungo            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kanam               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kankara             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kanke               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kankia              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kano Municipal      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Karasuwa            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Karaye              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Karim-Lamido        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Karu                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Katagum             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Katcha              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Katsina             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Katsina-Ala         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kaugama             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kaura               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kaura Namoda        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kauru               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kazaure             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Keana               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kebbe               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Keffi               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Khana               0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kibiya              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kirfi               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kiri Kasamma        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kiru                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kiyawa              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kogi                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Koko/Besse          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kokona              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kolokuma/Opokuma    0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Konduga             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Konshisha           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kontagora           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kosofe              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kubau               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kudan               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kuje                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kukawa              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kumbotso            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kunchi              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kura                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kurfi               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kurmi               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kusada              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kwali               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kwami               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kwande              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kware               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Kwaya Kusar         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Lafia               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Lagelu              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Lagos Island        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Lagos Mainland      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Lamurde             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Langtang North      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Langtang South      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Lapai               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Lau                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Lavun               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Lere                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Logo                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Lokoja              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Machina             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Madagali            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Madobi              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mafa                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Magama              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Magumeri            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mai'adua            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Maiduguri           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Maigatari           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Maiha               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Maiyama             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Makoda              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Makurdi             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Malam Madori        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Malumfashi          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mangu               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mani                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Maradun             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mariga              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Markafi             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Marte               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Maru                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mashegu             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mashi               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Matazu              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mayo-Belwa          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mbaitoli            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mbo                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Michika             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Miga                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mikang              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Minjibir            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Misau               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mkpat Enin          0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Moba                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mobbar              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mokwa               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Monguno             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mopa-Muro           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Moro                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mubi North          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mubi South          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Musawa              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Mushin              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Muya                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nafada              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nangere             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nasarawa            1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nasarawa-Eggon      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ndokwa East         0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ndokwa West         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nembe               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ngala               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nganzai             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ngaski              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ngor-Okpala         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nguru               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ningi               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Njaba               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1\n  Njikoka             0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0\n  Nkanu East          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nkanu West          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nkwerre             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nnewi North         0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0\n  Nnewi South         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nsit Atai           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nsit Ibom           0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Nsit Ubium          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nsukka              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Numan               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Nwangele            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Obafemi-Owode       0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Obanliku            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Obi                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Obi Ngwa            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Obia/Akpor          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Obokun              0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0\n  Obot Akara          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Obowo               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Obubra              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Obudu               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Odeda               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Odigbo              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Odo-Otin            0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Odogbolu            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Odukpani            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Offa                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ofu                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ogba/Egbema/Ndoni   0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ogbadibo            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ogbaru              0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0\n  Ogbia               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ogbomosho North     0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ogbomosho South     0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ogo Oluwa           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ogoja               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ogori/Magongo       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ogu/Bolo            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ogun waterside      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oguta               0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0\n  Ohafia              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ohaji/Egbema        0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0\n  Ohaozara            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ohaukwu             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ohimini             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oji-River           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ojo                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oju                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oke-Ero             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Okehi               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Okene               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Okigwe              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Okitipupa           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Okobo               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Okpe                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Okpokwu             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Okrika              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ola-oluwa           0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Olamabolo           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Olorunda            0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Olorunsogo          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oluyole             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Omala               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Omumma              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0\n  Ona-Ara             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ondo East           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ondo West           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Onicha              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Onitsha North       0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Onitsha South       0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Onna                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Opobo/Nkoro         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oredo               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Orelope             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Orhionmwon          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ori Ire             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oriade              0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Orlu                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Orolu               0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oron                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Orsu                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1\n  Oru East            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0\n  Oru West            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Oruk Anam           0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0\n  Orumba North        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Orumba South        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ose                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oshimili North      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oshimili South      0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oshodi-Isolo        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Osisioma Ngwa       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Osogbo              0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oturkpo             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ovia North East     0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ovia South West     0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Owan East           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Owan West           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Owerri-Municipal    0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1\n  Owerri North        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0\n  Owerri West         0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0\n  Owo                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oye                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oyi                 0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0\n  Oyigbo              0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Oyo East            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oyo West            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Oyun                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Paikoro             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Pankshin            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Patani              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Pategi              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Port-Harcourt       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Potiskum            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Qua'an Pan          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Rabah               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Rafi                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Rano                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Remo North          1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Rijau               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Rimi                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Rimin Gado          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ringim              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Riyom               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Rogo                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Roni                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Sabon-Gari          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Sabon Birni         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Sabuwa              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Safana              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Sagbama             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Sakaba              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Saki East           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Saki West           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Sandamu             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Sanga               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Sapele              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Sardauna            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Shagamu             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Shagari             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Shanga              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Shani               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Shanono             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Shelleng            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Shendam             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Shinkafi            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Shira               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Shiroro             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Shomgom             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Shomolu             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Silame              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Soba                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Sokoto North        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Sokoto South        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Song                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Southern Ijaw       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Sule-Tankarkar      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Suleja              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Sumaila             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Suru                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Surulere            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Tafa                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Tafawa-Balewa       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Tai                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Takai               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Takum               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Talata Mafara       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Tambuwal            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Tangaza             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Tarauni             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Tarka               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Tarmua              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Taura               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Tofa                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Toro                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Toto                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Toungo              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Tsafe               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Tsanyawa            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Tudun Wada          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Tureta              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Udenu               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Udi                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Udu                 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Udung Uko           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ughelli North       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ughelli South       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ugwunagbo           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Uhunmwonde          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ukanafun            0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0\n  Ukum                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ukwa East           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0\n  Ukwa West           0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0\n  Ukwuani             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Umu-Nneochi         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Umuahia North       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Umuahia South       0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ungogo              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Unuimo              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Uruan               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Urue-Offong/Oruko   0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ushongo             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Ussa                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Uvwie               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Uyo                 0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0\n  Uzo-Uwani           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Vandeikya           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Wamako              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Wamba               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Warawa              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Warji               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Warri North         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Warri South         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Warri South West    0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Wasagu/Danko        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Wase                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Wudil               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Wukari              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Wurno               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Wushishi            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yabo                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yagba East          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yagba West          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yakurr              0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yala                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yamaltu/Deba        0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yankwashi           0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yauri               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yenegoa             0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yola North          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yola South          0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yorro               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yunusari            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Yusufari            0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Zaki                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Zango               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Zango-Kataf         0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Zaria               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Zing                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Zurmi               0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Zuru                0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n                    \n                     61 62 63 64 65 67 68 70\n  Aba North           0  0  1  0  0  0  0  0\n  Aba South           0  1  0  0  0  0  0  0\n  Abadam              0  0  0  0  0  0  0  0\n  Abaji               0  0  0  0  0  0  0  0\n  Abak                0  0  0  0  0  0  0  0\n  Abakaliki           0  0  0  0  0  0  0  0\n  Abeokuta North      0  0  0  0  0  0  0  0\n  Abeokuta South      0  0  0  0  0  0  0  0\n  Abi                 0  0  0  0  0  0  0  0\n  Aboh-Mbaise         0  0  1  0  0  0  0  0\n  Abua/Odual          0  0  0  0  0  0  0  0\n  Abuja Municipal     0  0  0  0  0  0  0  0\n  Adavi               0  0  0  0  0  0  0  0\n  Ado                 0  0  0  0  0  0  0  0\n  Ado-Odo/Ota         0  0  0  0  0  0  0  0\n  Ado Ekiti           0  0  0  0  0  0  0  0\n  Afijio              0  0  0  0  0  0  0  0\n  Afikpo North        0  0  0  0  0  0  0  0\n  Afikpo South        0  0  0  0  0  0  0  0\n  Agaie               0  0  0  0  0  0  0  0\n  Agatu               0  0  0  0  0  0  0  0\n  Agege               0  0  0  0  0  0  0  0\n  Aguata              0  0  0  1  0  0  0  0\n  Agwara              0  0  0  0  0  0  0  0\n  Ahiazu-Mbaise       0  0  0  0  0  0  1  0\n  Ahoada East         0  0  0  0  0  0  0  0\n  Ahoada West         0  0  0  0  0  0  0  0\n  Aiyedade            0  0  0  0  0  0  0  0\n  Aiyedire            0  0  0  0  0  0  0  0\n  Aiyekire (Gbonyin)  0  0  0  0  0  0  0  0\n  Ajaokuta            0  0  0  0  0  0  0  0\n  Ajeromi-Ifelodun    0  0  0  0  0  0  0  0\n  Ajingi              0  0  0  0  0  0  0  0\n  Akamkpa             0  0  0  0  0  0  0  0\n  Akinyele            0  0  0  0  0  0  0  0\n  Akko                0  0  0  0  0  0  0  0\n  Akoko-Edo           0  0  0  0  0  0  0  0\n  Akoko North East    0  0  0  0  0  0  0  0\n  Akoko North West    0  0  0  0  0  0  0  0\n  Akoko South East    0  0  0  0  0  0  0  0\n  Akoko South West    0  0  0  0  0  0  0  0\n  Akpabuyo            0  0  0  0  0  0  0  0\n  Akuku Toru          0  0  0  0  0  0  0  0\n  Akure North         0  0  0  0  0  0  0  0\n  Akure South         0  0  0  0  0  0  0  0\n  Akwanga             0  0  0  0  0  0  0  0\n  Albasu              0  0  0  0  0  0  0  0\n  Aleiro              0  0  0  0  0  0  0  0\n  Alimosho            0  0  0  0  0  0  0  0\n  Alkaleri            0  0  0  0  0  0  0  0\n  Amuwo-Odofin        0  0  0  0  0  0  0  0\n  Anambra East        0  0  0  0  0  0  0  0\n  Anambra West        0  0  0  0  0  0  0  0\n  Anaocha             0  0  0  0  0  0  0  0\n  Andoni              0  0  0  0  0  0  0  0\n  Aninri              0  0  0  0  0  0  0  0\n  Aniocha North       0  0  0  0  0  0  0  0\n  Aniocha South       0  0  0  0  0  0  0  0\n  Anka                0  0  0  0  0  0  0  0\n  Ankpa               0  0  0  0  0  0  0  0\n  Apa                 0  0  0  0  0  0  0  0\n  Apapa               0  0  0  0  0  0  0  0\n  Ardo-Kola           0  0  0  0  0  0  0  0\n  Arewa-Dandi         0  0  0  0  0  0  0  0\n  Argungu             0  0  0  0  0  0  0  0\n  Arochukwu           0  0  0  0  0  0  0  0\n  Asa                 0  0  0  0  0  0  0  0\n  Asari-Toru          0  0  0  0  0  0  0  0\n  Askira/Uba          0  0  0  0  0  0  0  0\n  Atakumosa East      0  0  0  0  0  0  0  0\n  Atakumosa West      0  0  0  0  0  0  0  0\n  Atiba               0  0  0  0  0  0  0  0\n  Atigbo              0  0  0  0  0  0  0  0\n  Augie               0  0  0  0  0  0  0  0\n  Auyo                0  0  0  0  0  0  0  0\n  Awe                 0  0  0  0  0  0  0  0\n  Awgu                0  0  0  0  0  0  0  0\n  Awka North          0  0  0  0  0  0  0  0\n  Awka South          0  0  0  0  0  0  0  0\n  Ayamelum            0  0  0  0  0  0  0  0\n  Babura              0  0  0  0  0  0  0  0\n  Badagry             0  0  0  0  0  0  0  0\n  Bade                0  0  0  0  0  0  0  0\n  Bagudo              0  0  0  0  0  0  0  0\n  Bagwai              0  0  0  0  0  0  0  0\n  Bakassi             0  0  0  0  0  0  0  0\n  Bakori              0  0  0  0  0  0  0  0\n  Bakura              0  0  0  0  0  0  0  0\n  Balanga             0  0  0  0  0  0  0  0\n  Bali                0  0  0  0  0  0  0  0\n  Bama                0  0  0  0  0  0  0  0\n  Barikin Ladi        0  0  0  0  0  0  0  0\n  Baruten             0  0  0  0  0  0  0  0\n  Bassa               0  0  0  0  0  0  0  0\n  Batagarawa          0  0  0  0  0  0  0  0\n  Batsari             0  0  0  0  0  0  0  0\n  Bauchi              0  0  0  0  0  0  0  0\n  Baure               0  0  0  0  0  0  0  0\n  Bayo                0  0  0  0  0  0  0  0\n  Bebeji              0  0  0  0  0  0  0  0\n  Bekwara             0  0  0  0  0  0  0  0\n  Bende               0  0  0  0  0  0  0  0\n  Biase               0  0  0  0  0  0  0  0\n  Bichi               0  0  0  0  0  0  0  0\n  Bida                0  0  0  0  0  0  0  0\n  Billiri             0  0  0  0  0  0  0  0\n  Bindawa             0  0  0  0  0  0  0  0\n  Binji               0  0  0  0  0  0  0  0\n  Biriniwa            0  0  0  0  0  0  0  0\n  Birni Kudu          0  0  0  0  0  0  0  0\n  Birnin-Gwari        0  0  0  0  0  0  0  0\n  Birnin Kebbi        0  0  0  0  0  0  0  0\n  Birnin Magaji       0  0  0  0  0  0  0  0\n  Biu                 0  0  0  0  0  0  0  0\n  Bodinga             0  0  0  0  0  0  0  0\n  Bogoro              0  0  0  0  0  0  0  0\n  Boki                0  0  0  0  0  0  0  0\n  Bokkos              0  0  0  0  0  0  0  0\n  Boluwaduro          0  0  0  0  0  0  0  0\n  Bomadi              0  0  0  0  0  0  0  0\n  Bonny               0  0  0  0  0  0  0  0\n  Borgu               0  0  0  0  0  0  0  0\n  Boripe              0  0  0  0  0  0  0  0\n  Bosso               0  0  0  0  0  0  0  0\n  Brass               0  0  0  0  0  0  0  0\n  Buji                0  0  0  0  0  0  0  0\n  Bukkuyum            0  0  0  0  0  0  0  0\n  Bungudu             0  0  0  0  0  0  0  0\n  Bunkure             0  0  0  0  0  0  0  0\n  Bunza               0  0  0  0  0  0  0  0\n  Bursari             0  0  0  0  0  0  0  0\n  Buruku              0  0  0  0  0  0  0  0\n  Burutu              0  0  0  0  0  0  0  0\n  Bwari               0  0  0  0  0  0  0  0\n  Calabar-Municipal   0  0  0  0  0  0  0  0\n  Calabar South       0  0  0  0  0  0  0  0\n  Chanchaga           0  0  0  0  0  0  0  0\n  Charanchi           0  0  0  0  0  0  0  0\n  Chibok              0  0  0  0  0  0  0  0\n  Chikun              0  0  0  0  0  0  0  0\n  Dala                0  0  0  0  0  0  0  0\n  Damaturu            0  0  0  0  0  0  0  0\n  Damban              0  0  0  0  0  0  0  0\n  Dambatta            0  0  0  0  0  0  0  0\n  Damboa              0  0  0  0  0  0  0  0\n  Dan Musa            0  0  0  0  0  0  0  0\n  Dandi               0  0  0  0  0  0  0  0\n  Dandume             0  0  0  0  0  0  0  0\n  Dange-Shuni         0  0  0  0  0  0  0  0\n  Danja               0  0  0  0  0  0  0  0\n  Darazo              0  0  0  0  0  0  0  0\n  Dass                0  0  0  0  0  0  0  0\n  Daura               0  0  0  0  0  0  0  0\n  Dawakin Kudu        0  0  0  0  0  0  0  0\n  Dawakin Tofa        0  0  0  0  0  0  0  0\n  Degema              0  0  0  0  0  0  0  0\n  Dekina              0  0  0  0  0  0  0  0\n  Demsa               0  0  0  0  0  0  0  0\n  Dikwa               0  0  0  0  0  0  0  0\n  Doguwa              0  0  0  0  0  0  0  0\n  Doma                0  0  0  0  0  0  0  0\n  Donga               0  0  0  0  0  0  0  0\n  Dukku               0  0  0  0  0  0  0  0\n  Dunukofia           0  0  0  0  0  0  0  0\n  Dutse               0  0  0  0  0  0  0  0\n  Dutsi               0  0  0  0  0  0  0  0\n  Dutsin-Ma           0  0  0  0  0  0  0  0\n  Eastern Obolo       0  0  0  0  0  0  0  0\n  Ebonyi              0  0  0  0  0  0  0  0\n  Edati               0  0  0  0  0  0  0  0\n  Ede North           0  0  0  0  0  0  0  0\n  Ede South           0  0  0  0  0  0  0  0\n  Edu                 0  0  0  0  0  0  0  0\n  Efon                0  0  0  0  0  0  0  0\n  Egbado North        0  0  0  0  0  0  0  0\n  Egbado South        0  0  0  0  0  0  0  0\n  Egbeda              0  0  0  0  0  0  0  0\n  Egbedore            0  0  0  0  0  0  0  0\n  Egor                0  0  0  0  0  0  0  0\n  Ehime-Mbano         0  0  0  0  1  0  0  0\n  Ejigbo              0  0  0  0  0  0  0  0\n  Ekeremor            0  0  0  0  0  0  0  0\n  Eket                0  0  0  0  0  0  0  0\n  Ekiti               0  0  0  0  0  0  0  0\n  Ekiti East          0  0  0  0  0  0  0  0\n  Ekiti South West    0  0  0  0  0  0  0  0\n  Ekiti West          0  0  0  0  0  0  0  0\n  Ekwusigo            0  0  0  0  0  0  0  0\n  Eleme               0  0  0  0  0  0  0  0\n  Emohua              0  0  0  0  0  0  0  0\n  Emure               0  0  0  0  0  0  0  0\n  Enugu East          0  0  0  0  0  0  0  0\n  Enugu North         0  0  0  0  0  0  0  0\n  Enugu South         0  0  0  0  0  0  0  0\n  Epe                 0  0  0  0  0  0  0  0\n  Esan Central        0  0  0  0  0  0  0  0\n  Esan North East     0  0  0  0  0  0  0  0\n  Esan South East     0  0  0  0  0  0  0  0\n  Esan West           0  0  0  0  0  0  0  0\n  Ese-Odo             0  0  0  0  0  0  0  0\n  Esit - Eket         0  0  0  0  0  0  0  0\n  Essien Udim         0  0  0  0  0  0  0  0\n  Etche               0  0  0  0  0  0  0  0\n  Ethiope East        0  0  0  0  0  0  0  0\n  Ethiope West        0  0  0  0  0  0  0  0\n  Eti-Osa             0  0  0  0  0  0  0  0\n  Etim Ekpo           0  0  0  0  0  0  0  0\n  Etinan              0  0  0  0  0  0  0  0\n  Etsako Central      0  0  0  0  0  0  0  0\n  Etsako East         0  0  0  0  0  0  0  0\n  Etsako West         0  0  0  0  0  0  0  0\n  Etung               0  0  0  0  0  0  0  0\n  Ewekoro             0  0  0  0  0  0  0  0\n  Ezeagu              0  0  0  0  0  0  0  0\n  Ezinihitte          0  0  0  1  0  0  0  0\n  Ezza North          0  0  0  0  0  0  0  0\n  Ezza South          0  0  0  0  0  0  0  0\n  Fagge               0  0  0  0  0  0  0  0\n  Fakai               0  0  0  0  0  0  0  0\n  Faskari             0  0  0  0  0  0  0  0\n  Fika                0  0  0  0  0  0  0  0\n  Fufore              0  0  0  0  0  0  0  0\n  Funakaye            0  0  0  0  0  0  0  0\n  Fune                0  0  0  0  0  0  0  0\n  Funtua              0  0  0  0  0  0  0  0\n  Gabasawa            0  0  0  0  0  0  0  0\n  Gada                0  0  0  0  0  0  0  0\n  Gagarawa            0  0  0  0  0  0  0  0\n  Gamawa              0  0  0  0  0  0  0  0\n  Ganjuwa             0  0  0  0  0  0  0  0\n  Ganye               0  0  0  0  0  0  0  0\n  Garki               0  0  0  0  0  0  0  0\n  Garko               0  0  0  0  0  0  0  0\n  Garum Mallam        0  0  0  0  0  0  0  0\n  Gashaka             0  0  0  0  0  0  0  0\n  Gassol              0  0  0  0  0  0  0  0\n  Gaya                0  0  0  0  0  0  0  0\n  Gbako               0  0  0  0  0  0  0  0\n  Gboko               0  0  0  0  0  0  0  0\n  Geidam              0  0  0  0  0  0  0  0\n  Gezawa              0  0  0  0  0  0  0  0\n  Giade               0  0  0  0  0  0  0  0\n  Girei               0  0  0  0  0  0  0  0\n  Giwa                0  0  0  0  0  0  0  0\n  Gokana              0  0  0  0  0  0  0  0\n  Gombe               0  0  0  0  0  0  0  0\n  Gombi               0  0  0  0  0  0  0  0\n  Goronyo             0  0  0  0  0  0  0  0\n  Gubio               0  0  0  0  0  0  0  0\n  Gudu                0  0  0  0  0  0  0  0\n  Gujba               0  0  0  0  0  0  0  0\n  Gulani              0  0  0  0  0  0  0  0\n  Guma                0  0  0  0  0  0  0  0\n  Gumel               0  0  0  0  0  0  0  0\n  Gummi               0  0  0  0  0  0  0  0\n  Gurara              0  0  0  0  0  0  0  0\n  Guri                0  0  0  0  0  0  0  0\n  Gusau               0  0  0  0  0  0  0  0\n  Guyuk               0  0  0  0  0  0  0  0\n  Guzamala            0  0  0  0  0  0  0  0\n  Gwadabawa           0  0  0  0  0  0  0  0\n  Gwagwalada          0  0  0  0  0  0  0  0\n  Gwale               0  0  0  0  0  0  0  0\n  Gwandu              0  0  0  0  0  0  0  0\n  Gwaram              0  0  0  0  0  0  0  0\n  Gwarzo              0  0  0  0  0  0  0  0\n  Gwer East           0  0  0  0  0  0  0  0\n  Gwer West           0  0  0  0  0  0  0  0\n  Gwiwa               0  0  0  0  0  0  0  0\n  Gwoza               0  0  0  0  0  0  0  0\n  Hadejia             0  0  0  0  0  0  0  0\n  Hawul               0  0  0  0  0  0  0  0\n  Hong                0  0  0  0  0  0  0  0\n  Ibadan North        0  0  0  0  0  0  0  0\n  Ibadan North East   0  0  0  0  0  0  0  0\n  Ibadan North West   0  0  0  0  0  0  0  0\n  Ibadan South East   0  0  0  0  0  0  0  0\n  Ibadan South West   0  0  0  0  0  0  0  0\n  Ibaji               0  0  0  0  0  0  0  0\n  Ibarapa Central     0  0  0  0  0  0  0  0\n  Ibarapa East        0  0  0  0  0  0  0  0\n  Ibarapa North       0  0  0  0  0  0  0  0\n  Ibeju/Lekki         0  0  0  0  0  0  0  0\n  Ibeno               0  0  0  0  0  0  0  0\n  Ibesikpo Asutan     0  0  0  0  0  0  0  0\n  Ibi                 0  0  0  0  0  0  0  0\n  Ibiono Ibom         0  0  0  0  0  0  0  0\n  Idah                0  0  0  0  0  0  0  0\n  Idanre              0  0  0  0  0  0  0  0\n  Ideato North        0  0  0  0  0  0  0  0\n  Ideato South        1  0  0  0  0  0  0  0\n  Idemili North       0  0  0  0  0  0  0  0\n  Idemili South       0  0  0  0  0  0  0  0\n  Ido                 0  0  0  0  0  0  0  0\n  Ido-Osi             0  0  0  0  0  0  0  0\n  Ifako-Ijaye         0  0  0  0  0  0  0  0\n  Ife Central         0  0  0  0  0  0  0  0\n  Ife East            0  0  0  0  0  0  0  0\n  Ife North           0  0  0  0  0  0  0  0\n  Ife South           0  0  0  0  0  0  0  0\n  Ifedayo             0  0  0  0  0  0  0  0\n  Ifedore             0  0  0  0  0  0  0  0\n  Ifelodun            0  0  0  0  0  0  0  0\n  Ifo                 0  0  0  0  0  0  0  0\n  Igabi               0  0  0  0  0  0  0  0\n  Igalamela-Odolu     0  0  0  0  0  0  0  0\n  Igbo-Etiti          0  0  0  0  0  0  0  0\n  Igbo-Eze North      0  0  0  0  0  0  0  0\n  Igbo-Eze South      0  0  0  0  0  0  0  0\n  Igueben             0  0  0  0  0  0  0  0\n  Ihiala              0  0  0  0  0  0  0  0\n  Ihitte/Uboma        0  0  0  0  1  0  0  0\n  Ijebu East          0  0  0  0  0  0  0  0\n  Ijebu North         0  0  0  0  0  0  0  0\n  Ijebu North East    0  0  0  0  0  0  0  0\n  Ijebu Ode           0  0  0  0  0  0  0  0\n  Ijero               0  0  0  0  0  0  0  0\n  Ijumu               0  0  0  0  0  0  0  0\n  Ika                 0  0  0  0  0  0  0  0\n  Ika North East      0  0  0  0  0  0  0  0\n  Ika South           0  0  0  0  0  0  0  0\n  Ikara               0  0  0  0  0  0  0  0\n  Ikeduru             1  0  0  0  0  0  0  0\n  Ikeja               0  0  0  0  0  0  0  0\n  Ikenne              0  0  0  0  0  0  0  0\n  Ikere               0  0  0  0  0  0  0  0\n  Ikole               0  0  0  0  0  0  0  0\n  Ikom                0  0  0  0  0  0  0  0\n  Ikono               0  0  0  0  0  0  0  0\n  Ikorodu             0  0  0  0  0  0  0  0\n  Ikot Abasi          0  0  0  0  0  0  0  0\n  Ikot Ekpene         0  0  0  0  0  0  0  0\n  Ikpoba-Okha         0  0  0  0  0  0  0  0\n  Ikwerre             0  0  0  0  0  0  0  0\n  Ikwo                0  0  0  0  0  0  0  0\n  Ikwuano             0  1  0  0  0  0  0  0\n  Ila                 0  0  0  0  0  0  0  0\n  Ilaje               0  0  0  0  0  0  0  0\n  Ile-Oluji-Okeigbo   0  0  0  0  0  0  0  0\n  Ilejemeji           0  0  0  0  0  0  0  0\n  Ilesha East         0  0  0  0  0  0  0  0\n  Ilesha West         0  0  0  0  0  0  0  0\n  Illela              0  0  0  0  0  0  0  0\n  Ilorin East         0  0  0  0  0  0  0  0\n  Ilorin South        0  0  0  0  0  0  0  0\n  Ilorin West         0  0  0  0  0  0  0  0\n  Imeko-Afon          0  0  0  0  0  0  0  0\n  Ingawa              0  0  0  0  0  0  0  0\n  Ini                 0  0  0  0  0  0  0  0\n  Ipokia              0  0  0  0  0  0  0  0\n  Irele               0  0  0  0  0  0  0  0\n  Irepo               0  0  0  0  0  0  0  0\n  Irepodun            0  0  0  0  0  0  0  0\n  Irepodun/Ifelodun   0  0  0  0  0  0  0  0\n  Irewole             0  0  0  0  0  0  0  0\n  Isa                 0  0  0  0  0  0  0  0\n  Ise/Orun            0  0  0  0  0  0  0  0\n  Iseyin              0  0  0  0  0  0  0  0\n  Ishielu             0  0  0  0  0  0  0  0\n  Isi-Uzo             0  0  0  0  0  0  0  0\n  Isiala-Ngwa North   0  0  1  0  0  0  0  0\n  Isiala-Ngwa South   0  0  1  0  0  0  0  0\n  Isiala Mbano        0  0  0  0  0  1  0  0\n  Isin                0  0  0  0  0  0  0  0\n  Isiukwuato          0  0  1  0  0  0  0  0\n  Isokan              0  0  0  0  0  0  0  0\n  Isoko North         0  0  0  0  0  0  0  0\n  Isoko South         0  0  0  0  0  0  0  0\n  Isu                 0  1  0  0  0  0  0  0\n  Itas/Gadau          0  0  0  0  0  0  0  0\n  Itesiwaju           0  0  0  0  0  0  0  0\n  Itu                 0  0  0  0  0  0  0  0\n  Ivo                 0  0  0  0  0  0  0  0\n  Iwajowa             0  0  0  0  0  0  0  0\n  Iwo                 0  0  0  0  0  0  0  0\n  Izzi                0  0  0  0  0  0  0  0\n  Jaba                0  0  0  0  0  0  0  0\n  Jada                0  0  0  0  0  0  0  0\n  Jahun               0  0  0  0  0  0  0  0\n  Jakusko             0  0  0  0  0  0  0  0\n  Jalingo             0  0  0  0  0  0  0  0\n  Jama'are            0  0  0  0  0  0  0  0\n  Jega                0  0  0  0  0  0  0  0\n  Jema'a              0  0  0  0  0  0  0  0\n  Jere                0  0  0  0  0  0  0  0\n  Jibia               0  0  0  0  0  0  0  0\n  Jos East            0  0  0  0  0  0  0  0\n  Jos North           0  0  0  0  0  0  0  0\n  Jos South           0  0  0  0  0  0  0  0\n  Kabba/Bunu          0  0  0  0  0  0  0  0\n  Kabo                0  0  0  0  0  0  0  0\n  Kachia              0  0  0  0  0  0  0  0\n  Kaduna North        0  0  0  0  0  0  0  0\n  Kaduna South        0  0  0  0  0  0  0  0\n  Kafin Hausa         0  0  0  0  0  0  0  0\n  Kafur               0  0  0  0  0  0  0  0\n  Kaga                0  0  0  0  0  0  0  0\n  Kagarko             0  0  0  0  0  0  0  0\n  Kaiama              0  0  0  0  0  0  0  0\n  Kaita               0  0  0  0  0  0  0  0\n  Kajola              0  0  0  0  0  0  0  0\n  Kajuru              0  0  0  0  0  0  0  0\n  Kala/Balge          0  0  0  0  0  0  0  0\n  Kalgo               0  0  0  0  0  0  0  0\n  Kaltungo            0  0  0  0  0  0  0  0\n  Kanam               0  0  0  0  0  0  0  0\n  Kankara             0  0  0  0  0  0  0  0\n  Kanke               0  0  0  0  0  0  0  0\n  Kankia              0  0  0  0  0  0  0  0\n  Kano Municipal      0  0  0  0  0  0  0  0\n  Karasuwa            0  0  0  0  0  0  0  0\n  Karaye              0  0  0  0  0  0  0  0\n  Karim-Lamido        0  0  0  0  0  0  0  0\n  Karu                0  0  0  0  0  0  0  0\n  Katagum             0  0  0  0  0  0  0  0\n  Katcha              0  0  0  0  0  0  0  0\n  Katsina             0  0  0  0  0  0  0  0\n  Katsina-Ala         0  0  0  0  0  0  0  0\n  Kaugama             0  0  0  0  0  0  0  0\n  Kaura               0  0  0  0  0  0  0  0\n  Kaura Namoda        0  0  0  0  0  0  0  0\n  Kauru               0  0  0  0  0  0  0  0\n  Kazaure             0  0  0  0  0  0  0  0\n  Keana               0  0  0  0  0  0  0  0\n  Kebbe               0  0  0  0  0  0  0  0\n  Keffi               0  0  0  0  0  0  0  0\n  Khana               0  0  0  0  0  0  0  0\n  Kibiya              0  0  0  0  0  0  0  0\n  Kirfi               0  0  0  0  0  0  0  0\n  Kiri Kasamma        0  0  0  0  0  0  0  0\n  Kiru                0  0  0  0  0  0  0  0\n  Kiyawa              0  0  0  0  0  0  0  0\n  Kogi                0  0  0  0  0  0  0  0\n  Koko/Besse          0  0  0  0  0  0  0  0\n  Kokona              0  0  0  0  0  0  0  0\n  Kolokuma/Opokuma    0  0  0  0  0  0  0  0\n  Konduga             0  0  0  0  0  0  0  0\n  Konshisha           0  0  0  0  0  0  0  0\n  Kontagora           0  0  0  0  0  0  0  0\n  Kosofe              0  0  0  0  0  0  0  0\n  Kubau               0  0  0  0  0  0  0  0\n  Kudan               0  0  0  0  0  0  0  0\n  Kuje                0  0  0  0  0  0  0  0\n  Kukawa              0  0  0  0  0  0  0  0\n  Kumbotso            0  0  0  0  0  0  0  0\n  Kunchi              0  0  0  0  0  0  0  0\n  Kura                0  0  0  0  0  0  0  0\n  Kurfi               0  0  0  0  0  0  0  0\n  Kurmi               0  0  0  0  0  0  0  0\n  Kusada              0  0  0  0  0  0  0  0\n  Kwali               0  0  0  0  0  0  0  0\n  Kwami               0  0  0  0  0  0  0  0\n  Kwande              0  0  0  0  0  0  0  0\n  Kware               0  0  0  0  0  0  0  0\n  Kwaya Kusar         0  0  0  0  0  0  0  0\n  Lafia               0  0  0  0  0  0  0  0\n  Lagelu              0  0  0  0  0  0  0  0\n  Lagos Island        0  0  0  0  0  0  0  0\n  Lagos Mainland      0  0  0  0  0  0  0  0\n  Lamurde             0  0  0  0  0  0  0  0\n  Langtang North      0  0  0  0  0  0  0  0\n  Langtang South      0  0  0  0  0  0  0  0\n  Lapai               0  0  0  0  0  0  0  0\n  Lau                 0  0  0  0  0  0  0  0\n  Lavun               0  0  0  0  0  0  0  0\n  Lere                0  0  0  0  0  0  0  0\n  Logo                0  0  0  0  0  0  0  0\n  Lokoja              0  0  0  0  0  0  0  0\n  Machina             0  0  0  0  0  0  0  0\n  Madagali            0  0  0  0  0  0  0  0\n  Madobi              0  0  0  0  0  0  0  0\n  Mafa                0  0  0  0  0  0  0  0\n  Magama              0  0  0  0  0  0  0  0\n  Magumeri            0  0  0  0  0  0  0  0\n  Mai'adua            0  0  0  0  0  0  0  0\n  Maiduguri           0  0  0  0  0  0  0  0\n  Maigatari           0  0  0  0  0  0  0  0\n  Maiha               0  0  0  0  0  0  0  0\n  Maiyama             0  0  0  0  0  0  0  0\n  Makoda              0  0  0  0  0  0  0  0\n  Makurdi             0  0  0  0  0  0  0  0\n  Malam Madori        0  0  0  0  0  0  0  0\n  Malumfashi          0  0  0  0  0  0  0  0\n  Mangu               0  0  0  0  0  0  0  0\n  Mani                0  0  0  0  0  0  0  0\n  Maradun             0  0  0  0  0  0  0  0\n  Mariga              0  0  0  0  0  0  0  0\n  Markafi             0  0  0  0  0  0  0  0\n  Marte               0  0  0  0  0  0  0  0\n  Maru                0  0  0  0  0  0  0  0\n  Mashegu             0  0  0  0  0  0  0  0\n  Mashi               0  0  0  0  0  0  0  0\n  Matazu              0  0  0  0  0  0  0  0\n  Mayo-Belwa          0  0  0  0  0  0  0  0\n  Mbaitoli            0  0  1  0  0  0  0  0\n  Mbo                 0  0  0  0  0  0  0  0\n  Michika             0  0  0  0  0  0  0  0\n  Miga                0  0  0  0  0  0  0  0\n  Mikang              0  0  0  0  0  0  0  0\n  Minjibir            0  0  0  0  0  0  0  0\n  Misau               0  0  0  0  0  0  0  0\n  Mkpat Enin          0  0  0  0  0  0  0  0\n  Moba                0  0  0  0  0  0  0  0\n  Mobbar              0  0  0  0  0  0  0  0\n  Mokwa               0  0  0  0  0  0  0  0\n  Monguno             0  0  0  0  0  0  0  0\n  Mopa-Muro           0  0  0  0  0  0  0  0\n  Moro                0  0  0  0  0  0  0  0\n  Mubi North          0  0  0  0  0  0  0  0\n  Mubi South          0  0  0  0  0  0  0  0\n  Musawa              0  0  0  0  0  0  0  0\n  Mushin              0  0  0  0  0  0  0  0\n  Muya                0  0  0  0  0  0  0  0\n  Nafada              0  0  0  0  0  0  0  0\n  Nangere             0  0  0  0  0  0  0  0\n  Nasarawa            0  0  0  0  0  0  0  0\n  Nasarawa-Eggon      0  0  0  0  0  0  0  0\n  Ndokwa East         0  0  0  0  0  0  0  0\n  Ndokwa West         0  0  0  0  0  0  0  0\n  Nembe               0  0  0  0  0  0  0  0\n  Ngala               0  0  0  0  0  0  0  0\n  Nganzai             0  0  0  0  0  0  0  0\n  Ngaski              0  0  0  0  0  0  0  0\n  Ngor-Okpala         0  1  0  0  0  0  0  0\n  Nguru               0  0  0  0  0  0  0  0\n  Ningi               0  0  0  0  0  0  0  0\n  Njaba               0  0  0  0  0  0  0  0\n  Njikoka             0  0  0  0  0  0  0  0\n  Nkanu East          0  0  0  0  0  0  0  0\n  Nkanu West          0  0  0  0  0  0  0  0\n  Nkwerre             1  0  0  0  0  0  0  0\n  Nnewi North         0  0  0  0  0  0  0  0\n  Nnewi South         0  1  0  0  0  0  0  0\n  Nsit Atai           0  0  0  0  0  0  0  0\n  Nsit Ibom           0  0  0  0  0  0  0  0\n  Nsit Ubium          0  0  0  0  0  0  0  0\n  Nsukka              0  0  0  0  0  0  0  0\n  Numan               0  0  0  0  0  0  0  0\n  Nwangele            0  0  0  1  0  0  0  0\n  Obafemi-Owode       0  0  0  0  0  0  0  0\n  Obanliku            0  0  0  0  0  0  0  0\n  Obi                 0  0  0  0  0  0  0  0\n  Obi Ngwa            0  1  0  0  0  0  0  0\n  Obia/Akpor          0  0  0  0  0  0  0  0\n  Obokun              0  0  0  0  0  0  0  0\n  Obot Akara          0  0  0  0  0  0  0  0\n  Obowo               0  0  0  0  0  1  0  0\n  Obubra              0  0  0  0  0  0  0  0\n  Obudu               0  0  0  0  0  0  0  0\n  Odeda               0  0  0  0  0  0  0  0\n  Odigbo              0  0  0  0  0  0  0  0\n  Odo-Otin            0  0  0  0  0  0  0  0\n  Odogbolu            0  0  0  0  0  0  0  0\n  Odukpani            0  0  0  0  0  0  0  0\n  Offa                0  0  0  0  0  0  0  0\n  Ofu                 0  0  0  0  0  0  0  0\n  Ogba/Egbema/Ndoni   0  0  0  0  0  0  0  0\n  Ogbadibo            0  0  0  0  0  0  0  0\n  Ogbaru              0  0  0  0  0  0  0  0\n  Ogbia               0  0  0  0  0  0  0  0\n  Ogbomosho North     0  0  0  0  0  0  0  0\n  Ogbomosho South     0  0  0  0  0  0  0  0\n  Ogo Oluwa           0  0  0  0  0  0  0  0\n  Ogoja               0  0  0  0  0  0  0  0\n  Ogori/Magongo       0  0  0  0  0  0  0  0\n  Ogu/Bolo            0  0  0  0  0  0  0  0\n  Ogun waterside      0  0  0  0  0  0  0  0\n  Oguta               0  0  0  0  0  0  0  0\n  Ohafia              0  0  0  0  0  0  0  0\n  Ohaji/Egbema        0  0  0  0  0  0  0  0\n  Ohaozara            0  0  0  0  0  0  0  0\n  Ohaukwu             0  0  0  0  0  0  0  0\n  Ohimini             0  0  0  0  0  0  0  0\n  Oji-River           1  0  0  0  0  0  0  0\n  Ojo                 0  0  0  0  0  0  0  0\n  Oju                 0  0  0  0  0  0  0  0\n  Oke-Ero             0  0  0  0  0  0  0  0\n  Okehi               0  0  0  0  0  0  0  0\n  Okene               0  0  0  0  0  0  0  0\n  Okigwe              0  0  0  0  0  0  0  1\n  Okitipupa           0  0  0  0  0  0  0  0\n  Okobo               0  0  0  0  0  0  0  0\n  Okpe                0  0  0  0  0  0  0  0\n  Okpokwu             0  0  0  0  0  0  0  0\n  Okrika              0  0  0  0  0  0  0  0\n  Ola-oluwa           0  0  0  0  0  0  0  0\n  Olamabolo           0  0  0  0  0  0  0  0\n  Olorunda            0  0  0  0  0  0  0  0\n  Olorunsogo          0  0  0  0  0  0  0  0\n  Oluyole             0  0  0  0  0  0  0  0\n  Omala               0  0  0  0  0  0  0  0\n  Omumma              0  0  0  0  0  0  0  0\n  Ona-Ara             0  0  0  0  0  0  0  0\n  Ondo East           0  0  0  0  0  0  0  0\n  Ondo West           0  0  0  0  0  0  0  0\n  Onicha              0  0  0  0  0  0  0  0\n  Onitsha North       0  0  0  0  0  0  0  0\n  Onitsha South       0  0  0  0  0  0  0  0\n  Onna                0  0  0  0  0  0  0  0\n  Opobo/Nkoro         0  0  0  0  0  0  0  0\n  Oredo               0  0  0  0  0  0  0  0\n  Orelope             0  0  0  0  0  0  0  0\n  Orhionmwon          0  0  0  0  0  0  0  0\n  Ori Ire             0  0  0  0  0  0  0  0\n  Oriade              0  0  0  0  0  0  0  0\n  Orlu                0  1  0  0  0  0  0  0\n  Orolu               0  0  0  0  0  0  0  0\n  Oron                0  0  0  0  0  0  0  0\n  Orsu                0  0  0  0  0  0  0  0\n  Oru East            0  0  0  0  0  0  0  0\n  Oru West            0  0  0  0  0  0  0  0\n  Oruk Anam           0  0  0  0  0  0  0  0\n  Orumba North        0  1  0  0  0  0  0  0\n  Orumba South        0  0  0  0  1  0  0  0\n  Ose                 0  0  0  0  0  0  0  0\n  Oshimili North      0  0  0  0  0  0  0  0\n  Oshimili South      0  0  0  0  0  0  0  0\n  Oshodi-Isolo        0  0  0  0  0  0  0  0\n  Osisioma Ngwa       0  0  1  0  0  0  0  0\n  Osogbo              0  0  0  0  0  0  0  0\n  Oturkpo             0  0  0  0  0  0  0  0\n  Ovia North East     0  0  0  0  0  0  0  0\n  Ovia South West     0  0  0  0  0  0  0  0\n  Owan East           0  0  0  0  0  0  0  0\n  Owan West           0  0  0  0  0  0  0  0\n  Owerri-Municipal    0  0  0  0  0  0  0  0\n  Owerri North        0  0  0  0  0  0  0  0\n  Owerri West         0  0  0  0  0  0  0  0\n  Owo                 0  0  0  0  0  0  0  0\n  Oye                 0  0  0  0  0  0  0  0\n  Oyi                 0  0  0  0  0  0  0  0\n  Oyigbo              0  0  0  0  0  0  0  0\n  Oyo East            0  0  0  0  0  0  0  0\n  Oyo West            0  0  0  0  0  0  0  0\n  Oyun                0  0  0  0  0  0  0  0\n  Paikoro             0  0  0  0  0  0  0  0\n  Pankshin            0  0  0  0  0  0  0  0\n  Patani              0  0  0  0  0  0  0  0\n  Pategi              0  0  0  0  0  0  0  0\n  Port-Harcourt       0  0  0  0  0  0  0  0\n  Potiskum            0  0  0  0  0  0  0  0\n  Qua'an Pan          0  0  0  0  0  0  0  0\n  Rabah               0  0  0  0  0  0  0  0\n  Rafi                0  0  0  0  0  0  0  0\n  Rano                0  0  0  0  0  0  0  0\n  Remo North          0  0  0  0  0  0  0  0\n  Rijau               0  0  0  0  0  0  0  0\n  Rimi                0  0  0  0  0  0  0  0\n  Rimin Gado          0  0  0  0  0  0  0  0\n  Ringim              0  0  0  0  0  0  0  0\n  Riyom               0  0  0  0  0  0  0  0\n  Rogo                0  0  0  0  0  0  0  0\n  Roni                0  0  0  0  0  0  0  0\n  Sabon-Gari          0  0  0  0  0  0  0  0\n  Sabon Birni         0  0  0  0  0  0  0  0\n  Sabuwa              0  0  0  0  0  0  0  0\n  Safana              0  0  0  0  0  0  0  0\n  Sagbama             0  0  0  0  0  0  0  0\n  Sakaba              0  0  0  0  0  0  0  0\n  Saki East           0  0  0  0  0  0  0  0\n  Saki West           0  0  0  0  0  0  0  0\n  Sandamu             0  0  0  0  0  0  0  0\n  Sanga               0  0  0  0  0  0  0  0\n  Sapele              0  0  0  0  0  0  0  0\n  Sardauna            0  0  0  0  0  0  0  0\n  Shagamu             0  0  0  0  0  0  0  0\n  Shagari             0  0  0  0  0  0  0  0\n  Shanga              0  0  0  0  0  0  0  0\n  Shani               0  0  0  0  0  0  0  0\n  Shanono             0  0  0  0  0  0  0  0\n  Shelleng            0  0  0  0  0  0  0  0\n  Shendam             0  0  0  0  0  0  0  0\n  Shinkafi            0  0  0  0  0  0  0  0\n  Shira               0  0  0  0  0  0  0  0\n  Shiroro             0  0  0  0  0  0  0  0\n  Shomgom             0  0  0  0  0  0  0  0\n  Shomolu             0  0  0  0  0  0  0  0\n  Silame              0  0  0  0  0  0  0  0\n  Soba                0  0  0  0  0  0  0  0\n  Sokoto North        0  0  0  0  0  0  0  0\n  Sokoto South        0  0  0  0  0  0  0  0\n  Song                0  0  0  0  0  0  0  0\n  Southern Ijaw       0  0  0  0  0  0  0  0\n  Sule-Tankarkar      0  0  0  0  0  0  0  0\n  Suleja              0  0  0  0  0  0  0  0\n  Sumaila             0  0  0  0  0  0  0  0\n  Suru                0  0  0  0  0  0  0  0\n  Surulere            0  0  0  0  0  0  0  0\n  Tafa                0  0  0  0  0  0  0  0\n  Tafawa-Balewa       0  0  0  0  0  0  0  0\n  Tai                 0  0  0  0  0  0  0  0\n  Takai               0  0  0  0  0  0  0  0\n  Takum               0  0  0  0  0  0  0  0\n  Talata Mafara       0  0  0  0  0  0  0  0\n  Tambuwal            0  0  0  0  0  0  0  0\n  Tangaza             0  0  0  0  0  0  0  0\n  Tarauni             0  0  0  0  0  0  0  0\n  Tarka               0  0  0  0  0  0  0  0\n  Tarmua              0  0  0  0  0  0  0  0\n  Taura               0  0  0  0  0  0  0  0\n  Tofa                0  0  0  0  0  0  0  0\n  Toro                0  0  0  0  0  0  0  0\n  Toto                0  0  0  0  0  0  0  0\n  Toungo              0  0  0  0  0  0  0  0\n  Tsafe               0  0  0  0  0  0  0  0\n  Tsanyawa            0  0  0  0  0  0  0  0\n  Tudun Wada          0  0  0  0  0  0  0  0\n  Tureta              0  0  0  0  0  0  0  0\n  Udenu               0  0  0  0  0  0  0  0\n  Udi                 0  0  0  0  0  0  0  0\n  Udu                 0  0  0  0  0  0  0  0\n  Udung Uko           0  0  0  0  0  0  0  0\n  Ughelli North       0  0  0  0  0  0  0  0\n  Ughelli South       0  0  0  0  0  0  0  0\n  Ugwunagbo           0  0  0  0  0  0  0  0\n  Uhunmwonde          0  0  0  0  0  0  0  0\n  Ukanafun            0  0  0  0  0  0  0  0\n  Ukum                0  0  0  0  0  0  0  0\n  Ukwa East           0  0  0  0  0  0  0  0\n  Ukwa West           0  0  0  0  0  0  0  0\n  Ukwuani             0  0  0  0  0  0  0  0\n  Umu-Nneochi         0  0  0  0  0  1  0  0\n  Umuahia North       0  0  0  1  0  0  0  0\n  Umuahia South       0  0  1  0  0  0  0  0\n  Ungogo              0  0  0  0  0  0  0  0\n  Unuimo              0  0  0  0  1  0  0  0\n  Uruan               0  0  0  0  0  0  0  0\n  Urue-Offong/Oruko   0  0  0  0  0  0  0  0\n  Ushongo             0  0  0  0  0  0  0  0\n  Ussa                0  0  0  0  0  0  0  0\n  Uvwie               0  0  0  0  0  0  0  0\n  Uyo                 0  0  0  0  0  0  0  0\n  Uzo-Uwani           0  0  0  0  0  0  0  0\n  Vandeikya           0  0  0  0  0  0  0  0\n  Wamako              0  0  0  0  0  0  0  0\n  Wamba               0  0  0  0  0  0  0  0\n  Warawa              0  0  0  0  0  0  0  0\n  Warji               0  0  0  0  0  0  0  0\n  Warri North         0  0  0  0  0  0  0  0\n  Warri South         0  0  0  0  0  0  0  0\n  Warri South West    0  0  0  0  0  0  0  0\n  Wasagu/Danko        0  0  0  0  0  0  0  0\n  Wase                0  0  0  0  0  0  0  0\n  Wudil               0  0  0  0  0  0  0  0\n  Wukari              0  0  0  0  0  0  0  0\n  Wurno               0  0  0  0  0  0  0  0\n  Wushishi            0  0  0  0  0  0  0  0\n  Yabo                0  0  0  0  0  0  0  0\n  Yagba East          0  0  0  0  0  0  0  0\n  Yagba West          0  0  0  0  0  0  0  0\n  Yakurr              0  0  0  0  0  0  0  0\n  Yala                0  0  0  0  0  0  0  0\n  Yamaltu/Deba        0  0  0  0  0  0  0  0\n  Yankwashi           0  0  0  0  0  0  0  0\n  Yauri               0  0  0  0  0  0  0  0\n  Yenegoa             0  0  0  0  0  0  0  0\n  Yola North          0  0  0  0  0  0  0  0\n  Yola South          0  0  0  0  0  0  0  0\n  Yorro               0  0  0  0  0  0  0  0\n  Yunusari            0  0  0  0  0  0  0  0\n  Yusufari            0  0  0  0  0  0  0  0\n  Zaki                0  0  0  0  0  0  0  0\n  Zango               0  0  0  0  0  0  0  0\n  Zango-Kataf         0  0  0  0  0  0  0  0\n  Zaria               0  0  0  0  0  0  0  0\n  Zing                0  0  0  0  0  0  0  0\n  Zurmi               0  0  0  0  0  0  0  0\n  Zuru                0  0  0  0  0  0  0  0\n\n\n\n\n7.4.3 Plotting fixed distance weight matrix.\nWe will plot the distance weight matrix by using the code chunk below.\n\nplot(nga_wp$geometry, border=\"lightgrey\")\nplot(wm_d72, coords, add=TRUE)\nplot(k1, coords, add=TRUE, col=\"blue\", length=0.08)\n\n\n\n\nThe blue lines show the links of 1st nearest neighbors and the black lines show the links of neighbors within the cut-off distance of 72km.\nAlternatively, we can plot both of them next to each other by using the code chunk below.\n\npar(mfrow=c(1,2))\nplot(nga_wp$geometry, border=\"lightgrey\")\nplot(k1, coords, add=TRUE, col=\"red\", length=0.04, main=\"1st nearest neighbours\")\nplot(nga_wp$geometry, border=\"lightgrey\")\nplot(wm_d72, coords, add=TRUE, pch = 19, cex = 0.2, main=\"Distance link\")\n\n\n\n\n\n\n\n\n\n7.4.4 Computing adaptive distance weight matrix.\nOne of the characteristics of fixed distance weight matrix is that more densely settled areas (usually the urban areas) tend to have more neighbors and the less densely settled areas (usually the rural counties) tend to have lesser neighbors. Having many neighbors smoothes the neighbor relationship across more neighbors.\nIt is possible to control the numbers of neighbors directly using k-nearest neighbors, either accepting asymmetric neighbors or imposing symmetry as shown in the code chunk below.\n\nknn6 <- knn2nb(knearneigh(coords, k=6))\nknn6\n\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 4644 \nPercentage nonzero weights: 0.7751938 \nAverage number of links: 6 \nNon-symmetric neighbours list\n\n\nSimilarly, we can display the content of the matrix by using str().\n\nstr(knn6)\n\nList of 774\n $ : int [1:6] 2 364 548 597 624 721\n $ : int [1:6] 1 548 597 624 721 725\n $ : int [1:6] 250 261 447 507 509 526\n $ : int [1:6] 20 263 446 454 466 690\n $ : int [1:6] 203 208 331 334 539 738\n $ : int [1:6] 170 217 218 337 379 553\n $ : int [1:6] 8 176 214 281 544 555\n $ : int [1:6] 7 214 281 306 544 555\n $ : int [1:6] 18 19 218 337 576 757\n $ : int [1:6] 25 216 325 528 552 632\n $ : int [1:6] 26 27 68 191 565 762\n $ : int [1:6] 135 263 417 446 690 695\n $ : int [1:6] 31 37 393 570 583 584\n $ : int [1:6] 170 363 546 577 581 589\n $ : int [1:6] 22 49 177 297 306 580\n $ : int [1:6] 30 187 296 328 357 360\n $ : int [1:6] 35 295 378 460 638 639\n $ : int [1:6] 9 19 218 574 576 601\n $ : int [1:6] 9 18 103 376 574 576\n $ : int [1:6] 4 106 239 419 454 466\n $ : int [1:6] 60 61 162 269 520 596\n $ : int [1:6] 49 297 326 443 515 623\n $ : int [1:6] 54 291 292 537 618 619\n $ : int [1:6] 123 476 527 652 673 761\n $ : int [1:6] 10 181 216 314 325 552\n $ : int [1:6] 11 27 191 336 562 762\n $ : int [1:6] 11 26 191 439 663 762\n $ : int [1:6] 29 178 299 300 358 369\n $ : int [1:6] 173 178 358 378 460 591\n $ : int [1:6] 16 39 41 186 192 360\n $ : int [1:6] 13 211 289 570 583 584\n $ : int [1:6] 51 62 461 462 515 693\n $ : int [1:6] 166 227 238 655 743 750\n $ : int [1:6] 42 104 136 213 559 757\n $ : int [1:6] 17 275 276 277 295 460\n $ : int [1:6] 107 247 408 455 681 759\n $ : int [1:6] 38 40 570 583 584 629\n $ : int [1:6] 39 40 41 186 320 570\n $ : int [1:6] 30 38 40 41 186 320\n $ : int [1:6] 37 38 39 41 186 570\n $ : int [1:6] 30 38 39 40 192 634\n $ : int [1:6] 86 136 137 499 613 718\n $ : int [1:6] 11 68 157 524 590 645\n $ : int [1:6] 45 192 303 328 360 634\n $ : int [1:6] 44 290 303 328 360 599\n $ : int [1:6] 387 429 438 521 668 742\n $ : int [1:6] 33 166 234 238 698 750\n $ : int [1:6] 65 113 265 386 482 701\n $ : int [1:6] 22 297 326 515 623 693\n $ : int [1:6] 36 98 107 409 432 681\n $ : int [1:6] 32 62 461 462 623 693\n $ : int [1:6] 78 165 293 532 602 636\n $ : int [1:6] 52 78 80 165 621 636\n $ : int [1:6] 23 79 293 294 532 536\n $ : int [1:6] 122 246 333 430 571 605\n $ : int [1:6] 77 376 533 576 601 728\n $ : int [1:6] 58 199 312 322 621 622\n $ : int [1:6] 57 322 323 603 621 622\n $ : int [1:6] 88 128 129 493 700 748\n $ : int [1:6] 61 563 578 592 596 626\n $ : int [1:6] 21 60 269 578 596 626\n $ : int [1:6] 32 51 461 462 515 693\n $ : int [1:6] 90 384 416 467 765 772\n $ : int [1:6] 48 65 74 113 131 407\n $ : int [1:6] 48 64 74 113 265 683\n $ : int [1:6] 103 104 331 338 351 574\n $ : int [1:6] 347 348 566 609 640 694\n $ : int [1:6] 43 157 191 549 590 645\n $ : int [1:6] 140 146 274 473 500 512\n $ : int [1:6] 71 299 341 343 344 610\n $ : int [1:6] 173 298 299 343 344 625\n $ : int [1:6] 566 567 568 609 638 639\n $ : int [1:6] 361 374 377 404 665 666\n $ : int [1:6] 65 109 265 683 741 754\n $ : int [1:6] 272 398 422 433 485 501\n $ : int [1:6] 254 427 470 547 647 677\n $ : int [1:6] 56 195 533 534 579 728\n $ : int [1:6] 52 79 165 215 532 636\n $ : int [1:6] 54 78 165 532 618 636\n $ : int [1:6] 52 53 78 165 215 739\n $ : int [1:6] 99 145 233 426 689 760\n $ : int [1:6] 15 49 51 177 352 580\n $ : int [1:6] 132 258 383 414 529 767\n $ : int [1:6] 24 148 437 482 673 692\n $ : int [1:6] 105 394 654 675 707 712\n $ : int [1:6] 42 136 137 499 613 718\n $ : int [1:6] 149 151 221 226 399 486\n $ : int [1:6] 59 150 489 648 700 714\n $ : int [1:6] 260 408 463 542 674 676\n $ : int [1:6] 63 163 236 237 384 710\n $ : int [1:6] 160 271 406 475 492 525\n $ : int [1:6] 119 390 391 392 487 656\n $ : int [1:6] 354 402 594 607 665 666\n $ : int [1:6] 31 158 436 561 596 709\n $ : int [1:6] 390 391 392 405 469 656\n $ : int [1:6] 139 389 403 420 451 653\n $ : int [1:6] 96 389 420 451 662 773\n $ : int [1:6] 50 117 153 231 432 696\n $ : int [1:6] 81 145 426 667 760 769\n  [list output truncated]\n - attr(*, \"region.id\")= chr [1:774] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language knearneigh(x = coords, k = 6)\n - attr(*, \"sym\")= logi FALSE\n - attr(*, \"type\")= chr \"knn\"\n - attr(*, \"knn-k\")= num 6\n - attr(*, \"class\")= chr \"nb\"\n\n\n\n\n\n\n\n7.4.5 Plotting distance based neighbors.\nWe can plot the weight matrix using the code chunk below.\n\nplot(nga_wp$geometry, border=\"lightgrey\")\nplot(knn6, coords, pch = 19, cex = 0.35, add = TRUE, col = \"red\")"
  },
  {
    "objectID": "InClass_Ex02/Africa_Water/Take_Home_Ex1.html#weights-based-on-idw.",
    "href": "InClass_Ex02/Africa_Water/Take_Home_Ex1.html#weights-based-on-idw.",
    "title": "Take Home Ex 1 : Nigeria Water Functional & Non Functional Water Points",
    "section": "8. Weights based on IDW.",
    "text": "8. Weights based on IDW.\nLet us derive a spatial weight matrix based on Inversed Distance method.\nFirst, we will compute the distances between areas by using nbdists() of spdep.\n\ndist <- nbdists(wm_q, coords, longlat = TRUE)\nids <- lapply(dist, function(x) 1/(x))\nids\n\n[[1]]\n[1] 0.25000205 0.09046782 0.10747703 0.09375983\n\n[[2]]\n[1] 0.25000205 0.08862914 0.14105584\n\n[[3]]\n[1] 0.01590084 0.01662956 0.01260998\n\n[[4]]\n[1] 0.01717590 0.03004788 0.01330541 0.02168731 0.05975734 0.04459112 0.01352838\n\n[[5]]\n[1] 0.05994237 0.05404009 0.04762801 0.03801382 0.06150355\n\n[[6]]\n[1] 0.03031931 0.03665471 0.03519739 0.05108370 0.03848687 0.02871387 0.01681994\n\n[[7]]\n[1] 0.04527349 0.03137554 0.03388681 0.03673492 0.01842930 0.02695780\n\n[[8]]\n[1] 0.04527349 0.03503427 0.04431895 0.04430146\n\n[[9]]\n[1] 0.08750537 0.02607067 0.03586348 0.03155024 0.05007085\n\n[[10]]\n[1] 0.06896664 0.10626681 0.05472395 0.04404016 0.05163643 0.06002816 0.05631991\n\n[[11]]\n[1] 0.03879630 0.03946088 0.02732362 0.01997084 0.03310675 0.02602152 0.03739768\n\n[[12]]\n[1] 0.02720192 0.02289252 0.02247421 0.02706160 0.01242536 0.02652922 0.02553668\n[8] 0.01294330\n\n[[13]]\n[1] 0.04094495 0.02052331 0.01706481 0.06507531 0.03911223\n\n[[14]]\n[1] 0.03235821 0.02090215 0.03178682 0.02512533 0.03394803 0.02319313 0.03101831\n[8] 0.01726529\n\n[[15]]\n[1] 0.05083319 0.03678314 0.04204379 0.03978005 0.03826900 0.03140347 0.04926498\n\n[[16]]\n[1] 0.03889753 0.03707198 0.06700044 0.08544715 0.04163595\n\n[[17]]\n[1] 0.05668031 0.05718452 0.05552066\n\n[[18]]\n[1] 0.08750537 0.07690648 0.02466231 0.04790108 0.03693977\n\n[[19]]\n[1] 0.07690648 0.03359907 0.02323195 0.04421283 0.05314287 0.05121231\n\n[[20]]\n[1] 0.033322003 0.029962683 0.012257596 0.008440251 0.013361445\n\n[[21]]\n[1] 0.03979094 0.01916518 0.02167794 0.02025683 0.02524210\n\n[[22]]\n[1] 0.1191950 0.2281036 0.2259755\n\n[[23]]\n[1] 0.07105927 0.08293945 0.07694642 0.06270603 0.06410599\n\n[[24]]\n[1] 0.01598809 0.03101886 0.02259390 0.04226673\n\n[[25]]\n[1] 0.06896664 0.07542062 0.08664354 0.06489986 0.08085923 0.06485286 0.09443145\n\n[[26]]\n[1] 0.03879630 0.07594002 0.06082261 0.02672551\n\n[[27]]\n[1] 0.03946088 0.07594002 0.02560125 0.02582509 0.05206725\n\n[[28]]\n[1] 0.03299555 0.02442016 0.06780203 0.01841203 0.01996482 0.06423264 0.06304234\n\n[[29]]\n[1] 0.03299555 0.04060844 0.03363179 0.05411658 0.06264413 0.04487982 0.04943164\n\n[[30]]\n[1] 0.03889753 0.02651048 0.03181639 0.04173232 0.05115220 0.03079867 0.03102826\n[8] 0.04683879\n\n[[31]]\n[1] 0.04094495 0.01746722 0.02760361 0.01284703 0.01881341 0.03602450\n\n[[32]]\n[1] 0.1848481 0.3127056 0.2250900\n\n[[33]]\n[1] 0.03026381 0.03327874 0.04934875 0.04350333 0.02898622 0.03080902\n\n[[34]]\n[1] 0.01752635 0.01872659 0.01726898 0.01347536 0.01513894 0.01977057 0.01725714\n\n[[35]]\n[1] 0.05668031 0.05517544 0.04556184 0.03641027 0.05101045 0.03580025 0.02846843\n\n[[36]]\n[1] 0.01527618 0.03078604 0.01275338 0.04191813 0.01947534 0.01549262 0.02238891\n[8] 0.01912638\n\n[[37]]\n [1] 0.02052331 0.02611800 0.03844458 0.02236322 0.02207367 0.01792370\n [7] 0.07749024 0.02281488 0.03840192 0.01798776 0.02759107\n\n[[38]]\n[1] 0.02651048 0.02611800 0.08281359 0.06857423 0.04626557 0.02641563 0.02808107\n\n[[39]]\n[1] 0.03181639 0.08281359 0.06111825 0.03360781\n\n[[40]]\n[1] 0.03844458 0.06857423 0.04200199 0.02189213\n\n[[41]]\n[1] 0.04626557 0.04200199 0.04988195 0.02545143 0.03204285\n\n[[42]]\n[1] 0.01752635 0.05146057 0.05407315 0.02052707\n\n[[43]]\n[1] 0.02732362 0.03856942 0.02917940\n\n[[44]]\n[1] 0.06955946 0.02930687 0.03672264 0.03623159 0.04687241 0.03270055\n\n[[45]]\n[1] 0.06955946 0.03762735 0.04917603\n\n[[46]]\n[1] 0.02299803 0.03074612 0.03745569 0.02565494\n\n[[47]]\n[1] 0.03563242 0.03328751 0.05431533 0.06319874 0.03520382\n\n[[48]]\n[1] 0.03623362 0.03338964 0.04349429 0.02421383\n\n[[49]]\n[1] 0.05083319 0.11919495 0.06205251 0.08785119 0.09665429 0.05870070 0.12870992\n\n[[50]]\n[1] 0.01527618 0.01384295 0.01431993 0.01661061 0.01155059 0.01722733 0.01234874\n[8] 0.01026662\n\n[[51]]\n[1] 0.18484814 0.06205251 0.12312044 0.03568342 0.08826799 0.06784691 0.09023184\n[8] 0.11233342\n\n[[52]]\n[1] 0.04529677 0.05160567 0.03395339 0.08149031 0.05256291 0.09869446\n\n[[53]]\n[1] 0.04529677 0.04776642 0.02586996 0.02873317 0.02710314 0.03668693 0.02126611\n[8] 0.02233121\n\n[[54]]\n[1] 0.07105927 0.07116584 0.06756348 0.06455845 0.08949306 0.06057859 0.06292571\n\n[[55]]\n[1] 0.04562312 0.05005065 0.07367550\n\n[[56]]\n[1] 0.05013686 0.05682988 0.03288106 0.04784029 0.04203531\n\n[[57]]\n[1] 0.03955201 0.04012856 0.03926555 0.05278166\n\n[[58]]\n[1] 0.03955201 0.04237674 0.03115519 0.02012635 0.02492558 0.03735590 0.04571184\n\n[[59]]\n[1] 0.01337390 0.02295297 0.01720223 0.02114148 0.01274705\n\n[[60]]\n[1] 0.02909553 0.01931827 0.01474741 0.02438131 0.03211494 0.02457149 0.02053367\n\n[[61]]\n[1] 0.03979094 0.02909553 0.02679482 0.02341030 0.02420868\n\n[[62]]\n[1] 0.31270560 0.12312044 0.05009725 0.31165954 0.16938654 0.18106405\n\n[[63]]\n[1] 0.01292664 0.01245824 0.04811322 0.01818773 0.02043706 0.02391221\n\n[[64]]\n[1] 0.024516150 0.016365166 0.010710930 0.026705892 0.015524773 0.009503424\n[7] 0.011201379 0.023029175\n\n[[65]]\n[1] 0.02451615 0.03270650 0.03342631 0.03358186 0.01794248\n\n[[66]]\n[1] 0.03623645 0.03419761 0.02846188 0.06706827 0.01851792 0.05948251\n\n[[67]]\n[1] 0.01425396 0.09617843 0.02114381 0.01923543 0.03043575 0.02447958 0.02505669\n\n[[68]]\n[1] 0.04646998 0.03451387\n\n[[69]]\n[1] 0.01065154 0.03743303 0.01740090 0.01408963 0.01304791 0.02592127 0.01568007\n[8] 0.01956217 0.01805127\n\n[[70]]\n[1] 0.04496391 0.03478250 0.04551955 0.05297978 0.05800309\n\n[[71]]\n[1] 0.04496391 0.04840207 0.07861297 0.04938999 0.02452596 0.07224203 0.08610999\n[8] 0.04010076 0.05264151\n\n[[72]]\n[1] 0.01324305 0.01982939 0.01598746 0.01536612 0.03438737 0.02028357 0.02466654\n[8] 0.01696201\n\n[[73]]\n[1] 0.01324305 0.01583448 0.04381559 0.01944295 0.01889746 0.03644634\n\n[[74]]\n[1] 0.01636517 0.03270650 0.02664151 0.03918519 0.01546498 0.02441654\n\n[[75]]\n[1] 0.06953897 0.04703680 0.03328440 0.02776512 0.04588417 0.02805435 0.02267659\n\n[[76]]\n[1] 0.01579985 0.01556732 0.01899477 0.01406913 0.01775844 0.01765566 0.01647049\n[8] 0.01405805\n\n[[77]]\n[1] 0.05013686 0.03322511 0.04595632 0.05405907 0.02512541 0.04741976\n\n[[78]]\n[1] 0.05160567 0.06107678 0.03964628 0.06416802 0.05115874 0.05372166 0.03117555\n\n[[79]]\n[1] 0.07116584 0.06107678 0.09433149 0.04477406 0.07632951\n\n[[80]]\n[1] 0.03395339 0.04776642 0.03964628 0.03228479 0.03932310\n\n[[81]]\n[1] 0.04518725 0.03114254 0.03090164 0.02683001 0.02600153\n\n[[82]]\n[1] 0.03678314 0.04247581 0.03739347\n\n[[83]]\n[1] 0.01724384 0.02139030 0.03121815 0.03321837\n\n[[84]]\n[1] 0.008694622 0.017362022 0.020095902 0.012933910 0.018211487\n\n[[85]]\n[1] 0.04154394 0.03523232 0.04126575 0.04027948 0.05065460 0.04229352 0.04237301\n\n[[86]]\nnumeric(0)\n\n[[87]]\n[1] 0.03362749 0.02615838 0.04102116 0.03356051 0.02544534 0.02913484\n\n[[88]]\n[1] 0.01337390 0.01874976 0.02154731 0.02225867 0.02886550 0.02479553\n\n[[89]]\n[1] 0.036845719 0.037864230 0.008913142 0.031998319 0.019444127 0.017886821\n[7] 0.019216689\n\n[[90]]\n[1] 0.012926636 0.010200699 0.008621004 0.012429115 0.016468886 0.009074880\n[7] 0.007000741 0.010772370 0.009662212\n\n[[91]]\n[1] 0.023623085 0.014275301 0.014569175 0.008988607\n\n[[92]]\n[1] 0.02720956 0.02343654 0.03906346 0.03071428 0.03874391 0.01623713\n\n[[93]]\n[1] 0.007062724 0.014983031 0.011332586 0.014402740 0.014044286 0.013049449\n\n[[94]]\n[1] 0.01746722 0.03379577 0.02308922 0.01298180 0.01017814 0.01943543 0.01791784\n[8] 0.01772558\n\n[[95]]\n[1] 0.04940162 0.02799806 0.01658657 0.02512225 0.01725904 0.01589597\n\n[[96]]\n[1] 0.02683200 0.03026993 0.03301289 0.02650692 0.06688763 0.03884661 0.06325087\n\n[[97]]\n[1] 0.02683200 0.04064592 0.03281175 0.02880721 0.01964310\n\n[[98]]\n[1] 0.01384295 0.01763791 0.01472440 0.01664613 0.01252591\n\n[[99]]\n[1] 0.04518725 0.03142340 0.01994100 0.03509855 0.03255181\n\n[[100]]\n[1] 0.01630653 0.01680750 0.04861557 0.02577614 0.03576139\n\n[[101]]\n[1] 0.05060344 0.04923968 0.02877542 0.04229004 0.02435890\n\n[[102]]\n[1] 0.02092853 0.04257325 0.03411131 0.04118300 0.02755745\n\n[[103]]\n[1] 0.03359907 0.03623645 0.03488734 0.02964724 0.04671203 0.03966622 0.04654049\n[8] 0.06294305\n\n[[104]]\n[1] 0.02607067 0.02466231 0.02323195 0.01872659 0.03419761 0.02340563 0.03059487\n[8] 0.03216998\n\n[[105]]\n[1] 0.04154394 0.05088969 0.02410649 0.05438053 0.03477600 0.03543245\n\n[[106]]\n[1] 0.04499908 0.01432546\n\n[[107]]\n[1] 0.03078604 0.01431993 0.03006969 0.04820784\n\n[[108]]\n[1] 0.03695958 0.03907222 0.03173145 0.03271916 0.05132043 0.04176846\n\n[[109]]\n[1] 0.01071093 0.02664151 0.02279498 0.04537605 0.02619842 0.02801712\n\n[[110]]\n[1] 0.02109376 0.02028198 0.03061036 0.03928111 0.03177295 0.02542029\n\n[[111]]\n[1] 0.03478037 0.02494438 0.01609842 0.01348893 0.02424169 0.01832822 0.02797403\n[8] 0.02224485\n\n[[112]]\n [1] 0.012049484 0.009853238 0.012209545 0.009201526 0.010269898 0.010437898\n [7] 0.012116041 0.011349574 0.014526783 0.011795372\n\n[[113]]\n[1] 0.03623362 0.02670589 0.03342631 0.02428963 0.02225903 0.03946509\n\n[[114]]\n[1] 0.01941514 0.01808465 0.01445107 0.03289909 0.02626352 0.02315608\n\n[[115]]\n[1] 0.01065154 0.01630653 0.01302554 0.01250631 0.01534104 0.02049712 0.02358265\n[8] 0.02211299\n\n[[116]]\n[1] 0.04063210 0.03121240 0.01964808 0.03293699 0.03841227\n\n[[117]]\n[1] 0.01824449 0.03607221 0.04941254\n\n[[118]]\n[1] 0.01930254 0.02042628 0.02297656 0.03079416 0.02467649\n\n[[119]]\n[1] 0.02720956 0.01477584 0.02840198 0.01724228 0.01969315 0.02744083\n\n[[120]]\n[1] 0.05885913 0.09357578 0.05763205 0.05881001\n\n[[121]]\n[1] 0.03300827 0.02984194 0.03737868 0.02468090 0.06303444\n\n[[122]]\n[1] 0.04562312 0.03206542 0.04749204 0.03026459 0.06396969 0.04493826\n\n[[123]]\n[1] 0.015988089 0.008694622 0.007062724 0.009903355 0.011044674 0.007668073\n[7] 0.005367908 0.013814313 0.009665636\n\n[[124]]\n[1] 0.05885913 0.12530044 0.07462006 0.06026809 0.08552803 0.06085707\n\n[[125]]\n[1] 0.07644148 0.01761224 0.01893194 0.01977920 0.01625653 0.01921030\n\n[[126]]\n[1] 0.03578583 0.02279569\n\n[[127]]\n[1] 0.03478037 0.01963025 0.02162259 0.04024632 0.02916435\n\n[[128]]\n[1] 0.02295297 0.02042143 0.01089776 0.01673213 0.01818614\n\n[[129]]\n[1] 0.01941514 0.02737785 0.02277664 0.01292741 0.01435774 0.02224728\n\n[[130]]\n[1] 0.05971291 0.03246019 0.04877407 0.04822229 0.06465757 0.04328632 0.03090653\n\n[[131]]\n[1] 0.01552477 0.02436959 0.04192314 0.02108330 0.02199048\n\n[[132]]\n[1] 0.01724384 0.01029237 0.01350844 0.01591715 0.01316758 0.01482419 0.01739769\n[8] 0.01299732\n\n[[133]]\n[1] 0.02879353 0.01289987 0.02144614 0.02821159 0.02224164 0.03114032\n\n[[134]]\n[1] 0.03300827 0.02900119 0.02726528 0.02306033\n\n[[135]]\n[1] 0.02720192 0.03481807 0.02452722 0.04193752\n\n[[136]]\n[1] 0.05146057 0.06077698 0.03408557\n\n[[137]]\n[1] 0.05407315 0.06077698 0.02573133 0.08070621\n\n[[138]]\n[1] 0.07644148\n\n[[139]]\n[1] 0.03026993 0.03695958 0.03773034 0.04845533 0.04362569 0.03586228\n\n[[140]]\n[1] 0.03743303 0.01302554 0.03097688\n\n[[141]]\n[1] 0.01204948 0.01823738 0.01336953 0.03127186 0.03824376 0.01409274 0.01609960\n[8] 0.01511842\n\n[[142]]\n[1] 0.3183134 0.2339895 0.1862963 0.2334337\n\n[[143]]\n[1] 0.01550424 0.01941512 0.01830377 0.01292160 0.01990584\n\n[[144]]\n[1] 0.01785495 0.01814418 0.01994113 0.02063097 0.02395675 0.03269766\n\n[[145]]\n[1] 0.03114254 0.02029770 0.03691796 0.06586925 0.03759149\n\n[[146]]\n[1] 0.01740090 0.01250631 0.03097688 0.01112396 0.01092371 0.01567067 0.01542957\n[8] 0.01114931\n\n[[147]]\n[1] 0.01808465 0.03408821 0.01342136 0.03816926 0.03099070 0.02360115 0.03054527\n\n[[148]]\n[1] 0.009503424 0.017362022 0.024369587 0.031259315\n\n[[149]]\n[1] 0.03142824 0.08248707 0.02662972 0.06116533\n\n[[150]]\n[1] 0.01874976 0.04063210 0.02755095 0.02578496 0.03392375 0.02466955 0.02289309\n\n[[151]]\n[1] 0.03362749 0.03460653 0.02625830 0.03173799 0.03795828 0.02992324\n\n[[152]]\n[1] 0.01785495 0.02196183 0.01398300 0.01261763 0.01441320 0.03287010 0.01540258\n\n[[153]]\n[1] 0.04179340 0.01767875\n\n[[154]]\n[1] 0.06715802 0.05250644 0.07803239\n\n[[155]]\n[1] 0.05971291 0.04741515 0.05319471 0.03221041 0.06672812 0.04252325\n\n[[156]]\n[1] 0.03523232 0.05088969 0.03150903 0.03872623 0.06151989 0.05960775\n\n[[157]]\n[1] 0.01997084 0.03856942 0.04646998 0.03206542 0.01984551 0.02991363 0.04653290\n[8] 0.04059587\n\n[[158]]\n[1] 0.01931827 0.03379577 0.03223191 0.02080972\n\n[[159]]\n[1] 0.01989508 0.01398246 0.02203685 0.04341565 0.01911058 0.01242755 0.02666081\n\n[[160]]\n[1] 0.023623085 0.019954634 0.009152842 0.018023659 0.017390388 0.025971854\n\n[[161]]\n[1] 0.01429351 0.02924117 0.01846189 0.01545696 0.01324074 0.02155270\n\n[[162]]\n[1] 0.01916518 0.01696176 0.01703418 0.01872822 0.01454256 0.01371475 0.01886965\n[8] 0.01685170 0.01809062\n\n[[163]]\n[1] 0.01020070 0.01060473 0.01202593 0.01608400 0.01451338 0.01442841 0.01486522\n[8] 0.01619805\n\n[[164]]\n[1] 0.01275338 0.02196183 0.01770341 0.01109318 0.01869265 0.01972756 0.01977280\n\n[[165]]\n[1] 0.08149031 0.06416802 0.06849759 0.16221785 0.13016827\n\n[[166]]\n[1] 0.03026381 0.03563242 0.02494438 0.03568583 0.02520326 0.03447787 0.02089573\n[8] 0.02699455\n\n[[167]]\n[1] 0.06715802 0.04304204 0.03019101 0.03971733 0.04149114 0.03385081 0.04065234\n\n[[168]]\n[1] 0.03773034 0.03408821 0.03219292 0.03692899 0.04268798 0.03228218\n\n[[169]]\n[1] 0.02373940 0.07840280 0.04901480 0.04619765 0.05164108\n\n[[170]]\n[1] 0.03031931 0.03235821 0.02894504 0.05541071 0.06587387 0.02198660\n\n[[171]]\n[1] 0.02306181 0.03060516\n\n[[172]]\n[1] 0.12803576 0.11111740 0.08987096\n\n[[173]]\n[1] 0.02442016 0.04060844 0.04840207 0.12803576 0.06371183 0.03445250 0.06505536\n[8] 0.02389260 0.06266141\n\n[[174]]\n[1] 0.02395083 0.02770754 0.01476610 0.01363847 0.01331920\n\n[[175]]\n[1] 0.04485645 0.11926340 0.04764128 0.05524784\n\n[[176]]\n[1] 0.03137554 0.02767265 0.02782765 0.01796685 0.01782521\n\n[[177]]\n[1] 0.04204379 0.02767265 0.03053491 0.02831598 0.03958203\n\n[[178]]\n[1] 0.06739100 0.05438797 0.04254097 0.08062968 0.06081053\n\n[[179]]\n[1] 0.11111740 0.06371183 0.05666130 0.10141905 0.05739773 0.07496946 0.06109664\n[8] 0.03090109\n\n[[180]]\n[1] 0.04447134 0.06413180 0.06668233\n\n[[181]]\n[1] 0.07542062 0.09175827 0.08947208 0.05831696 0.07050714\n\n[[182]]\n[1] 0.03363179 0.03445250 0.05666130 0.05736847 0.08020747 0.03493608 0.03333675\n\n[[183]]\n[1] 0.02984194 0.02900119 0.01651931 0.02505174\n\n[[184]]\n[1] 0.07070610 0.06244001 0.08181599 0.09659383\n\n[[185]]\n[1] 0.03288141 0.04827808 0.03807644 0.08568486 0.04032139 0.03159086\n\n[[186]]\n[1] 0.04173232 0.06111825 0.02948385 0.03975388 0.01997679\n\n[[187]]\n[1] 0.03707198 0.04485645 0.05396678 0.05742908 0.05231055 0.03369583 0.05307216\n\n[[188]]\n[1] 0.11926340 0.05396678 0.03034513 0.05396468 0.02755298 0.04060155 0.03464397\n[8] 0.04518488\n\n[[189]]\n[1] 0.10675425 0.06385954 0.13431347 0.06890041 0.05821619\n\n[[190]]\n[1] 0.05952836 0.05621611 0.07172583 0.04951487 0.07587817 0.07799420\n\n[[191]]\n[1] 0.03310675 0.06082261 0.03451387 0.01984551 0.06347049 0.03322538 0.02176003\n[8] 0.02122895\n\n[[192]]\n[1] 0.05115220 0.02641563 0.04988195 0.07637787 0.03269744\n\n[[193]]\n[1] 0.08363698 0.04623482 0.03555199 0.03559045 0.03857821\n\n[[194]]\n[1] 0.08363698 0.17596723 0.04949444 0.07866917 0.04389462\n\n[[195]]\n[1] 0.17596723 0.12572628 0.04484671\n\n[[196]]\n[1] 0.02082220 0.06947611 0.02218726 0.04963677 0.02224350 0.03340916 0.02043492\n[8] 0.02022652\n\n[[197]]\n[1] 0.06352233 0.06748284 0.03313743 0.04166239\n\n[[198]]\n[1] 0.06352233 0.04565478 0.03731282 0.03807892 0.03025563\n\n[[199]]\n[1] 0.02586996 0.04012856 0.04565478 0.02316367 0.02415954 0.03733595 0.02255410\n[8] 0.01288940 0.02797107\n\n[[200]]\n[1] 0.06748284 0.02420086 0.04852203 0.02324158 0.02560674 0.03267640\n\n[[201]]\n[1] 0.03475643 0.02772158 0.01942270 0.02047997 0.02284483\n\n[[202]]\n[1] 0.07070610 0.11588082 0.05052412 0.05736826 0.04734133 0.07574564\n\n[[203]]\n[1] 0.05994237 0.06342951 0.06082378 0.05294491 0.08768440 0.04869500 0.06225173\n\n[[204]]\n[1] 0.04786483 0.03951117 0.03748553 0.02106536 0.06478287 0.02645916 0.04233409\n\n[[205]]\n[1] 0.04378936 0.02375237 0.04828061 0.02927951\n\n[[206]]\n[1] 0.03348946 0.03841159 0.03117421 0.06807023 0.01775545\n\n[[207]]\n[1] 0.03568342 0.05009725 0.02082220 0.02790469 0.05947191\n\n[[208]]\n[1] 0.05404009 0.06342951 0.10426377 0.05416686 0.09284037 0.04535204\n\n[[209]]\n[1] 0.06012144 0.09685173 0.06725541 0.04850929 0.04391627\n\n[[210]]\n[1] 0.03731282 0.02316367 0.04064623 0.04396966 0.02979969\n\n[[211]]\n[1] 0.02760361 0.02236322 0.04064623 0.03212291 0.01924503 0.03457425 0.01629373\n[8] 0.01652448 0.02893310\n\n[[212]]\n[1] 0.02207367 0.03313743 0.03807892 0.02420086 0.04396966 0.03212291 0.03500985\n\n[[213]]\n[1] 0.01726898 0.01930254 0.03237927\n\n[[214]]\n[1] 0.03388681 0.03503427 0.02782765 0.03053491 0.04543544 0.02855489\n\n[[215]]\n[1] 0.05115874 0.03228479 0.03594828 0.06655916 0.02681878\n\n[[216]]\n[1] 0.10626681 0.08664354 0.07026844 0.09418161 0.06869842\n\n[[217]]\n[1] 0.03665471 0.02894504 0.06357930 0.04203359 0.03457134 0.04575276\n\n[[218]]\n[1] 0.03519739 0.06357930 0.04865230 0.02675363 0.05987995\n\n[[219]]\n[1] 0.3183134 0.1592611 0.1449068 0.1162309 0.3755979\n\n[[220]]\n[1] 0.01599675 0.02126015 0.01789240 0.01817249 0.01926340 0.01198318 0.02206573\n\n[[221]]\n[1] 0.026158382 0.009853238 0.031428243 0.029294558 0.025945391 0.022172795\n[7] 0.025529616 0.035048142\n\n[[222]]\n[1] 0.01814418 0.01398300 0.01495293 0.01790399 0.01238540 0.01454574 0.02949884\n[8] 0.01770817 0.02658440\n\n[[223]]\n[1] 0.03049696 0.01543153 0.01083183 0.01286874 0.01456946 0.02930741\n\n[[224]]\n[1] 0.01770341 0.01495293 0.02446760 0.02750677 0.02817055\n\n[[225]]\n[1] 0.01029237 0.01550424 0.01790399 0.01279909 0.01149291 0.02057632 0.03185728\n[8] 0.01620843\n\n[[226]]\n[1] 0.04102116 0.08248707 0.03460653 0.02929456 0.02606554\n\n[[227]]\n[1] 0.03327874 0.02668596 0.05459268 0.03845587 0.03696134 0.03439425\n\n[[228]]\n[1] 0.02689429 0.02033668 0.02637754 0.01511517\n\n[[229]]\n[1] 0.02030888 0.04866988 0.03995181 0.04093315 0.02644235 0.03465796\n\n[[230]]\n[1] 0.01994113 0.01548359 0.01786878 0.01982821 0.02121155 0.03020608\n\n[[231]]\n[1] 0.01763791 0.01261763 0.01109318 0.02045046 0.01459185 0.01104653 0.01093374\n[8] 0.01877823\n\n[[232]]\n[1] 0.008621004 0.021257592 0.016030243 0.018242095\n\n[[233]]\n[1] 0.03090164 0.02029770 0.02668596 0.02030888 0.01806298 0.03847944 0.03402221\n[8] 0.02831023\n\n[[234]]\n[1] 0.03328751 0.03246019 0.05242887 0.03606554 0.02924409 0.02281463 0.04725483\n\n[[235]]\n[1] 0.05060344 0.04877407 0.05978580 0.05912523 0.04072432\n\n[[236]]\n[1] 0.01242912 0.01126237 0.01395454 0.01400005\n\n[[237]]\n[1] 0.01245824 0.01646889 0.01060473 0.01224187 0.01099390 0.01073169\n\n[[238]]\n[1] 0.04934875 0.05431533 0.03568583 0.05054051\n\n[[239]]\n[1] 0.04499908 0.01761224 0.03115077 0.01414133 0.02337382\n\n[[240]]\n[1] 0.02879353 0.02133377 0.02489371 0.03659501 0.02451643\n\n[[241]]\n[1] 0.01350844 0.01391892 0.01249705 0.01292451 0.01741192 0.01715659\n\n[[242]]\n[1] 0.05459268 0.05081642 0.05813819 0.04232994 0.06423976\n\n[[243]]\n[1] 0.02632065 0.03317112 0.03908444 0.03827330\n\n[[244]]\n[1] 0.01989508 0.03049696 0.02278304 0.04557970 0.03799950\n\n[[245]]\n[1] 0.01220955 0.02662972 0.02625830 0.02606554 0.02180264 0.02148588 0.02880574\n[8] 0.02598894 0.02716015\n\n[[246]]\n[1] 0.04749204 0.06295886 0.09368159 0.08537373\n\n[[247]]\n[1] 0.04191813 0.04449116\n\n[[248]]\n[1] 0.01408963 0.02606556 0.02008471 0.01760253 0.01791271 0.02356435\n\n[[249]]\n[1] 0.02689429 0.02047538 0.01585449 0.02392085 0.01870342 0.03196922\n\n[[250]]\n[1] 0.01391892 0.01802743 0.01794248 0.02204136 0.02220752\n\n[[251]]\n[1] 0.01120138 0.02279498 0.01925892\n\n[[252]]\n[1] 0.01534104 0.01941512 0.01112396 0.01238540 0.01279909 0.01765904 0.01572764\n\n[[253]]\n[1] 0.01680750 0.02049712 0.01454574 0.02446760 0.01765904 0.01352852 0.01299533\n\n[[254]]\n[1] 0.015799850 0.012899875 0.016961763 0.014466032 0.034847928 0.016236375\n[7] 0.030043961 0.027920726 0.008468845\n\n[[255]]\n[1] 0.04866988 0.04797358 0.04900249\n\n[[256]]\n[1] 0.02042143 0.01599675 0.02116552 0.01761368 0.01934877 0.01571040 0.01185572\n\n[[257]]\n[1] 0.01717590 0.03558519 0.01470501 0.01320551 0.04069500 0.04625193 0.03527036\n\n[[258]]\n[1] 0.02139030 0.02109376 0.01865275 0.01999458 0.03805257 0.02732472 0.02208175\n\n[[259]]\n[1] 0.009201526 0.014451067 0.027377849 0.013421363 0.025945391 0.015151146\n[7] 0.016600247 0.065076208\n\n[[260]]\n[1] 0.03684572 0.02619959 0.02591125 0.04701049\n\n[[261]]\n[1] 0.01590084 0.01802743 0.01766547 0.01599596 0.01795329 0.02226007\n\n[[262]]\n[1] 0.02033668 0.02047538 0.03735111 0.03206312 0.02461834 0.03558222\n\n[[263]]\n[1] 0.03004788 0.02289252 0.03558519 0.01979895 0.02770787 0.04442885\n\n[[264]]\n[1] 0.2339895 0.3135830 0.1259428 0.1177365\n\n[[265]]\n[1] 0.03338964 0.03358186 0.02428963 0.03848794\n\n[[266]]\n[1] 0.01609842 0.01963025 0.01441320 0.02045046 0.02632065 0.01682046 0.03235333\n[8] 0.03816312\n\n[[267]]\n[1] 0.04080437 0.02617075 0.05875884 0.03099662 0.02889545 0.05175102\n\n[[268]]\n[1] 0.02133377 0.01446603 0.02848887 0.02235505 0.02501673 0.02282995 0.01694941\n[8] 0.02323762 0.01885638\n\n[[269]]\n[1] 0.02167794 0.02679482 0.01703418 0.02848887 0.02843435 0.02570046\n\n[[270]]\n[1] 0.04304204 0.04029639 0.03572509 0.05245219 0.05224473 0.03980297\n\n[[271]]\n[1] 0.01427530 0.01092371 0.01364143 0.02457376\n\n[[272]]\n[1] 0.06953897 0.04336756 0.08346139\n\n[[273]]\n[1] 0.01304791 0.02358265 0.02606556 0.02366277 0.02259671\n\n[[274]]\n[1] 0.02592127 0.02008471 0.01816296 0.02117794 0.02342698 0.01590895\n\n[[275]]\n[1] 0.05517544 0.23316128 0.25818711 0.04195937 0.04997572\n\n[[276]]\n[1] 0.06739100 0.23316128 0.17280841 0.20878780 0.04899608 0.05246008\n\n[[277]]\n[1] 0.25818711 0.17280841 0.15928073 0.23725950 0.04544615\n\n[[278]]\n[1] 0.20878780 0.15928073 0.16754666 0.06200855 0.05462518\n\n[[279]]\n[1] 0.23725950 0.16754666 0.04524524 0.05458654\n\n[[280]]\n[1] 0.02873317 0.02415954 0.02979969 0.01924503 0.03512713 0.02438224 0.02410878\n\n[[281]]\n[1] 0.03673492 0.03174199 0.04079987 0.02338794 0.02915573\n\n[[282]]\n[1] 0.03174199 0.02671768 0.03866755 0.02579125 0.03122543 0.02121563\n\n[[283]]\n[1] 0.04079987 0.02671768 0.03176907 0.01874275 0.02488938\n\n[[284]]\n[1] 0.06947611 0.02790469\n\n[[285]]\n[1] 0.02373940 0.06244001 0.11588082 0.04470960 0.03977979\n\n[[286]]\n[1] 0.07651990 0.13382683 0.05384803 0.06512923 0.08986141\n\n[[287]]\n[1] 0.015567315 0.012241874 0.006675813 0.035748788 0.019832354 0.010886363\n[7] 0.025635904\n\n[[288]]\n[1] 0.02846188 0.08893545 0.03908563 0.07760117 0.03391084 0.04478465\n\n[[289]]\n[1] 0.03457425 0.03512713 0.02888033\n\n[[290]]\n[1] 0.02930687 0.03762735 0.02211566 0.01851841 0.02839797 0.02028908 0.01525681\n[8] 0.01820825 0.02202012\n\n[[291]]\n[1] 0.08293945 0.13100162 0.05196115 0.04597699 0.07016392 0.05397304 0.06379147\n[8] 0.06953899\n\n[[292]]\n[1] 0.13100162 0.13356257 0.09308583 0.09436231\n\n[[293]]\n[1] 0.06756348 0.06849759 0.15281560 0.07666908 0.03143981 0.09233058 0.09497697\n\n[[294]]\n[1] 0.06455845 0.10675425 0.15281560 0.13079516 0.05898335 0.03860071\n\n[[295]]\n[1] 0.04556184 0.04195937 0.04544615 0.04524524 0.03866755 0.03047749 0.02603905\n[8] 0.02356453\n\n[[296]]\n[1] 0.06958015 0.08361544 0.05909051 0.06062021 0.05634624\n\n[[297]]\n[1] 0.03978005 0.22810360 0.08785119 0.07715487 0.12341329\n\n[[298]]\n[1] 0.07861297 0.06505536 0.06816880 0.03319610\n\n[[299]]\n[1] 0.04938999 0.06816880 0.04753781 0.04741152\n\n[[300]]\n[1] 0.06780203 0.02389260 0.03319610 0.04753781 0.06028923 0.01844469 0.02202030\n\n[[301]]\n[1] 0.03478250 0.02452596 0.04741152 0.06028923 0.03544565 0.03234423\n\n[[302]]\n[1] 0.03034513 0.05920852 0.09009888 0.04588145 0.06307203 0.02530729\n\n[[303]]\n[1] 0.03672264 0.04917603 0.05742908 0.02211566 0.05463785 0.03349170 0.03252384\n\n[[304]]\n [1] 0.01425396 0.02395083 0.03376262 0.02183109 0.01671321 0.02286597\n [7] 0.03232656 0.01602263 0.02172218 0.01663473 0.01684760\n\n[[305]]\n[1] 0.12530044 0.09366533 0.10259205\n\n[[306]]\n[1] 0.03826900 0.02831598 0.04543544 0.07715487 0.04765401 0.02692587 0.03983714\n[8] 0.02703100 0.02877766\n\n[[307]]\n[1] 0.01026990 0.01823738 0.02180264 0.04168147 0.03356973 0.01061000 0.01570573\n[8] 0.01840385 0.02815537\n\n[[308]]\n[1] 0.01629373 0.02438224 0.02888033 0.02188833 0.02544881 0.02157039 0.03430317\n[8] 0.01792054 0.02634218\n\n[[309]]\n[1] 0.04623482 0.02913179 0.06062257 0.04222523 0.03203595\n\n[[310]]\n[1] 0.02188833 0.08727448 0.04367539 0.04613901 0.05092351\n\n[[311]]\n[1] 0.02544881 0.08727448 0.07651892 0.04683519\n\n[[312]]\n[1] 0.04166239 0.03025563 0.03733595 0.04852203 0.01794591 0.02706644\n\n[[313]]\n[1] 0.06385954 0.06044304 0.06879458 0.04455813 0.08103015 0.05651731 0.08514149\n\n[[314]]\n[1] 0.06489986 0.09175827 0.11466019 0.04577470 0.07443655\n\n[[315]]\n[1] 0.01841203 0.02218726 0.01844469 0.02620425 0.03640336 0.02926555 0.01819803\n[8] 0.02503645 0.01777030\n\n[[316]]\n[1] 0.01996482 0.02620425 0.06361627 0.02869285 0.03192707 0.04043979 0.03611401\n[8] 0.03564507\n\n[[317]]\n[1] 0.03640336 0.06361627 0.05910886 0.03921166\n\n[[318]]\n[1] 0.04963677 0.02926555 0.05910886 0.05588123\n\n[[319]]\n[1] 0.05396468 0.06958015 0.05920852 0.04103989 0.05410733\n\n[[320]]\n[1] 0.01792370 0.02808107 0.03360781 0.02948385 0.02411651 0.02883620 0.02446903\n[8] 0.02350928\n\n[[321]]\n[1] 0.06082378 0.10426377 0.05916674 0.06327485\n\n[[322]]\n[1] 0.03926555 0.04237674 0.02255410 0.08483613 0.02715693\n\n[[323]]\n[1] 0.03115519 0.08483613 0.02221324 0.03991521\n\n[[324]]\n[1] 0.01429351 0.02778571 0.02084859 0.03741681 0.02136774 0.02378432 0.02385345\n\n[[325]]\n[1] 0.05472395 0.08085923 0.07615794 0.06747673 0.07055413\n\n[[326]]\n[1] 0.22597551 0.09665429 0.12341329 0.04765401 0.15141837 0.13150603 0.11679116\n[8] 0.12327374\n\n[[327]]\n[1] 0.04336987 0.04973427 0.07980607 0.05692517\n\n[[328]]\n[1] 0.06700044 0.03623159 0.05231055 0.05463785 0.04713560\n\n[[329]]\n[1] 0.03079867 0.03288141 0.03975388 0.02714360 0.05449651 0.02350019 0.02138877\n\n[[330]]\n[1] 0.01347536 0.02042628 0.03237927 0.03494206 0.02026054 0.01561211\n\n[[331]]\n[1] 0.04762801 0.05294491 0.08893545 0.11101527 0.04867577 0.04941280 0.03705669\n\n[[332]]\n[1] 0.02224350 0.02692587 0.05632081 0.02964988 0.05412720\n\n[[333]]\n[1] 0.07840280 0.04531343 0.05484979 0.06273640 0.04342909\n\n[[334]]\n[1] 0.08768440 0.11101527 0.08023145\n\n[[335]]\n[1] 0.04447134 0.03348946 0.08048363 0.02462684 0.02670274 0.02132873 0.01866221\n\n[[336]]\n[1] 0.06347049 0.04786483 0.04008286 0.02433666\n\n[[337]]\n[1] 0.05108370 0.03586348 0.04865230 0.04131669 0.02717112 0.03154985\n\n[[338]]\n[1] 0.03488734 0.05470723 0.05479765 0.05613850 0.04432937 0.05732947\n\n[[339]]\n[1] 0.09357578 0.02755298 0.09009888 0.04906695 0.03745234 0.04299201 0.03159095\n\n[[340]]\n[1] 0.03475643 0.02412094 0.03148312 0.01399552\n\n[[341]]\n[1] 0.04551955 0.03544565 0.06670356 0.03234811 0.03240491\n\n[[342]]\n[1] 0.04827808 0.08361544 0.08271879 0.06816241\n\n[[343]]\n[1] 0.05297978 0.07224203 0.17761446 0.06895338\n\n[[344]]\n[1] 0.08610999 0.17761446 0.06478090 0.05029171\n\n[[345]]\n[1] 0.02637754 0.03735111 0.02234517\n\n[[346]]\n[1] 0.03376262 0.04214078 0.02831078 0.02883358\n\n[[347]]\n[1] 0.02183109 0.04214078 0.07060739 0.02379113\n\n[[348]]\n[1] 0.09617843 0.01671321 0.02831078 0.07060739 0.02377008\n\n[[349]]\n[1] 0.01842930 0.01796685 0.02338794 0.03176907 0.02214891\n\n[[350]]\n[1] 0.02410649 0.03907222 0.03019101 0.04029639 0.03735410 0.04178073 0.02750157\n[8] 0.04092659 0.02552442\n\n[[351]]\n[1] 0.06706827 0.02964724 0.03908563 0.04867577 0.05470723 0.04373972\n\n[[352]]\n[1] 0.03140347 0.04247581 0.01782521 0.03958203\n\n[[353]]\n[1] 0.02772158 0.02726777 0.03053056 0.03151162\n\n[[354]]\n[1] 0.01498303 0.01936925 0.03139158 0.03873905\n\n[[355]]\n[1] 0.04588145 0.02286597 0.04906695 0.06019335 0.02584812 0.03417386\n\n[[356]]\n[1] 0.1014190 0.1275109 0.1613540\n\n[[357]]\n[1] 0.08544715 0.03102826 0.03369583 0.04060155 0.05909051 0.04103989 0.02714360\n[8] 0.04363713\n\n[[358]]\n[1] 0.06423264 0.05411658 0.05438797 0.05383542 0.04571658\n\n[[359]]\n[1] 0.01585449 0.01901142 0.01441955 0.03185070 0.04161150 0.01602168\n\n[[360]]\n[1] 0.04163595 0.04683879 0.04687241 0.07637787 0.04713560 0.02718328\n\n[[361]]\n[1] 0.01982939 0.01583448 0.02579125 0.01874275 0.02477939 0.01626031 0.04034681\n[8] 0.03821596\n\n[[362]]\n[1] 0.02090215 0.04203359 0.02675363 0.02605555 0.05360840 0.04230656 0.03049852\n\n[[363]]\n[1] 0.03178682 0.03555199 0.02913179 0.02605555 0.02112703 0.02661128 0.03184324\n[8] 0.02695161 0.04292551\n\n[[364]]\n[1] 0.04404016 0.08730624 0.03735057 0.05685269 0.06796578\n\n[[365]]\n[1] 0.05163643 0.07026844 0.05479765 0.08730624 0.03623503 0.03859716 0.08432369\n\n[[366]]\n[1] 0.06485286 0.08947208 0.07615794 0.04900502 0.12954080 0.07828010\n\n[[367]]\n[1] 0.03232656 0.06019335 0.03709343\n\n[[368]]\n[1] 0.04671203 0.05149383 0.06096943 0.05118852 0.04228192\n\n[[369]]\n[1] 0.06304234 0.04254097 0.02869285 0.05383542 0.05600703\n\n[[370]]\n[1] 0.06152128 0.02837509 0.03096654 0.04883417\n\n[[371]]\n[1] 0.06152128 0.02146353 0.03733093 0.03545101 0.04250581\n\n[[372]]\n[1] 0.0927251 0.1808695 0.1077488 0.1175051\n\n[[373]]\n[1] 0.01348893 0.02162259 0.01548359 0.04291262 0.02994610 0.02528602 0.01976460\n[8] 0.01765217\n\n[[374]]\n[1] 0.04381559 0.02477939 0.02205186 0.04420674\n\n[[375]]\n[1] 0.07760117 0.05626013 0.05752275 0.05611563\n\n[[376]]\n[1] 0.04421283 0.05682988 0.03966622 0.05149383 0.04335676 0.04055731\n\n[[377]]\n[1] 0.01944295 0.02488938 0.02214891 0.01626031 0.02205186 0.02592655\n\n[[378]]\n[1] 0.06264413 0.03641027 0.05702350 0.07483376 0.04813748\n\n[[379]]\n[1] 0.03848687 0.05541071 0.01767472 0.02351750 0.02578081\n\n[[380]]\n[1] 0.03626175 0.01786163 0.02260682 0.01797101 0.02181910\n\n[[381]]\n[1] 0.01543153 0.02125759 0.01933677\n\n[[382]]\n[1] 0.02520326 0.02024201 0.03972366 0.04248052 0.01983950 0.03245624\n\n[[383]]\n[1] 0.03121815 0.01591715 0.01149291 0.01786878 0.01865275 0.01449131 0.01622307\n\n[[384]]\n[1] 0.04811322 0.03251036 0.04184169\n\n[[385]]\n[1] 0.04024632 0.04291262 0.02214491 0.03953426\n\n[[386]]\n[1] 0.04349429 0.02225903 0.02039867 0.02560649 0.05311230 0.01916305\n\n[[387]]\n[1] 0.03626175 0.01552976 0.03043704 0.01967430 0.03577469 0.02016180\n\n[[388]]\n[1] 0.02908974 0.02430038 0.10086469 0.01602222\n\n[[389]]\n[1] 0.03301289 0.04064592 0.02013304 0.03300317 0.01550717\n\n[[390]]\n[1] 0.02343654 0.04130440 0.02907151 0.01853554 0.01876549 0.01601826\n\n[[391]]\n[1] 0.04940162 0.04130440 0.04586124 0.01533275\n\n[[392]]\n[1] 0.03906346 0.02799806 0.02907151 0.04586124 0.03762704\n\n[[393]]\n[1] 0.02411651 0.03448231 0.02895225 0.02312721 0.01324682 0.01972384\n\n[[394]]\n[1] 0.04126575 0.04080437 0.04250482 0.03086038 0.04101296 0.07821365 0.03167990\n\n[[395]]\n[1] 0.01336953 0.01786163 0.02559683 0.01919457 0.01489341 0.01039202 0.01564940\n\n[[396]]\n[1] 0.03127186 0.04168147 0.16855014\n\n[[397]]\n[1] 0.03824376 0.03356973 0.16855014\n\n[[398]]\n[1] 0.04703680 0.02994610 0.02024201 0.01714730 0.02890953 0.02331492\n\n[[399]]\n[1] 0.03356051 0.03173799 0.02617075 0.02895096 0.04193859 0.04627524\n\n[[400]]\n[1] 0.01830377 0.01567067 0.01572764 0.01504437 0.01619152\n\n[[401]]\n[1] 0.03481807 0.01470501 0.02260682 0.02559683 0.01891058 0.01197010 0.02247681\n\n[[402]]\n[1] 0.011332586 0.009903355 0.019369253 0.007401114 0.013214559 0.014134221\n\n[[403]]\n[1] 0.02650692 0.02013304 0.04186865 0.02855787 0.04085348 0.02801538\n\n[[404]]\n[1] 0.04034681 0.04420674 0.02592655\n\n[[405]]\n[1] 0.01658657 0.01061000 0.01285627 0.02195516 0.01564574 0.03084036 0.01074501\n[8] 0.01259785 0.01986300\n\n[[406]]\n[1] 0.01456918 0.01995463 0.02530375\n\n[[407]]\n[1] 0.02302917 0.03946509 0.04192314 0.02039867 0.01975503\n\n[[408]]\n[1] 0.01947534 0.03786423 0.03006969 0.02971458 0.02119822\n\n[[409]]\n[1] 0.01661061 0.01824449 0.01886281 0.01105557 0.01823509 0.01550406 0.02012537\n\n[[410]]\n[1] 0.02544534 0.03816926 0.02217280 0.01515115 0.02828719 0.02551235 0.01974629\n\n[[411]]\n[1] 0.03607221 0.01886281 0.02647351 0.04166843 0.02085185\n\n[[412]]\n[1] 0.03173145 0.04845533 0.03219292 0.05394434 0.03542344 0.02454267 0.03282596\n\n[[413]]\n[1] 0.1862963 0.1592611 0.3135830 0.1571342 0.2152225\n\n[[414]]\n[1] 0.03321837 0.01316758 0.01999458 0.02420767 0.03907677\n\n[[415]]\n[1] 0.05875884 0.04250482 0.02895096 0.04278118 0.03142120\n\n[[416]]\n [1] 0.011550592 0.018187734 0.008913142 0.010993904 0.006675813 0.011055572\n [7] 0.009939222 0.016624102 0.016265651 0.013831986\n\n[[417]]\n[1] 0.02247421 0.02452722 0.01797101 0.01552976 0.01891058 0.04651073 0.02213023\n[8] 0.01225017 0.01313648\n\n[[418]]\n[1] 0.02063097 0.01982821 0.03317112 0.02528602 0.02214491 0.02961211 0.02416195\n\n[[419]]\n[1] 0.03332200 0.01893194 0.03115077 0.01029517 0.01343419\n\n[[420]]\n[1] 0.06688763 0.03300317 0.04186865\n\n[[421]]\n[1] 0.02144614 0.01202593 0.01801868 0.01799600 0.02716959 0.02418293 0.01660108\n\n[[422]]\n[1] 0.03328440 0.02028198 0.03995181 0.01482077 0.03237793 0.04031199 0.03342186\n[8] 0.02097756\n\n[[423]]\n[1] 0.03043704 0.01285627 0.03816962 0.02878944\n\n[[424]]\n[1] 0.03289909 0.02277664 0.02185524 0.02484935\n\n[[425]]\n[1] 0.01409274 0.01570573 0.01919457 0.02195516 0.01616484\n\n[[426]]\n[1] 0.02683001 0.03142340 0.03691796 0.03572509 0.03843536 0.04538006 0.08656493\n\n[[427]]\n[1] 0.01899477 0.01872822 0.03484793 0.05156607\n\n[[428]]\n[1] 0.02126015 0.02116552 0.02560649 0.01524427 0.02191161 0.01937253\n\n[[429]]\n[1] 0.04651073 0.03708647\n\n[[430]]\n[1] 0.05005065 0.03026459 0.06295886 0.04531343 0.04593994 0.03445259 0.04632219\n[8] 0.04548818 0.03678273\n\n[[431]]\n[1] 0.04822229 0.05242887 0.05741288 0.03377051\n\n[[432]]\n[1] 0.01549262 0.01722733 0.01472440 0.01869265 0.01459185\n\n[[433]]\n[1] 0.02776512 0.03061036 0.03805257 0.04336756 0.03570272 0.02502735\n\n[[434]]\n[1] 0.04923968 0.02778571 0.03086038 0.04278118 0.02801987 0.02962521 0.01641924\n\n[[435]]\n[1] 0.02424169 0.03447787 0.01976460 0.03972366 0.01714730\n\n[[436]]\n[1] 0.01330541 0.02308922 0.01441309 0.02272037 0.02438963\n\n[[437]]\n[1] 0.02009590 0.01789240 0.01524427 0.01617653 0.02445150 0.01888956\n\n[[438]]\n[1] 0.02299803 0.01454256 0.02213023 0.03708647 0.01384314 0.01684414 0.02517692\n[8] 0.01433933\n\n[[439]]\n[1] 0.14673387 0.01687953 0.08900568\n\n[[440]]\n [1] 0.008988607 0.015429574 0.009152842 0.013641434 0.029089739 0.015044365\n [7] 0.015198386 0.012578680 0.039839159 0.010477320\n\n[[441]]\n[1] 0.02092853 0.02489371 0.02235505 0.02610011 0.02151820 0.02033933 0.02194882\n\n[[442]]\n[1] 0.01774779 0.02194683 0.01535231\n\n[[443]]\n[1] 0.03983714 0.15141837 0.05632081 0.14825377\n\n[[444]]\n[1] 0.02924117 0.02084859 0.01564574 0.01672301 0.02393055\n\n[[445]]\n[1] 0.03795828 0.02148588 0.04555418 0.03529064 0.07076309 0.02349307\n\n[[446]]\n[1] 0.02168731 0.02706160 0.01979895 0.03371456 0.02328804\n\n[[447]]\n[1] 0.01662956 0.01766547 0.01759703\n\n[[448]]\n [1] 0.04741515 0.12594283 0.15713419 0.05452780 0.08673630 0.03913936\n [7] 0.16096389 0.04402999 0.06621344 0.03786080\n\n[[449]]\n[1] 0.05438053 0.03735410 0.04306334 0.05892014\n\n[[450]]\n[1] 0.06465757 0.05319471 0.05978580 0.07719391\n\n[[451]]\n[1] 0.03884661 0.03281175 0.04362569 0.03692899 0.03078980\n\n[[452]]\n[1] 0.00907488 0.01608400 0.01126237 0.01312865 0.01494772\n\n[[453]]\n[1] 0.03271916 0.04178073 0.05394434 0.04994633\n\n[[454]]\n[1] 0.05975734 0.02770787 0.03371456\n\n[[455]]\n[1] 0.02238891 0.01972756 0.02750677 0.04449116 0.01352852 0.02405341\n\n[[456]]\n[1] 0.01801868 0.02797004 0.01948783 0.01699765 0.01919778 0.02201355\n\n[[457]]\n[1] 0.02755095 0.03206312 0.02030860 0.08611498 0.08086434 0.01852026 0.04350084\n[8] 0.03845935\n\n[[458]]\n[1] 0.04861557 0.02211299 0.02366277 0.03230934\n\n[[459]]\n[1] 0.01406913 0.01477584 0.01371475 0.01384314 0.02938157 0.03193659 0.01988439\n[8] 0.02639082\n\n[[460]]\n[1] 0.04487982 0.05101045 0.08062968 0.04997572 0.04899608 0.04571658 0.05702350\n\n[[461]]\n[1] 0.08826799 0.31165954 0.05947191 0.20539292\n\n[[462]]\n[1] 0.1693865 0.2053929 0.1854373 0.2282139 0.2359142\n\n[[463]]\n[1] 0.031998319 0.026199592 0.009939222 0.019041840 0.055991382 0.018185242\n\n[[464]]\n[1] 0.01823509 0.02647351 0.01837106 0.04081529 0.02120218 0.01893425 0.02256269\n\n[[465]]\n[1] 0.03574879 0.01837106 0.02973068 0.01461842\n\n[[466]]\n[1] 0.04459112 0.02996268 0.01320551 0.01441309 0.01592926 0.01193971\n\n[[467]]\n[1] 0.02043706 0.01398246 0.03251036 0.01662410 0.01904184 0.01541622 0.01878698\n[8] 0.02851255\n\n[[468]]\n[1] 0.02306181 0.01646987 0.02595024 0.02093427\n\n[[469]]\n[1] 0.02512225 0.01846189 0.03084036 0.01672301 0.01372045\n\n[[470]]\n[1] 0.02821159 0.01623638 0.01799600 0.02404382 0.01373943\n\n[[471]]\n [1] 0.017064808 0.012257596 0.012847034 0.012981801 0.034482313 0.022720372\n [7] 0.015929261 0.006266618 0.017630561 0.011416395\n\n[[472]]\n[1] 0.03928111 0.01482077 0.01643984 0.02414928 0.01043680\n\n[[473]]\n[1] 0.01568007 0.01114931 0.02457376 0.03538779\n\n[[474]]\n[1] 0.02877542 0.03221041 0.05912523 0.04101296 0.02801987 0.05452780 0.07719391\n[8] 0.05817683\n\n[[475]]\n[1] 0.01802366 0.02430038 0.01519839 0.01806922 0.01673966 0.01472066\n\n[[476]]\n[1] 0.01104467 0.01774779 0.01033166 0.01570164 0.03169732 0.01248580\n\n[[477]]\n[1] 0.01292160 0.01249705 0.01794248 0.01619152 0.01257868 0.01586286 0.01114976\n\n[[478]]\n[1] 0.05250644 0.03971733 0.04029147 0.03332213 0.02453020\n\n[[479]]\n[1] 0.10086469 0.03983916\n\n[[480]]\n[1] 0.04093315 0.04797358 0.03237793 0.01643984 0.02494094\n\n[[481]]\n[1] 0.01083183 0.01816296 0.02559399 0.01671413\n\n[[482]]\n[1] 0.02108330 0.05311230 0.01975503 0.02191161 0.01617653 0.03275157\n\n[[483]]\n[1] 0.03477600 0.06586925 0.03150903 0.03843536 0.04306334 0.03420133 0.03902902\n\n[[484]]\n[1] 0.01886965 0.03004396 0.02501673 0.02843435\n\n[[485]]\n[1] 0.04588417 0.03177295 0.08346139 0.04031199 0.03570272\n\n[[486]]\n[1] 0.02913484 0.03099662 0.04193859 0.02828719 0.03772070\n\n[[487]]\n[1] 0.03071428 0.02840198 0.01853554 0.03281214 0.01392324 0.01556941\n\n[[488]]\n[1] 0.05132043 0.04149114 0.02750157 0.02855787 0.03672202 0.04363107\n\n[[489]]\n[1] 0.02154731 0.01292741 0.01901142 0.02185524 0.00748138 0.01573627 0.02524807\n[8] 0.02128527 0.01783186\n\n[[490]]\n[1] 0.010437898 0.021946826 0.010331660 0.009085950 0.009264231 0.013508772\n[7] 0.011484639 0.017118245 0.011453639\n\n[[491]]\n[1] 0.03741681 0.04555418 0.03894476 0.02568916\n\n[[492]]\n[1] 0.01739039 0.01806922 0.03484779 0.02450359\n\n[[493]]\n[1] 0.01720223 0.01211604 0.01089776 0.01435774 0.01660025 0.00748138 0.00908595\n[8] 0.01038105 0.01356361\n\n[[494]]\n[1] 0.007668073 0.015352311 0.016469872 0.015701639 0.009264231 0.012561204\n[7] 0.008631404 0.012481306\n\n[[495]]\n[1] 0.03385081 0.04085348 0.04029147 0.03672202\n\n[[496]]\n[1] 0.03099070 0.04268798 0.03542344 0.05220935\n\n[[497]]\n[1] 0.007000741 0.022036848 0.012868741 0.016030243 0.019336769 0.015416224\n[7] 0.019887665 0.020869454 0.036445642\n\n[[498]]\n[1] 0.06747673 0.04900502 0.09272510 0.07894737 0.05870428 0.04049354 0.06391852\n[8] 0.05671628 0.05285481\n\n[[499]]\n[1] 0.05052412 0.04470960 0.08795888 0.08083277\n\n[[500]]\n[1] 0.01956217 0.03538779 0.04172111\n\n[[501]]\n[1] 0.02805435 0.04248052 0.02890953 0.03342186 0.02901991\n\n[[502]]\n[1] 0.04081529 0.02845509 0.02846120\n\n[[503]]\n[1] 0.03759149 0.03872623 0.03845587 0.01806298 0.05081642 0.03420133 0.05242834\n\n[[504]]\n[1] 0.02395675 0.03287010 0.03908444 0.01682046 0.02961211\n\n[[505]]\n[1] 0.04901480 0.06012144 0.05484979 0.08161121 0.05778145 0.02552658\n\n[[506]]\n[1] 0.03807644 0.06062021 0.06307203 0.05410733 0.08271879 0.03686135\n\n[[507]]\n[1] 0.01260998 0.01292451 0.02204136 0.01599596 0.01010186\n\n[[508]]\n [1] 0.008440251 0.014325461 0.005367908 0.030605160 0.027707542 0.014141326\n [7] 0.007401114 0.010295173 0.025950239 0.006266618 0.012561204 0.010498060\n[13] 0.013453784 0.011744343\n\n[[509]]\n[1] 0.01795329 0.01759703 0.01673966 0.03484779 0.01852022\n\n[[510]]\n[1] 0.02883620 0.02895225 0.06186406\n\n[[511]]\n[1] 0.02114381 0.01476610 0.01602263 0.02883358 0.02379113 0.02377008 0.01321456\n[8] 0.01049806 0.01827547\n\n[[512]]\n[1] 0.01805127 0.02117794 0.04172111 0.04782488\n\n[[513]]\n[1] 0.02342698 0.02559399 0.04782488\n\n[[514]]\n[1] 0.02360115 0.02889545 0.02551235 0.02454267 0.03772070 0.05220935 0.03619591\n[8] 0.02580855\n\n[[515]]\n[1] 0.1315060 0.1854373 0.2456143 0.2639095 0.2350839\n\n[[516]]\n[1] 0.01609960 0.01489341 0.02255484 0.02007293\n\n[[517]]\n[1] 0.01540258 0.01977280 0.02949884 0.02817055\n\n[[518]]\n[1] 0.03269766 0.01770817 0.02057632 0.02121155 0.01449131 0.04135467\n\n[[519]]\n[1] 0.14490685 0.05813819 0.08673630 0.18613132 0.11097720 0.04451413\n\n[[520]]\n[1] 0.01242536 0.02025683 0.01017814 0.01685170 0.01225017 0.01684414 0.01691092\n[8] 0.01666230\n\n[[521]]\n[1] 0.03074612 0.02517692 0.02938157 0.02641007\n\n[[522]]\n[1] 0.02012635 0.02837509 0.02146353 0.04396707 0.02852747 0.03015546 0.02052097\n[8] 0.01430469\n\n[[523]]\n[1] 0.02492558 0.02221324 0.03096654 0.04396707 0.02097230 0.02204515 0.08833582\n\n[[524]]\n[1] 0.02602152 0.02917940 0.03578583 0.03755896 0.01884467\n\n[[525]]\n[1] 0.02597185 0.02530375 0.02450359\n\n[[526]]\n[1] 0.02220752 0.02226007 0.01602222 0.01047732 0.01472066 0.01586286 0.01852022\n\n[[527]]\n[1] 0.03101886 0.01381431 0.03169732 0.01435068 0.01541442 0.03981480\n\n[[528]]\n[1] 0.06002816 0.03951117 0.03735057 0.02548442 0.03734833 0.04299314 0.05812468\n[8] 0.04095048\n\n[[529]]\n[1] 0.02542029 0.02732472 0.02420767 0.02414928 0.01696819\n\n[[530]]\n[1] 0.01832822 0.01545696 0.01104653 0.02206053 0.01982795 0.01485702 0.01349879\n[8] 0.01765833\n\n[[531]]\n[1] 0.18086951 0.07894737 0.08351406 0.08951160 0.13856017\n\n[[532]]\n[1] 0.08949306 0.05372166 0.09433149 0.16221785 0.07666908 0.08939128\n\n[[533]]\n[1] 0.03288106 0.03322511 0.03559045 0.04949444 0.05360840 0.02112703 0.06836012\n[8] 0.02735350 0.03282663\n\n[[534]]\n[1] 0.04595632 0.07866917 0.12572628 0.06836012 0.03506534\n\n[[535]]\n[1] 0.13356257 0.10774878 0.08351406 0.18593084 0.10229067 0.07416036\n\n[[536]]\n[1] 0.1343135 0.1307952 0.1058524\n\n[[537]]\n[1] 0.07694642 0.06057859 0.06890041 0.05196115 0.05898335 0.06044304 0.10585239\n[8] 0.09066259\n\n[[538]]\n[1] 0.07651990 0.08512415 0.08832770 0.04815531\n\n[[539]]\n[1] 0.09685173 0.13382683 0.05483099 0.07892048\n\n[[540]]\n[1] 0.08181599 0.05736826 0.06725541 0.05384803 0.08512415 0.05483099 0.04762612\n[8] 0.05724512\n\n[[541]]\n[1] 0.02157039 0.06062257 0.07651892 0.02661128 0.05231386 0.03308590\n\n[[542]]\n[1] 0.04341565 0.05599138 0.01878698 0.01785338\n\n[[543]]\n[1] 0.12954080 0.11750512 0.05870428 0.18593084 0.07303446\n\n[[544]]\n[1] 0.04431895 0.02855489 0.02703100 0.04336987 0.03078680 0.02145592 0.04023288\n[8] 0.03778093\n\n[[545]]\n[1] 0.02297656 0.02797004 0.03617458\n\n[[546]]\n[1] 0.02512533 0.02282995 0.04570917 0.02434443\n\n[[547]]\n[1] 0.01775844 0.01809062 0.05156607 0.03193659\n\n[[548]]\n[1] 0.09046782 0.04869500 0.05916674 0.05685269 0.03623503 0.05295450 0.06093624\n[8] 0.05259738 0.04091200\n\n[[549]]\n[1] 0.02991363 0.05952836 0.03322538 0.03748553 0.04008286 0.02928124 0.10028358\n\n[[550]]\n[1] 0.04010076 0.05763205 0.07462006 0.04764128 0.03464397 0.03745234 0.06478090\n[8] 0.03432440 0.04523361\n\n[[551]]\n[1] 0.06225173 0.04941280 0.08023145 0.05613850 0.04373972 0.03859716 0.05295450\n\n[[552]]\n[1] 0.09443145 0.09418161 0.11466019 0.06948901 0.07751373\n\n[[553]]\n[1] 0.02871387 0.01513894 0.03494206 0.04131669 0.01767472 0.03401151 0.01290787\n\n[[554]]\n[1] 0.04257325 0.03079416 0.01948783 0.03617458 0.02541690 0.03132704\n\n[[555]]\n[1] 0.02695780 0.04430146 0.02915573 0.03122543 0.03047749 0.03078680 0.02336208\n\n[[556]]\n[1] 0.01851841 0.01819803 0.02726777 0.02039238 0.04532814 0.03641017 0.01582309\n\n[[557]]\n[1] 0.05881001 0.06026809 0.09366533 0.04299201 0.05033283 0.05735847 0.03081442\n\n[[558]]\n[1] 0.03340916 0.03192707 0.03921166 0.05588123 0.04973427 0.02964988 0.03727049\n[8] 0.03790551\n\n[[559]]\n [1] 0.01977057 0.02052707 0.01851792 0.02340563 0.03408557 0.02573133\n [7] 0.03391084 0.05626013 0.02627549 0.02468073 0.05027095\n\n[[560]]\n[1] 0.3220107\n\n[[561]]\n[1] 0.01881341 0.01474741 0.01943543 0.03223191 0.01652448 0.03430317 0.01785568\n\n[[562]]\n[1] 0.02672551 0.02560125 0.02176003 0.02852747 0.01804717 0.02916280 0.04785116\n[8] 0.01810139 0.01954195\n\n[[563]]\n[1] 0.04367539 0.03184324 0.04544869 0.04005345 0.05164364\n\n[[564]]\n [1] 0.05821619 0.03143981 0.03860071 0.06879458 0.03015546 0.01804717\n [7] 0.03715845 0.03160559 0.03551822 0.04191871\n\n[[565]]\n[1] 0.03739768 0.02582509 0.03755896 0.02186148 0.03392995\n\n[[566]]\n[1] 0.17933619 0.03927747 0.05898052\n\n[[567]]\n[1] 0.17933619 0.06168289 0.03577810 0.05206785\n\n[[568]]\n[1] 0.05736847 0.06168289 0.02368349 0.03912300 0.03707926\n\n[[569]]\n[1] 0.03411131 0.02467649 0.02026054 0.02541690 0.04489254\n\n[[570]]\n[1] 0.07749024 0.04843706\n\n[[571]]\n[1] 0.06396969 0.05621611 0.09368159 0.08424068 0.06718510\n\n[[572]]\n[1] 0.02043492 0.02503645 0.02412094 0.02039238 0.03032460\n\n[[573]]\n[1] 0.04455813 0.04049354 0.02916280 0.03715845 0.03972589 0.06198069 0.07124721\n[8] 0.03258350\n\n[[574]]\n[1] 0.05314287 0.05948251 0.04654049 0.03059487\n\n[[575]]\n[1] 0.02122895 0.02106536 0.02433666 0.02548442 0.04785116 0.03972589 0.06009976\n\n[[576]]\n[1] 0.04790108 0.05121231 0.04784029 0.04335676 0.02735350 0.07635162\n\n[[577]]\n[1] 0.03394803 0.06587387 0.03457134 0.04230656\n\n[[578]]\n[1] 0.02438131 0.04035389 0.02163504 0.07380191\n\n[[579]]\n[1] 0.05405907 0.03117555 0.04477406 0.03594828 0.06567575 0.05045025 0.02754336\n[8] 0.03888815\n\n[[580]]\n[1] 0.04926498 0.05870070 0.06784691 0.03739347\n\n[[581]]\n[1] 0.02319313 0.02198660 0.01694941 0.02351750 0.02610011 0.04570917 0.03203162\n\n[[582]]\n[1] 0.08568486 0.02530729 0.02172218 0.02584812 0.03709343 0.03686135 0.03131401\n\n[[583]]\n[1] 0.06507531 0.02281488 0.02446903 0.02312721 0.01763056\n\n[[584]]\n[1] 0.03911223 0.03602450 0.03840192 0.02893310 0.04843706\n\n[[585]]\n[1] 0.05831696 0.04597699 0.04577470 0.06096943 0.04720249 0.05713023 0.03079300\n[8] 0.08186823\n\n[[586]]\n[1] 0.01942270 0.03148312 0.03053056 0.04532814 0.03032460\n\n[[587]]\n[1] 0.04734133 0.08832770 0.04762612 0.02627549 0.08933372 0.04404427 0.08305264\n\n[[588]]\n[1] 0.04378936 0.03841159 0.02047446 0.04630667 0.02784991 0.07975391 0.04913316\n\n[[589]]\n[1] 0.03101831 0.02695161 0.04544869 0.04035389 0.02482882 0.02751729\n\n[[590]]\n[1] 0.04493826 0.04653290 0.07172583 0.08424068 0.07007458\n\n[[591]]\n[1] 0.04943164 0.08020747 0.07483376 0.04606218\n\n[[592]]\n[1] 0.03211494 0.01792054 0.04613901 0.01785568 0.04005345 0.02163504 0.02482882\n\n[[593]]\n[1] 0.08552803 0.05739773 0.10259205 0.12751094 0.05033283 0.09978322 0.08153168\n[8] 0.03197783\n\n[[594]]\n[1] 0.01923543 0.01598746 0.03139158 0.01413422 0.01827547 0.03156006 0.02119654\n\n[[595]]\n[1] 0.06200855 0.05458654 0.02603905 0.04043979 0.02145592 0.02336208 0.05390803\n[8] 0.03624094\n\n[[596]]\n[1] 0.02524210 0.02457149 0.02341030 0.01791784 0.02080972 0.01691092\n\n[[597]]\n[1] 0.06478287 0.03734833 0.06641410 0.06692828\n\n[[598]]\n[1] 0.06081053 0.05246008 0.05462518 0.03611401 0.05600703 0.05390803\n\n[[599]]\n[1] 0.02839797 0.03349170 0.06670356 0.03774406 0.02325054\n\n[[600]]\n[1] 0.02028908 0.02202030 0.03234423 0.01777030 0.03234811 0.03641017 0.03774406\n\n[[601]]\n[1] 0.03155024 0.03693977 0.04575276 0.05987995 0.02717112 0.03049852 0.03282663\n[8] 0.07635162\n\n[[602]]\n[1] 0.05256291 0.02710314 0.09233058 0.03160559 0.23652322 0.06398045 0.07959753\n\n[[603]]\n[1] 0.03551822 0.23652322 0.08629659\n\n[[604]]\n[1] 0.04619765 0.09659383 0.04850929 0.03977979 0.08161121 0.05724512\n\n[[605]]\n[1] 0.07367550 0.05164108 0.06273640 0.04593994\n\n[[606]]\n[1] 0.06413180 0.08048363 0.03447104\n\n[[607]]\n[1] 0.01536612 0.01440274 0.03873905 0.03156006 0.04193499\n\n[[608]]\n [1] 0.01288940 0.02375237 0.03117421 0.01794591 0.02715693 0.03991521\n [7] 0.02462684 0.02097230 0.02047446 0.01622584 0.02007995 0.02722936\n\n[[609]]\n[1] 0.03043575 0.03438737 0.03927747 0.03577810 0.02368349 0.02119654 0.01619242\n[8] 0.02476876\n\n[[610]]\n [1] 0.05800309 0.05524784 0.05307216 0.04518488 0.03252384 0.03240491\n [7] 0.06895338 0.05029171 0.03432440 0.02325054\n\n[[611]]\n[1] 0.07016392 0.09308583 0.08951160 0.10229067 0.12122539 0.06814209\n\n[[612]]\n[1] 0.07496946 0.16135399 0.09978322 0.04366176\n\n[[613]]\n[1] 0.08070621 0.02468073 0.08933372 0.13834180 0.07871410\n\n[[614]]\n[1] 0.05397304 0.08103015 0.09066259 0.12122539 0.06437357\n\n[[615]]\n[1] 0.05651731 0.06391852 0.13856017 0.06198069 0.06814209 0.06437357 0.14732444\n\n[[616]]\n[1] 0.08514149 0.07124721 0.14732444\n\n[[617]]\n[1] 0.03801382 0.05416686 0.04342909 0.03445259 0.05778145 0.08687921 0.02802757\n\n[[618]]\n[1] 0.06270603 0.06292571 0.07632951 0.06567575 0.07050600\n\n[[619]]\n[1] 0.06410599 0.06379147 0.05045025 0.04720249 0.07050600 0.04934280\n\n[[620]]\n[1] 0.01798776 0.02189213 0.02545143 0.01505494 0.02837889 0.04434645 0.04577961\n\n[[621]]\n[1] 0.03668693 0.05278166 0.03735590 0.02797107 0.04050463\n\n[[622]]\n[1] 0.02126611 0.04571184 0.02052097 0.04191871 0.06398045 0.08629659 0.04050463\n\n[[623]]\n[1] 0.12870992 0.09023184 0.11679116 0.24561429 0.18072812\n\n[[624]]\n[1] 0.10747703 0.08862914 0.06796578 0.04299314 0.06093624 0.06641410 0.05506681\n[8] 0.03674312\n\n[[625]]\n[1] 0.05264151 0.06085707 0.08987096 0.06266141 0.06109664 0.04523361 0.08153168\n\n[[626]]\n[1] 0.01726529 0.02053367 0.02420868 0.02323762 0.02570046 0.02434443 0.07380191\n[8] 0.02751729\n\n[[627]]\n [1] 0.06668233 0.01525681 0.02670274 0.03447104 0.01505494 0.03438118\n [7] 0.01592308 0.01359828 0.02410400 0.01393624\n\n[[628]]\n[1] 0.02047997 0.01820825 0.03151162 0.01582309 0.03438118 0.01564073\n\n[[629]]\n[1] 0.02759107 0.02324158 0.03500985 0.02837889 0.04505857\n\n[[630]]\n[1] 0.02560674 0.04434645 0.01592308 0.04505857 0.02169023\n\n[[631]]\n[1] 0.1158354 0.1445798\n\n[[632]]\n[1] 0.05631991 0.07055413 0.05671628 0.05812468 0.11583536 0.07562327\n\n[[633]]\n[1] 0.05285481 0.04095048 0.03258350 0.06009976 0.14457977 0.07562327\n\n[[634]]\n[1] 0.03204285 0.03270055 0.03269744 0.02202012 0.02718328 0.04577961 0.01359828\n\n[[635]]\n[1] 0.04032139 0.05634624 0.05449651 0.06816241 0.04363713\n\n[[636]]\n[1] 0.09869446 0.13016827 0.09497697 0.08939128 0.07959753\n\n[[637]]\n[1] 0.04951487 0.02645916 0.04632219 0.02928124 0.09243965 0.03358142 0.06572631\n[8] 0.06920682\n\n[[638]]\n[1] 0.05718452 0.03580025 0.02028357 0.03493608 0.04813748 0.03912300 0.04606218\n[8] 0.01619242 0.03838839\n\n[[639]]\n[1] 0.05552066 0.02846843 0.02466654 0.02121563 0.02356453 0.03821596 0.03838839\n\n[[640]]\n[1] 0.02447958 0.01663473 0.03159095 0.03417386 0.05735847 0.32201066 0.03263987\n\n[[641]]\n[1] 0.01336145 0.01977920 0.04069500 0.01039202 0.01197010 0.01343419 0.01193971\n[8] 0.02255484 0.01384608\n\n[[642]]\n[1] 0.04166843 0.02120218 0.03281214 0.02845509 0.01521650 0.01550045 0.01638611\n\n[[643]]\n[1] 0.03737868 0.03733093 0.07126334 0.02649695 0.03487178\n\n[[644]]\n[1] 0.01363847 0.01324682 0.01141640 0.01345378 0.01973378 0.02214730\n\n[[645]]\n[1] 0.04059587 0.07587817 0.10028358 0.07007458\n\n[[646]]\n[1] 0.02658440 0.03185728 0.04135467\n\n[[647]]\n[1] 0.01765566 0.01724228 0.01988439 0.01392324 0.01521650 0.02477448\n\n[[648]]\n[1] 0.02225867 0.02578496 0.02392085 0.01441955 0.02030860 0.01573627 0.02754147\n\n[[649]]\n[1] 0.011349574 0.013508772 0.008631404 0.021280640 0.015560348\n\n[[650]]\n[1] 0.04229004 0.04328632 0.04072432 0.05741288 0.03988009\n\n[[651]]\n[1] 0.03564507 0.07980607 0.04023288 0.03727049 0.03624094\n\n[[652]]\n[1] 0.01817249 0.01248580 0.01148464 0.01435068 0.02117629 0.01769430 0.02269733\n\n[[653]]\n[1] 0.06325087 0.04176846 0.03586228 0.02801538 0.04363107\n\n[[654]]\n[1] 0.04027948 0.07821365 0.03913936 0.05817683 0.09655362\n\n[[655]]\n[1] 0.04350333 0.02089573 0.03696134 0.03847944 0.01983950 0.03200044\n\n[[656]]\n[1] 0.03874391 0.01725904 0.01967430 0.03762704 0.01074501 0.03816962 0.02277718\n\n[[657]]\n[1] 0.02992324 0.02136774 0.04627524 0.03142120 0.02962521 0.03529064 0.03894476\n\n[[658]]\n[1] 0.05245219 0.04092659 0.04538006 0.05892014 0.03902902\n\n[[659]]\n[1] 0.02880574 0.07076309 0.02402644 0.06256805\n\n[[660]]\n[1] 0.01511517 0.01870342 0.03185070\n\n[[661]]\n[1] 0.01452678 0.06116533 0.02552962 0.02598894\n\n[[662]]\n[1] 0.02880721 0.02626352 0.03054527 0.03228218 0.03078980 0.01612347\n\n[[663]]\n[1] 0.02468090 0.01651931 0.03545101 0.14673387 0.01430469 0.01810139 0.07126334\n[8] 0.01667175 0.05559580\n\n[[664]]\n[1] 0.01711825 0.02117629 0.02829454 0.02249535\n\n[[665]]\n[1] 0.01696201 0.01889746 0.01404429 0.04193499 0.01918330\n\n[[666]]\n[1] 0.03644634 0.01304945 0.01918330\n\n[[667]]\n[1] 0.07803239 0.04065234 0.05224473 0.03332213 0.04371325 0.05226033\n\n[[668]]\n[1] 0.03745569 0.01623713 0.01969315 0.03577469 0.01313648 0.01433933 0.02277718\n[8] 0.02592401\n\n[[669]]\n[1] 0.06807023 0.04630667 0.02182232 0.04333379\n\n[[670]]\n[1] 0.01395454 0.01312865\n\n[[671]]\n[1] 0.02022652 0.02877766 0.05692517 0.05412720 0.03778093 0.03790551\n\n[[672]]\n[1] 0.03121240 0.01761368 0.02743144 0.02295725 0.03041560\n\n[[673]]\n[1] 0.022593905 0.012933910 0.009665636 0.019263404 0.024451501 0.015414423\n[7] 0.017694296 0.024868639\n\n[[674]]\n[1] 0.01944413 0.02577614 0.01760253 0.02591125 0.02259671 0.03230934 0.02663432\n[8] 0.01826916\n\n[[675]]\n[1] 0.05065460 0.05175102 0.03167990 0.03619591 0.04334979\n\n[[676]]\n[1] 0.01911058 0.01791271 0.04701049 0.01818524 0.01785338 0.02663432 0.01747369\n\n[[677]]\n[1] 0.01647049 0.01983235 0.01893425 0.02973068 0.02846120 0.01550045 0.02477448\n\n[[678]]\n[1] 0.04161150 0.02524807 0.02547173\n\n[[679]]\n[1] 0.02916435 0.03827330 0.03235333 0.03953426 0.02416195\n\n[[680]]\n[1] 0.01179537 0.01625653 0.01511842 0.02007293 0.01384608 0.02128064 0.01083294\n\n[[681]]\n[1] 0.01234874 0.01788682 0.04820784 0.02971458 0.01626565\n\n[[682]]\n[1] 0.1232737 0.1482538 0.2282139 0.2639095\n\n[[683]]\n[1] 0.03918519 0.04537605 0.03094559 0.03748245\n\n[[684]]\n[1] 0.01840385 0.02378432 0.01259785 0.02393055 0.02349307 0.02568916 0.02402644\n[8] 0.02962107\n\n[[685]]\n[1] 0.08611498 0.18020876 0.08042286\n\n[[686]]\n[1] 0.03392375 0.08086434 0.18020876 0.06043909\n\n[[687]]\n[1] 0.01242755 0.01456946 0.02278304 0.02356435 0.01590895 0.01671413 0.01747369\n\n[[688]]\n[1] 0.02279569 0.02505174 0.01687953 0.01884467 0.02186148 0.01667175 0.01622825\n\n[[689]]\n[1] 0.02600153 0.01994100 0.02644235 0.03402221 0.04900249 0.02494094\n\n[[690]]\n[1] 0.02652922 0.04625193 0.04442885 0.07427227\n\n[[691]]\n[1] 0.03606554 0.02206053 0.03056962 0.02718877\n\n[[692]]\n[1] 0.01821149 0.02199048 0.03125932 0.01888956 0.03275157\n\n[[693]]\n[1] 0.2250900 0.1123334 0.1810640 0.2359142 0.2350839 0.1807281\n\n[[694]]\n [1] 0.02505669 0.03090109 0.03333675 0.03081442 0.05898052 0.05206785\n [7] 0.03707926 0.03197783 0.02476876 0.04366176 0.03263987\n\n[[695]]\n[1] 0.02553668 0.04193752 0.03527036 0.02247681 0.07427227\n\n[[696]]\n [1] 0.01026662 0.01664613 0.04941254 0.04179340 0.01876549 0.01550406\n [7] 0.02085185 0.01556941 0.01638611 0.01242482\n\n[[697]]\n[1] 0.07799420 0.08537373 0.04548818 0.06718510 0.09243965\n\n[[698]]\n[1] 0.06319874 0.02797403 0.02699455 0.02924409 0.01982795 0.03056962\n\n[[699]]\n[1] 0.01451338 0.02716959 0.01699765 0.05666958\n\n[[700]]\n[1] 0.02114148 0.02886550 0.02128527 0.01038105\n\n[[701]]\n[1] 0.02421383 0.01794248 0.01546498 0.01934877 0.03848794 0.01916305 0.01937253\n[8] 0.02743144 0.02052983\n\n[[702]]\n[1] 0.02619842 0.01925892 0.02461834 0.02234517 0.01852026 0.02054212\n\n[[703]]\n[1] 0.1162309 0.2152225 0.1609639 0.1861313\n\n[[704]]\n[1] 0.02224164 0.03659501 0.02792073 0.01885638\n\n[[705]]\n[1] 0.01482419 0.01990584 0.01620843 0.01741192 0.01114976\n\n[[706]]\n[1] 0.03465796 0.02831023 0.03245624 0.02097756 0.02901991 0.03200044\n\n[[707]]\n[1] 0.04229352 0.06151989 0.04402999 0.09655362 0.04898986\n\n[[708]]\n [1] 0.01589597 0.01252591 0.01767875 0.01324074 0.01093374 0.01601826\n [7] 0.01533275 0.01372045 0.01485702 0.01242482\n\n[[709]]\n[1] 0.01352838 0.01294330 0.01772558 0.02438963 0.02328804 0.01666230\n\n[[710]]\n[1] 0.01077237 0.01824209 0.01400005\n\n[[711]]\n[1] 0.02224728 0.03504814 0.06507621 0.01974629\n\n[[712]]\n[1] 0.04237301 0.03543245 0.02552442 0.03282596 0.04994633 0.02580855 0.04334979\n\n[[713]]\n[1] 0.02435890 0.02155270 0.02281463 0.02385345 0.03377051 0.01641924 0.01349879\n[8] 0.03988009 0.02718877\n\n[[714]]\n[1] 0.01274705 0.02479553 0.01964808 0.01673213 0.02466955 0.01571040 0.02295725\n\n[[715]]\n[1] 0.05092351 0.04683519 0.04292551 0.05231386 0.05164364\n\n[[716]]\n[1] 0.02512541 0.03857821 0.04389462 0.04484671 0.06655916 0.04222523 0.03506534\n[8] 0.02754336 0.02903820\n\n[[717]]\n[1] 0.05842356 0.08218976 0.03380348 0.02120283\n\n[[718]]\n[1] 0.08795888 0.13834180 0.08787733\n\n[[719]]\n [1] 0.04828061 0.04883417 0.04250581 0.02204515 0.02784991 0.01622584\n [7] 0.02649695 0.03983371 0.02332743 0.03200733\n\n[[720]]\n[1] 0.06303444 0.02726528 0.03487178 0.05842356 0.03983371 0.03433268 0.01637149\n\n[[721]]\n[1] 0.09375983 0.14105584 0.05259738 0.05506681 0.08108103 0.07152944\n\n[[722]]\n[1] 0.03267640 0.02706644 0.02132873 0.02007995 0.02410400 0.02169023\n\n[[723]]\n[1] 0.09284037 0.03678273 0.08687921 0.03358142 0.05201656\n\n[[724]]\n[1] 0.01442841 0.02418293 0.02404382 0.02360152\n\n[[725]]\n[1] 0.04535204 0.06327485 0.04091200 0.06572631 0.08108103 0.05201656 0.05262315\n\n[[726]]\n[1] 0.04233409 0.06692828 0.03674312 0.06920682 0.07152944 0.05262315\n\n[[727]]\n[1] 0.02927951 0.08833582 0.02722936 0.02332743\n\n[[728]]\n[1] 0.04203531 0.04741976 0.05118852 0.04055731 0.03888815 0.05713023 0.04934280\n\n[[729]]\n[1] 0.06294305 0.07443655 0.04432937 0.04228192 0.06948901 0.03079300 0.09123385\n\n[[730]]\n[1] 0.06869842 0.05732947 0.08432369 0.07751373 0.09123385\n\n[[731]]\n[1] 0.23343373 0.05960775 0.37559789 0.04232994 0.11773651 0.06621344 0.05242834\n[8] 0.11097720 0.04898986\n\n[[732]]\n[1] 0.07050714 0.06953899 0.09436231 0.07828010 0.07416036 0.07303446 0.08186823\n\n[[733]]\n[1] 0.06512923 0.05752275 0.04815531 0.05027095 0.04404427 0.06543436\n\n[[734]]\n[1] 0.07574564 0.08083277 0.08305264 0.07871410 0.08787733\n\n[[735]]\n[1] 0.03114032 0.02451643 0.01660108 0.02151820 0.01919778 0.03995683\n\n[[736]]\n[1] 0.01486522 0.01494772 0.05666958\n\n[[737]]\n[1] 0.07975391 0.08218976 0.03200733 0.03433268 0.04937969\n\n[[738]]\n [1] 0.06150355 0.04391627 0.08986141 0.04478465 0.03705669 0.05611563\n [7] 0.02552658 0.07892048 0.02802757 0.06543436\n\n[[739]]\n[1] 0.02233121 0.03932310 0.02681878 0.02410878 0.02634218 0.03203595 0.03308590\n[8] 0.02903820\n\n[[740]]\n[1] 0.04118300 0.02033933 0.02201355 0.03132704 0.03995683\n\n[[741]]\n[1] 0.02801712 0.03293699 0.02289309 0.04350084 0.03094559 0.08042286 0.06043909\n[8] 0.02054212 0.02825862\n\n[[742]]\n[1] 0.02565494 0.02744083 0.02639082 0.02641007 0.02592401\n\n[[743]]\n[1] 0.02898622 0.06672812 0.03439425 0.06423976 0.03786080 0.04451413 0.04540491\n\n[[744]]\n[1] 0.02224485 0.01877823 0.03816312 0.01765833\n\n[[745]]\n[1] 0.02284483 0.01775545 0.01866221 0.01399552 0.01393624 0.01564073 0.02182232\n[8] 0.01994000 0.02491164\n\n[[746]]\n[1] 0.04913316 0.04333379 0.03380348 0.04937969 0.01994000 0.04443275\n\n[[747]]\n[1] 0.02306033 0.02120283 0.01637149 0.02491164 0.04443275\n\n[[748]]\n[1] 0.01818614 0.01198318 0.01185572 0.01145364 0.01356361 0.02829454 0.02599665\n\n[[749]]\n[1] 0.01088636 0.02012537 0.01383199 0.02256269 0.01461842\n\n[[750]]\n[1] 0.03080902 0.03520382 0.03090653 0.04252325 0.04725483 0.05054051 0.04540491\n\n[[751]]\n[1] 0.014058050 0.016198054 0.010731694 0.008468845 0.025635904 0.013739429\n[7] 0.023601521\n\n[[752]]\n[1] 0.03196922 0.03558222 0.03845935 0.02754147\n\n[[753]]\n[1] 0.01921030 0.02337382 0.02093427 0.01248131 0.01174434 0.01556035 0.01083294\n\n[[754]]\n[1] 0.02441654 0.03841227 0.03041560 0.03748245 0.02052983 0.02825862\n\n[[755]]\n[1] 0.01997679 0.02350928 0.02350019 0.01972384 0.06186406 0.01973378 0.03295296\n\n[[756]]\n[1] 0.01331920 0.03159086 0.01684760 0.02138877 0.03131401 0.02214730 0.03295296\n\n[[757]]\n[1] 0.05007085 0.01725714 0.03216998 0.03154985 0.03401151\n\n[[758]]\n[1] 0.01681994 0.02755745 0.01561211 0.02578081 0.02194882 0.01290787 0.04489254\n[8] 0.03203162\n\n[[759]]\n[1] 0.01912638 0.01921669 0.03576139 0.01299533 0.02119822 0.02405341 0.01826916\n\n[[760]]\n[1] 0.03509855 0.03980297 0.08656493 0.04371325 0.04669436\n\n[[761]]\n[1] 0.04226673 0.03981480 0.02486864\n\n[[762]]\n[1] 0.05206725 0.08900568 0.01954195 0.03392995 0.05559580 0.01622825\n\n[[763]]\n[1] 0.04557970 0.08808149\n\n[[764]]\n[1] 0.02666081 0.02930741 0.03799950 0.01988767 0.08808149\n\n[[765]]\n[1] 0.023912214 0.009662212 0.041841694 0.028512550 0.020869454 0.044784601\n\n[[766]]\n[1] 0.01739769 0.01715659 0.01010186 0.01037576\n\n[[767]]\n[1] 0.01299732 0.03907677 0.01043680 0.01696819 0.01037576\n\n[[768]]\n[1] 0.02267659 0.03020608 0.02208175 0.01765217 0.01622307 0.02331492 0.02502735\n\n[[769]]\n[1] 0.03255181 0.02453020 0.05226033 0.04669436\n\n[[770]]\n[1] 0.02181910 0.02016180 0.01564940 0.01986300 0.02878944 0.01616484\n\n[[771]]\n[1] 0.02716015 0.02815537 0.06256805 0.02962107\n\n[[772]]\n[1] 0.03644564 0.04478460\n\n[[773]]\n[1] 0.01964310 0.02315608 0.01602168 0.01550717 0.02484935 0.01783186 0.01612347\n[8] 0.02547173\n\n[[774]]\n[1] 0.02206573 0.02269733 0.02249535 0.02599665\n\n\n\n8.1 Row-standardized weights matrix.\nNext, we need to assign weights to each neighboring polygon. In our case, each neighboring polygon will be assigned equal weight (style=“W”). This is accomplished by assigning the fraction 1/(#ofneighbors) to each neighboring county then summing the weighted income values. While this is the most intuitive way to summaries the neighbors’ values it has one drawback in that polygons along the edges of the study area will base their lagged values on fewer polygons thus potentially over- or under-estimating the true nature of the spatial autocorrelation in the data. For this example, we’ll stick with the style=“W” option for simplicity’s sake but note that other more robust options are available, notably style=“B”.\n\nrswm_q <- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nset.ZeroPolicyOption(TRUE)\n\n[1] FALSE\n\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 4440 \nPercentage nonzero weights: 0.7411414 \nAverage number of links: 5.736434 \n1 region with no links:\n86\n\nWeights style: W \nWeights constants summary:\n    n     nn  S0       S1       S2\nW 773 597529 773 285.0658 3198.414\n\n\nThe zero.policy=TRUE option allows for lists of non-neighbors. This should be used with caution since the user may not be aware of missing neighbors in their dataset however, a zero.policy of FALSE would return an error.\nTo see the weight of the first polygon’s eight neighbors type:\n\nrswm_q$weights[10]\n\n[[1]]\n[1] 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571\n\n\nEach neighbor is assigned a 0.1428 of the total weight.\nUsing the same method, we can also derive a row standardised distance weight matrix by using the code chunk below.\n\nrswm_ids <- nb2listw(wm_q, glist=ids, style=\"B\", zero.policy=TRUE)\n\nWarning in nb2listw(wm_q, glist = ids, style = \"B\", zero.policy = TRUE): zero\nsum general weights\n\nrswm_ids\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 4440 \nPercentage nonzero weights: 0.7411414 \nAverage number of links: 5.736434 \n1 region with no links:\n86\n\nWeights style: B \nWeights constants summary:\n    n     nn       S0      S1      S2\nB 773 597529 182.3683 26.1191 252.344\n\n\n\nrswm_ids$weights[1]\n\n[[1]]\n[1] 0.25000205 0.09046782 0.10747703 0.09375983\n\n\n\nsummary(unlist(rswm_ids$weights))\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n0.005368 0.020523 0.031591 0.041074 0.048311 0.375598"
  },
  {
    "objectID": "InClass_Ex02/Africa_Water/Take_Home_Ex1.html#compute-global-and-local-measure-of-spatial-autocorrelation-glsa-by-using-spdep-package.",
    "href": "InClass_Ex02/Africa_Water/Take_Home_Ex1.html#compute-global-and-local-measure-of-spatial-autocorrelation-glsa-by-using-spdep-package.",
    "title": "Take Home Ex 1 : Nigeria Water Functional & Non Functional Water Points",
    "section": "9. Compute Global and Local Measure of Spatial Autocorrelation (GLSA) by using spdep package.",
    "text": "9. Compute Global and Local Measure of Spatial Autocorrelation (GLSA) by using spdep package.\n\n\n9.1 Distribution of functional and non-functional water points.\nNow, we are going to prepare a basemap and a choropleth map showing the distribution of functional and non-functional water points by using qtm() of tmap package.\n\nequal <- tm_shape(nga_wp) +\n  tm_fill(\"wpt functional\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n\nquantile <- tm_shape(nga_wp) +\n  tm_fill(\"wpt functional\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)\n\n\n\n\n\nequal <- tm_shape(nga_wp) +\n  tm_fill(\"wpt non-functional\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n\nquantile <- tm_shape(nga_wp) +\n  tm_fill(\"wpt non-functional\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)\n\n\n\n\n\n\n\n9.2 Global Spatial Autocorrelation.\nLet us compute global spatial autocorrelation statistics and to perform spatial complete randomness test for global spatial autocorrelation.\n\n\n9.2.1 Computing Contiguity Spatial Weights.\nBefore we can compute the global spatial autocorrelation statistics, we need to construct a spatial weights of the study area. The spatial weights are used to define the neighbourhood relationships between the geographical units (i.e. county) in the study area.\nIn the code chunk below, poly2nb() of spdep package is used to compute contiguity weight matrices for the study area. This function builds a neighbours list based on regions with contiguous boundaries. If you look at the documentation you will see that you can pass a “queen” argument that takes TRUE or FALSE as options. If you do not specify this argument the default is set to TRUE, that is, if you don’t specify queen = FALSE this function will return a list of first order neighbours using the Queen criteria.\nMore specifically, the code chunk below is used to compute Queen contiguity weight matrix.\n\nwm_q <- poly2nb(nga_wp, \n                queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 4440 \nPercentage nonzero weights: 0.7411414 \nAverage number of links: 5.736434 \n1 region with no links:\n86\nLink number distribution:\n\n  0   1   2   3   4   5   6   7   8   9  10  11  12  14 \n  1   2  14  57 125 182 140 122  72  41  12   4   1   1 \n2 least connected regions:\n138 560 with 1 link\n1 most connected region:\n508 with 14 links\n\n\n\n\n\n\n9.3 Global Spatial Autocorrelation: Moran’s I\nLet us perform Moran’s I statistics testing by using moran.test() of spdep.\n\nmoran.test(nga_wp$'wpt functional', \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  nga_wp$\"wpt functional\"  \nweights: rswm_q  n reduced by no-neighbour observations\n  \n\nMoran I statistic standard deviate = 25.665, p-value < 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.5512247163     -0.0012953368      0.0004634494 \n\n\n\n\n9.4 Global Spatial Autocorrelation: Geary’s\nThe code chunk below performs Geary’s C test for spatial autocorrelation by using geary.test() of spdep.\n\ngeary.test(nga_wp$'wpt functional', listw=rswm_q)\n\n\n    Geary C test under randomisation\n\ndata:  nga_wp$\"wpt functional\" \nweights: rswm_q \n\nGeary C statistic standard deviate = 15.042, p-value < 2.2e-16\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n      0.462472090       1.000000000       0.001277003 \n\n\n\ngeary.test(nga_wp$'wpt non-functional', listw=rswm_q)\n\n\n    Geary C test under randomisation\n\ndata:  nga_wp$\"wpt non-functional\" \nweights: rswm_q \n\nGeary C statistic standard deviate = 14.457, p-value < 2.2e-16\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n     0.6170907765      1.0000000000      0.0007014859 \n\n\n\n\n\n\n\n9.5 Spatial Correlogram\nSpatial correlograms are great to examine patterns of spatial autocorrelation in your data or model residuals. They show how correlated are pairs of spatial observations when you increase the distance (lag) between them - they are plots of some index of autocorrelation (Moran’s I or Geary’s c) against distance.Although correlograms are not as fundamental as variograms (a keystone concept of geostatistics), they are very useful as an exploratory and descriptive tool. For this purpose they actually provide richer information than variograms.\nIn the code chunk below, sp.correlogram() of spdep package is used to compute a 6-lag spatial correlogram of GDPPC. The global spatial autocorrelation used in Moran’s I. The plot() of base Graph is then used to plot the output.\n\nMI_corr <- sp.correlogram(wm_q, \n                          nga_wp$'wpt functional', \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\n\nMI_corr <- sp.correlogram(wm_q, \n                          nga_wp$'wpt non-functional', \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\nBy plotting the output might not allow us to provide complete interpretation. This is because not all autocorrelation values are statistically significant. Hence, it is important for us to examine the full analysis report by printing out the analysis results as in the code chunk below.\n\nprint(MI_corr)\n\nSpatial correlogram for nga_wp$\"wpt non-functional\" \nmethod: Moran's I\n           estimate expectation    variance standard deviate Pr(I) two sided\n1 (773)  4.3393e-01 -1.2953e-03  4.7152e-04          20.0433       < 2.2e-16\n2 (773)  2.6647e-01 -1.2953e-03  2.0206e-04          18.8374       < 2.2e-16\n3 (773)  1.9507e-01 -1.2953e-03  1.2189e-04          17.7863       < 2.2e-16\n4 (773)  1.4019e-01 -1.2953e-03  8.7589e-05          15.1181       < 2.2e-16\n5 (773)  6.3735e-02 -1.2953e-03  6.8779e-05           7.8413       4.459e-15\n6 (773)  2.1698e-02 -1.2953e-03  5.7380e-05           3.0354        0.002402\n           \n1 (773) ***\n2 (773) ***\n3 (773) ***\n4 (773) ***\n5 (773) ***\n6 (773) ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n9.6 Compute Geary’s C correlogram and plot.\nIn the code chunk below, sp.correlogram() of spdep package is used to compute a 6-lag spatial correlogram of GDPPC. The global spatial autocorrelation used in Geary’s C. The plot() of base Graph is then used to plot the output.\n\nGC_corr <- sp.correlogram(wm_q, \n                          nga_wp$'wpt non-functional', \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\n\nGC_corr <- sp.correlogram(wm_q, \n                          nga_wp$'wpt functional', \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\nSimilar to the previous step, we will print out the analysis report by using the code chunk below.\n\nprint(GC_corr)\n\nSpatial correlogram for nga_wp$\"wpt functional\" \nmethod: Geary's C\n          estimate expectation   variance standard deviate Pr(I) two sided    \n1 (773) 0.46247209  1.00000000 0.00127700         -15.0420       < 2.2e-16 ***\n2 (773) 0.55716070  1.00000000 0.00084660         -15.2197       < 2.2e-16 ***\n3 (773) 0.62832603  1.00000000 0.00065344         -14.5399       < 2.2e-16 ***\n4 (773) 0.70783718  1.00000000 0.00063934         -11.5547       < 2.2e-16 ***\n5 (773) 0.79087031  1.00000000 0.00067363          -8.0576       7.781e-16 ***\n6 (773) 0.85959605  1.00000000 0.00077929          -5.0296       4.916e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n9.7 Cluster and Outlier Analysis.\nLocal Indicators of Spatial Association or LISA are statistics that evaluate the existence of clusters in the spatial arrangement of a given variable.\nLet us apply appropriate Local Indicators for Spatial Association (LISA), especially local Moran’I to detect cluster and/or outlier from Nigeria data.\nTo compute local Moran’s I, the localmoran() function of spdep will be used. It computes Ii values, given a set of zi values and a listw object providing neighbour weighting information for the polygon associated with the zi values.\nThe code chunks below are used to compute local Moran’s I of nga_wp at the region level for functional water point\n\nfips <- order(nga_wp$'wpt functional')\nlocalMI <- localmoran(nga_wp$'wpt functional', rswm_q)\nhead(localMI)\n\n          Ii          E.Ii      Var.Ii      Z.Ii Pr(z != E(Ii))\n1 0.43849688 -7.191834e-04 0.138521511 1.1801022      0.2379596\n2 0.34159457 -2.904635e-04 0.074723729 1.2506933      0.2110464\n3 0.69235062 -8.956670e-04 0.230277001 1.4446488      0.1485566\n4 0.02080384 -3.884365e-04 0.042599612 0.1026774      0.9182190\n5 0.30973779 -3.884365e-04 0.059795173 1.2682517      0.2047081\n6 0.05824105 -4.231402e-05 0.004642162 0.8554300      0.3923132\n\n\nThe code chunks below are used to compute local Moran’s I of nga_wp at the region level for non-functional water point.\n\nfips_nf <- order(nga_wp$'wpt non-functional')\nlocalMI_nf <- localmoran(nga_wp$'wpt non-functional', rswm_q)\nhead(localMI_nf)\n\n           Ii          E.Ii       Var.Ii        Z.Ii Pr(z != E(Ii))\n1 -0.32365786 -9.995243e-04 1.924638e-01 -0.73547576     0.46204980\n2  0.07000542 -4.092463e-05 1.053077e-02  0.68258288     0.49487045\n3  1.25819985 -1.627684e-03 4.181728e-01  1.94819847     0.05139122\n4 -0.03537489 -5.427505e-05 5.954304e-03 -0.45773361     0.64714384\n5  0.01201533 -2.590965e-04 3.988998e-02  0.06145673     0.95099547\n6  0.00768085 -1.538445e-07 1.687859e-05  1.86960486     0.06153871\n\n\nlocalmoran() function returns a matrix of values whose columns are:\n\nIi: the local Moran’s I statistics\nE.Ii: the expectation of local moran statistic under the randomisation hypothesis\nVar.Ii: the variance of local moran statistic under the randomisation hypothesis\nZ.Ii:the standard deviate of local moran statistic\nPr(): the p-value of local moran statistic\n\n\n\n9.8 Creating a LISA Cluster Map\n\nnci <- moran.plot(nga_wp$'wpt functional', rswm_q,\n                  labels=as.character(nga_wp$shapeName), \n                  xlab=\"Functional Water Point\", \n                  ylab=\"Spatially Lag Water Point\")\n\n\n\n\n\nnci <- moran.plot(nga_wp$'wpt non-functional', rswm_q,\n                  labels=as.character(nga_wp$shapeName), \n                  xlab=\"Non Functional Water Point\", \n                  ylab=\"Spatially Lag Water Point\")\n\n\n\n\n\n\n9.9 Mapping the local Moran’s I\nBefore mapping the local Moran’s I map, it is wise to append the local Moran’s I dataframe (i.e. localMI) onto nga_wp SpatialPolygonDataFrame. The code chunks below can be used to perform the task. The out SpatialPolygonDataFrame is called nga_wp.localMI.\n\nnga_wp.localMI <- cbind(nga_wp,localMI) %>%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n\nFor non-functional.\n\nnga_wp.localMI_nf <- cbind(nga_wp,localMI_nf) %>%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n\n\n\n\n9.10 Mapping local Moran’s I values.\nUsing choropleth mapping functions of tmap package, we can plot the local Moran’s I values by using the code chinks below.\n\ntm_shape(nga_wp.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\nVariable(s) \"Ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\nPlotting for non-functional\n\ntm_shape(nga_wp.localMI_nf) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\nVariable(s) \"Ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n9.11 Mapping both local Moran’s I values and p-values\nFor effective interpretation, it is better to plot both the local Moran’s I values map and its corresponding p-values map next to each other.\nThe code chunk below will be used to create such visualisation.\n\nlocalMI_nf.map <- tm_shape(nga_wp.localMI_nf) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\", \n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\npvalue.map <- tm_shape(nga_wp.localMI_nf) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(localMI_nf.map, pvalue.map, asp=1, ncol=2)\n\nVariable(s) \"Ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n9.12 Creating a LISA Cluster Map.\nThe LISA Cluster Map shows the significant locations color coded by type of spatial autocorrelation. The first step before we can generate the LISA cluster map is to plot the Moran scatterplot.\nThe Moran scatterplot is an illustration of the relationship between the values of the chosen attribute at each location and the average value of the same attribute at neighboring locations.\nThe code chunk below plots the Moran scatterplot of non-functional water point by using moran.plot() of spdep.\n\nnci <- moran.plot(nga_wp$'wpt non-functional', rswm_q,\n                  labels=as.character(nga_wp$shapeName), \n                  xlab=\"Non Functional Water Point\", \n                  ylab=\"Spatially Lag Water Point\")\n\n\n\n\nNotice that the plot is split in 4 quadrants\n\n\n9.13 Preparing LISA map classes.\nThe code chunks below show the steps to prepare a LISA cluster map for non-functional water points.\n\nquadrant <- vector(mode=\"numeric\",length=nrow(localMI_nf))\n\nNext, derives the spatially lagged variable of interest (i.e. water points) and centers the spatially lagged variable around its mean.\n\nnga_wp$lag_waterpoints <- lag.listw(rswm_q, nga_wp$'wpt non-functional')\nDV <- nga_wp$lag_waterpoints - mean(nga_wp$lag_waterpoints)    \n\nThis is follow by centering the local Moran’s around the mean.\n\nLM_I <- localMI_nf[,1] - mean(localMI_nf[,1])    \n\nNext, we will set a statistical significance level for the local Moran.\n\nsignif <- 0.05       \n\nThese four command lines define the low-low (1), low-high (2), high-low (3) and high-high (4) categories.\n\nquadrant[DV <0 & LM_I>0] <- 1\nquadrant[DV >0 & LM_I<0] <- 2\nquadrant[DV <0 & LM_I<0] <- 3  \nquadrant[DV >0 & LM_I>0] <- 4      \n\nLastly, places non-significant Moran in the category 0.\n\nquadrant[localMI_nf[,5]>signif] <- 0"
  },
  {
    "objectID": "InClass_Ex02/Africa_Water/Take_Home_Ex1.html#section-14",
    "href": "InClass_Ex02/Africa_Water/Take_Home_Ex1.html#section-14",
    "title": "Take Home Ex 1 : Nigeria Water Functional & Non Functional Water Points",
    "section": "",
    "text": "Plotting LISA map.\n\nNow, we can build the LISA map by using the code chunks below.\n\nnga_wp.localMI_nf$quadrant <- quadrant\ncolors <- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters <- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\ntm_shape(nga_wp.localMI_nf) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\n\n\n\nFor effective interpretation, it is better to plot both the local Moran’s I values map and its corresponding p-values map next to each other.\nThe code chunk below will be used to create such visualization.\n\nwpt_non_functional <- qtm(nga_wp, \"wpt non-functional\")\n\nnga_wp.localMI_nf$quadrant <- quadrant\ncolors <- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters <- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\nLISAmap <- tm_shape(nga_wp.localMI_nf) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\ntmap_arrange(wpt_non_functional, LISAmap, \n             asp=1, ncol=2)"
  },
  {
    "objectID": "InClass_Ex02/Africa_Water/Take_Home_Ex1.html#hot-spot-and-cold-spot-area-analysis.",
    "href": "InClass_Ex02/Africa_Water/Take_Home_Ex1.html#hot-spot-and-cold-spot-area-analysis.",
    "title": "Take Home Ex 1 : Nigeria Water Functional & Non Functional Water Points",
    "section": "11. Hot Spot and Cold Spot Area Analysis.",
    "text": "11. Hot Spot and Cold Spot Area Analysis.\nBeside detecting cluster and outliers, localised spatial statistics can be also used to detect hot spot and/or cold spot areas.\nThe term ‘hot spot’ has been used generically across disciplines to describe a region or value that is higher relative to its surroundings (Lepers et al 2005, Aben et al 2012, Isobe et al 2015).\n\n11.1 Getis and Ord’s G-Statistics.\nAn alternative spatial statistics to detect spatial anomalies is the Getis and Ord’s G-statistics (Getis and Ord, 1972; Ord and Getis, 1995). It looks at neighbors within a defined proximity to identify where either high or low values clutser spatially. Here, statistically significant hot-spots are recognised as areas of high values where other areas within a neighborhood range also share high values too.\nThe analysis consists of three steps:\n\nDeriving spatial weight matrix\nComputing Gi statistics\nMapping Gi statistic\n\n\n\n11.2 Deriving distance-based weight matrix.\nFirst, we need to define a new set of neighbours. Whist the spatial autocorrelation considered units which shared borders, for Getis-Ord we are defining neighbours based on distance.\nThere are two type of distance-based proximity matrix, they are:\n\nfixed distance weight matrix; and\nadaptive distance weight matrix.\n\n\n\n11.2.1 Deriving the centroid.\nWe will need points to associate with each polygon before we can make our connectivity graph. It will be a little more complicated than just running st_centroid() on the sf object: us.bound. We need the coordinates in a separate data frame for this to work. To do this we will use a mapping function. The mapping function applies a given function to each element of a vector and returns a vector of the same length. Our input vector will be the geometry column of us.bound. Our function will be st_centroid(). We will be using map_dbl variation of map from the purrr package. For more documentation, check out map documentation\nTo get our longitude values we map the st_centroid() function over the geometry column of us.bound and access the longitude value through double bracket notation [[]] and 1. This allows us to get only the longitude, which is the first value in each centroid.\n\nlongitude <- map_dbl(nga_wp$geometry, ~st_centroid(.x)[[1]])\n\nWe do the same for latitude with one key difference. We access the second value per each centroid with [[2]].\n\nlatitude <- map_dbl(nga_wp$geometry, ~st_centroid(.x)[[2]])\n\nNow that we have latitude and longitude, we use cbind to put longitude and latitude into the same object.\n\ncoords <- cbind(longitude, latitude)\n\n\n\n\n11.3 Determine the cut-off distance.\nFirstly, we need to determine the upper limit for distance band by using the steps below:\n\nReturn a matrix with the indices of points belonging to the set of the k nearest neighbours of each other by using knearneigh() of spdep.\nConvert the knn object returned by knearneigh() into a neighbours list of class nb with a list of integer vectors containing neighbour region number ids by using knn2nb().\nReturn the length of neighbour relationship edges by using nbdists() of spdep. The function returns in the units of the coordinates if the coordinates are projected, in km otherwise.\nRemove the list structure of the returned object by using unlist().\n\n\n#coords <- coordinates(hunan)\nk1 <- knn2nb(knearneigh(coords))\nk1dists <- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  2.662  12.815  20.242  22.031  27.706  71.661 \n\n\nThe summary report shows that the largest first nearest neighbour distance is 71.661 km, so using this as the upper threshold gives certainty that all units will have at least one neighbor.\n\n11.3.1 Computing fixed distance weight matrix.\nNow, we will compute the distance weight matrix by using dnearneigh() as shown in the code chunk below.\n\nwm_d72 <- dnearneigh(coords, 0, 72, longlat = TRUE)\nwm_d72\n\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 18112 \nPercentage nonzero weights: 3.023323 \nAverage number of links: 23.40052 \n\n\nNext, nb2listw() is used to convert the nb object into spatial weights object.\n\nwm72_lw <- nb2listw(wm_d72, style = 'B')\nsummary(wm72_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 18112 \nPercentage nonzero weights: 3.023323 \nAverage number of links: 23.40052 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 \n 5  8 12 21 32 35 33 35 28 36 25 21 19 23 16 14 10 13 15 17 16 11 13 10  6 12 \n27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 \n12  5 16 13 12  7  9  9 12  7 12 15 13  9 10  4  5  4  7  8  8  8  6  5  3  2 \n53 54 55 56 57 58 59 60 61 62 63 64 65 67 68 70 \n 3  4  5  3  6  5  2  6  4  8  8  4  4  3  1  1 \n5 least connected regions:\n90 112 123 237 670 with 1 link\n1 most connected region:\n585 with 70 links\n\nWeights style: B \nWeights constants summary:\n    n     nn    S0    S1      S2\nB 774 599076 18112 36224 2614072\n\n\n\n\n\n\n11.4 Computing adaptive distance weight matrix.\nOne of the characteristics of fixed distance weight matrix is that more densely settled areas (usually the urban areas) tend to have more neighbours and the less densely settled areas (usually the rural counties) tend to have lesser neighbours. Having many neighbours smoothes the neighbour relationship across more neighbours.\nIt is possible to control the numbers of neighbours directly using k-nearest neighbours, either accepting asymmetric neighbours or imposing symmetry as shown in the code chunk below.\n\nknn <- knn2nb(knearneigh(coords, k=8))\nknn\n\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 6192 \nPercentage nonzero weights: 1.033592 \nAverage number of links: 8 \nNon-symmetric neighbours list\n\n\nNext, nb2listw() is used to convert the nb object into spatial weights object.\n\nknn_lw <- nb2listw(knn, style = 'B')\nsummary(knn_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 6192 \nPercentage nonzero weights: 1.033592 \nAverage number of links: 8 \nNon-symmetric neighbours list\nLink number distribution:\n\n  8 \n774 \n774 least connected regions:\nwith 8 links\n774 most connected regions:\nwith 8 links\n\nWeights style: B \nWeights constants summary:\n    n     nn   S0    S1     S2\nB 774 599076 6192 11152 201942"
  },
  {
    "objectID": "InClass_Ex02/Africa_Water/Take_Home_Ex1.html#computing-gi-statistics.",
    "href": "InClass_Ex02/Africa_Water/Take_Home_Ex1.html#computing-gi-statistics.",
    "title": "Take Home Ex 1 : Nigeria Water Functional & Non Functional Water Points",
    "section": "12 Computing Gi statistics.",
    "text": "12 Computing Gi statistics.\n\n12.1 Computing Gi statistics\n\nfips <- order(nga_wp$shapeName)\ngi.fixed <- localG(nga_wp$'wpt non-functional', wm72_lw)\ngi.fixed\n\n  [1] -3.4117746649 -3.4325327295 -1.5896654726  0.1024035837 -1.4372020951\n  [6]  2.8392431096 -1.2451608781 -2.0881598529  0.6943166939 -4.0181176937\n [11] -3.5543643584  0.7028327021  1.0557642518 -1.2648020444 -3.1100102991\n [16]  4.4236791649  0.7253370351 -0.1170313444 -0.8468860707  0.1418378466\n [21] -0.4444525907 -2.5787439152 -5.9408386919  0.0490221299 -4.6250101263\n [26] -3.4526479798 -3.2842327545  2.6307586789  3.1531206419  3.9017827701\n [31] -0.3901172116 -2.0709442943 -0.1348087246  2.5315321685  0.5142842691\n [36]  2.8157847314  2.0572944746  2.3429395384  2.1827306253  1.9238345799\n [41]  2.1897325824 -0.3645157327 -3.8639919963  4.5399631849  4.3061500016\n [46]  2.9608766578 -0.2864102817  1.1746065746 -2.8181694612  3.0318488026\n [51] -2.3715234853 -5.9628191057 -4.8665465676 -5.9978486948 -2.1521995859\n [56] -2.6990377972 -4.0738422433 -4.2582561763  0.1434597247 -1.4480552039\n [61] -0.3664736626 -2.0660238126  1.3560050446  1.1941723552  0.6520255991\n [66] -0.7061126715  5.3395987192 -3.9654078235 -2.8742418968  4.4607142525\n [71]  6.0841484326  0.2440050847 -0.0717557313 -0.2146512615  1.2805963197\n [76]  2.5430378175 -4.3209911455 -6.1864779959 -6.3091804665 -5.2074212405\n [81]  1.5724065864 -3.0134148246 -1.6605766843  2.1372905711 -1.9370094219\n [86]  0.5351722462  0.7781339095 -0.0991617191 -0.2983694288  1.6845537280\n [91] -1.9481984678  2.4106784274 -0.1209884988 -0.0294216102  1.2014584129\n [96]  0.5487724545  0.5230691396 -1.0049421880  2.2086577453  0.6860104564\n[101] -0.8358802808  3.3934885075 -2.5915246147  0.7361865356 -1.3919152488\n[106]  1.6857908883  3.3349825302  1.4948688424 -0.6649376028  0.1049808942\n[111]  0.1797402897 -0.2296312591  1.5924606930 -0.4220300892 -2.4843821512\n[116] -0.5403453732  2.4425124231  3.1901956500  3.7026209747  5.7708188247\n[121] -2.9992528883 -2.8867680713  0.1450845287  5.6210067488  0.1300463875\n[126] -1.4642795114 -0.1821964578  0.2019905157 -0.3933126058 -1.0687092481\n[131]  1.1862683742 -1.2897330306  2.0774178384 -2.7261489805  1.1595913792\n[136]  0.0590529868  0.0415312576 -0.1479027888  0.2286220369 -1.8068739793\n[141]  1.8128875616 -1.8465165657 -1.9263347704 -0.1217435299  0.1562862363\n[146] -2.0483697898 -0.1728823598  1.1206769217  2.2828808379 -1.2897776976\n[151]  2.4167160591  0.3088772578 -0.1569586843  1.5067812784 -1.4232058416\n[156] -1.3192224285 -3.7789524190 -0.8757699225 -1.6603243945 -2.5183861649\n[161]  0.0497131757  0.5395983509  2.4584177542  1.7817721289 -5.8940988934\n[166]  0.5616363675  1.6014174947 -0.7737526146 -1.8608470741  1.2807175799\n[171]  1.8546118600  5.6507070121  4.9899574161  3.8565952505  5.4648235612\n[176] -0.6763153032 -2.1820247405  1.1201091686  5.1137113602 -1.0998628514\n[181] -4.9652045029  3.5387758960 -2.3886751887 -0.4653196107  4.1348276862\n[186]  3.5932572298  3.8543059497  5.2228382133 -5.6296206205 -2.9973115744\n[191] -3.9852174640  3.2727422969 -2.4310631930 -3.0070376123 -3.2384084218\n[196] -3.0486056593 -2.0595597139 -2.5844113063 -3.5641507085 -1.7577329410\n[201]  0.3786055236 -0.5079560968 -1.9294510731 -3.7986404726 -2.7848792901\n[206] -2.5102897931 -1.9939528637 -2.3691669213 -0.9886885003 -2.0151263289\n[211] -0.9581884502 -0.5086561528  3.7754185180 -2.4231288260 -5.6010575750\n[216] -4.0749852290  0.3576511087  0.2927426140 -1.6443111430  0.8302229411\n[221] -0.5062515700 -0.1547202287 -2.4843821512  1.0086589118 -2.1770380403\n[226]  2.4626146208  0.0440638219  0.1920286012  1.3983932449 -0.8496076016\n[231] -0.6691384516 -1.2911170263  1.5345894073 -0.5529326952 -1.5457781106\n[236] -1.0324483227  1.1200463362 -0.0620637069  0.4247713032  2.0054718680\n[241] -1.8702382558 -1.1521974135 -0.2921554734 -2.4950665627  3.5976949011\n[246] -2.7962939270  4.8434048492 -2.5148770948 -1.1267981706 -2.4941996452\n[251] -0.2630217751 -2.1970004876 -0.7730147072  0.6798537235  1.2492399224\n[256] -0.6888953395  0.8358603199  1.6654804315 -0.4827650151 -0.5433051006\n[261] -2.7605516416 -0.8707537202  0.0947302301 -2.0368588754  0.0696307201\n[266] -0.6203604939 -2.3237912877  0.3598097208  0.3526946680  1.4430576168\n[271] -1.8702382558 -0.1272890978 -2.2962397403 -2.7219828700  0.2521141177\n[276]  0.2110907859 -0.0140816269 -0.4035735646 -0.1936101468 -3.4726936093\n[281] -1.1266733840 -1.0891489463 -0.8054781266 -3.1021011147 -0.2258676440\n[286] -0.4264717884  1.5869426397 -0.6349762230 -1.8844344179  3.0598056534\n[291] -5.6754076087 -5.4830137576 -5.5819971667 -5.6384828208 -0.5824687042\n[296]  5.3088751125 -2.6487517374  5.7673863636  4.9440575555  3.7543412120\n[301]  4.2490060765  6.6608670387  3.7340891879  4.3840930783  4.6799452358\n[306] -2.6462032630  4.3397784922 -2.4054408070 -3.4238843779 -2.5120530221\n[311] -2.9450547146 -2.6317957384 -5.5485595954 -4.2448418644  1.3083580350\n[316] -0.0008175288 -0.5453801285 -2.0157446995  4.7484630417  2.6229111706\n[321] -2.5261266494 -3.2713201180 -2.9903547011  1.6380043965 -4.6631468209\n[326] -2.3492073446 -3.3004858380  4.2761022253  4.0780178934  3.5616720390\n[331] -1.2136320131 -2.7979941928 -2.0118940444 -1.5111729044 -2.2358982231\n[336] -3.9541762690  2.0820588544 -2.6099148033  6.7003704884  1.0903162691\n[341]  4.4835629508  6.0629547434  6.0427221000  6.1036461610 -1.0477720725\n[346]  6.6228782572  4.9953238917  5.1302151080  0.5368152260  1.0651968009\n[351] -0.8283153141 -2.4311349096  0.8470591553  0.3745724752  5.5209564889\n[356]  5.4927540484  5.2676551986  2.0959129929 -0.6275540802  4.1792561383\n[361] -0.0590747566 -1.4318034953 -1.8389648967 -3.6800688787 -3.7817839487\n[366] -5.4245454867  5.8696037200 -4.6411506929  1.6117911279 -2.6522843897\n[371] -2.9391365455 -5.4894734274  0.8980569535  0.1738054683 -0.1017873640\n[376] -2.9644127980 -0.3483319452  2.5906642146  2.5757689632  2.8049352195\n[381] -1.8542483216  0.4788736337  0.3119912756  0.9113252618 -1.0636046195\n[386]  1.2128128576  2.3166975797 -2.4409676368  1.2514290700  1.2361156601\n[391]  2.1848914329  1.9356540658  1.1829505160 -2.1398569553  1.5986911707\n[396]  3.5405748932  4.2315968938  1.4478008085  0.7997941089 -2.4579198656\n[401]  1.7729143861 -0.2688161324  1.1759997435 -0.4785272245  0.0824185174\n[406] -1.9481984678  1.8474148195  2.0216768147  0.6370561918 -1.0801487314\n[411]  1.8849519770 -0.4439225392 -2.1627301474 -0.9568239420 -2.1208906249\n[416]  1.9959594097  1.8550481979  0.0768132901  0.6124793401  1.3560776058\n[421]  2.3411474563  1.5216483269  2.8604474525 -0.5765991732  1.1856817116\n[426]  0.8921599476  0.9184331234  1.0249162410  1.3154778076 -2.2722342410\n[431] -0.7116331447  2.1453405077  0.6730570517 -1.1800027342 -0.5199578683\n[436]  0.4808652570 -0.0235257009  0.8165479237 -3.0529318612 -2.0225625108\n[441]  2.9455769746  0.2363832344 -2.2768267875  0.3466223084  3.2255102937\n[446]  0.1411952313 -1.9481984678 -2.1661859263 -0.4676066168 -1.6782098794\n[451] -0.0777842289  1.4868205720 -0.3505589498 -0.1726887164  3.5929560597\n[456]  2.7346136617 -0.9465537461 -0.2014424404  1.3012749110  1.5028765507\n[461] -2.2932985630 -2.2505626380  0.7936258264  2.4032040546  2.3557037349\n[466]  0.1826814641  0.1072325498  1.2844732698 -0.8760327358  1.7752129147\n[471]  0.2516184985  1.2342409373 -2.0753935530 -1.8558057677 -2.5640880571\n[476] -0.2895493962 -2.0222513579  1.9291991379 -2.0461307940  1.7044807663\n[481] -2.1018239835  2.2216843179 -0.0429522457  0.4370541700  1.2654796893\n[486] -0.8407609199  2.7630963689  1.3973854719 -1.0153143497  0.3214749983\n[491]  2.0826454414 -2.2510480140 -0.9777552530 -0.2462903412  1.4346392906\n[496] -1.1545484236 -1.5476742545 -5.2094566914  0.0549402737 -2.6381224548\n[501]  1.2314091065  3.0942547654 -0.1945298933 -0.3139665937 -1.4312402705\n[506]  6.0035680834 -1.5896654726  1.7438033643 -2.7605516416  3.6248484270\n[511]  3.2842322630 -2.5504783218 -2.2884473891 -1.2742029215 -2.1794770390\n[516] -0.9452868662  0.9226508131 -0.2808815183 -1.3017627523  0.1028146689\n[521]  0.7903470822 -4.7773019724 -4.0599839099 -2.8929329559 -2.2510480140\n[526] -2.5436200487  0.5572826624 -4.0077436082  0.5743933705  0.7561771796\n[531] -5.4711387856 -5.9881769115 -1.7097095914 -3.2145613317 -5.4921528592\n[536] -5.6065224752 -5.8927691095 -0.5158206706 -0.6169568186 -0.3646687228\n[541] -3.1236269572 -0.6335776619 -5.7248166602 -2.7991201431  3.1510854408\n[546]  0.8119571110  1.5362711705 -3.3968533218 -3.8153771055  5.9423980975\n[551] -1.9815928102 -3.8748698800  2.7449840241  3.5912450649 -1.5471567880\n[556]  1.1545459720  4.7634173376 -3.1812422270 -0.1539058338  5.4349953766\n[561] -1.4215986299 -4.1250618121 -2.1372786039 -5.4053629216 -3.3734475553\n[566]  3.1128103289  3.3148834211  2.8896814604  3.3780876342  2.1415338074\n[571] -2.6827643843  1.3599575208 -5.4155248133 -0.3658278560 -4.8168371931\n[576] -1.0570272459 -0.2384946211 -1.1607522581 -5.6452073745 -2.2576555531\n[581]  1.7975786222  4.6952651933  1.4302665280  1.3989314523 -5.3349149523\n[586]  1.4675795928 -0.2318308926 -2.7751843183 -1.2798894874 -3.2243185582\n[591]  3.7238463041 -1.9040602801  5.3597510246  0.3377758326 -0.6590453290\n[596]  0.5564706605 -3.6996922635  0.2560104627  4.2395964721  3.9198676182\n[601] -0.7367636763 -5.4524005156 -5.3185082518 -0.8488602190 -1.9028377268\n[606] -1.0064673530 -0.3045753085 -2.8225903216  2.5443505078  4.8232865803\n[611] -5.7372577835  5.3162941702  0.0533854848 -5.5653175208 -5.4554505787\n[616] -5.3342170944 -2.0355539983 -6.2184435395 -5.6475542692  1.4165917345\n[621] -4.8095950608 -5.3585676554 -2.4123005609 -3.7802073197  5.5704091882\n[626] -0.4207639553 -0.0820196887  0.4913428569  1.9668518061  1.0669220785\n[631] -4.3830103212 -4.0535150724 -4.2297431678  2.9774246125  4.2206187107\n[636] -5.8592562511 -2.6995188099  1.2724261692 -0.0111640361  4.9598342782\n[641] -0.8975285513  3.2695447281 -3.3804769565  1.0233101789 -3.3797348722\n[646]  0.6090977147  2.9539283043 -1.1786140304 -0.0727091531 -0.8216517560\n[651] -2.6810951026  0.2470088329  1.2742462639 -1.9488365342  1.0167687803\n[656]  2.4696394873  0.9420722071  0.4885664676  3.1287725372 -0.9497319744\n[661]  2.4425891604 -0.2105136963 -3.5070892894  0.8476063553 -0.4188028499\n[666] -0.1801619339  2.1839721672  2.9349648477 -2.3517158696  0.6303115465\n[671] -2.9726649671 -0.3251973156  0.5816313363 -0.3216700089 -1.8966498040\n[676] -2.6167225944  2.1462680474 -0.7007776964 -0.2901563432 -0.6294507710\n[681]  3.1848222332 -2.2628381729 -0.1928257328  3.7543250494 -0.6898963477\n[686] -0.4579363450 -2.8263574815 -1.9107113505  1.9767736485  1.3356841113\n[691] -0.1992862573  2.1555107134 -2.1759945372  3.8196059687  1.3667153170\n[696]  1.5606747950 -2.8180979983  0.1258362477  1.6362250633 -1.1755606793\n[701]  0.0556083826 -0.6254612030 -1.8245553490  1.7673690255 -1.7099082238\n[706]  0.3279568070 -1.8322536644 -0.4720914115  1.2302888089 -0.2537342611\n[711] -1.0194530184 -1.4775673577 -0.0896050089 -1.1801300237 -2.3509568161\n[716] -4.6307512034 -2.7407326147 -0.0025370071 -3.0988099215 -3.1167461569\n[721] -3.4662013761 -1.4743456301 -1.9718471619  2.1607674145 -2.9497681287\n[726] -3.3579719453 -3.6200569828 -4.8364896839 -3.6643604569 -3.4079170777\n[731] -1.2277114161 -5.4597614286  0.0712972970 -0.1507192365  2.3528477525\n[736]  1.8167556955 -2.5958296857 -0.4791719568 -3.9373952476  4.0454927846\n[741] -0.8497222111  4.1914248594 -1.3905853881 -1.1087182179 -1.5160448019\n[746] -2.6117513854 -2.7085894788  0.0867810375  1.8316046394 -1.3189997474\n[751]  0.6456167365 -0.8342620760 -0.2755550651 -0.1319774555  3.8329382654\n[756]  3.9433436976  1.4629084755  2.5181371643  2.4671867473  1.4737976377\n[761]  1.0618293805 -3.2385810885 -2.9516603752 -3.1601387394  0.2150638765\n[766] -1.2461555271 -0.1547825213  0.7644963108  2.3956916991  3.1096694186\n[771]  3.4527292514 -0.9854012267 -1.0503779238  0.1911170626\nattr(,\"cluster\")\n  [1] Low  Low  Low  Low  Low  High Low  Low  High Low  Low  High Low  Low  High\n [16] High Low  High Low  High High Low  Low  High Low  Low  Low  High High High\n [31] Low  Low  Low  High High High Low  High High High High High Low  Low  Low \n [46] High High High High Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low \n [61] Low  Low  High Low  High Low  High Low  Low  High High Low  High Low  High\n [76] Low  Low  Low  Low  Low  High High High Low  High Low  Low  Low  High High\n [91] Low  High High High High High High Low  High Low  Low  High Low  High High\n[106] Low  High High High High Low  High Low  Low  Low  High Low  High High High\n[121] Low  Low  Low  High Low  Low  Low  Low  Low  Low  High Low  High Low  High\n[136] Low  High Low  High Low  Low  High Low  High High Low  Low  High High Low \n[151] Low  High Low  High High Low  Low  High Low  Low  High Low  High High Low \n[166] Low  Low  High Low  Low  High High Low  High Low  Low  Low  Low  High Low \n[181] Low  High Low  Low  High Low  High High Low  Low  Low  Low  Low  Low  Low \n[196] High Low  Low  Low  Low  High High Low  Low  Low  Low  Low  Low  Low  Low \n[211] Low  Low  High Low  Low  Low  High High Low  Low  High Low  Low  High Low \n[226] Low  Low  Low  Low  High Low  Low  High Low  High High High Low  High High\n[241] Low  High Low  Low  High Low  Low  Low  Low  Low  Low  Low  Low  High High\n[256] Low  Low  Low  Low  Low  Low  High High Low  High Low  Low  High Low  High\n[271] Low  High Low  Low  Low  High Low  Low  Low  Low  High Low  High High Low \n[286] Low  Low  Low  Low  High Low  Low  Low  Low  Low  Low  Low  High High High\n[301] High Low  High High High Low  High Low  Low  Low  Low  Low  Low  Low  Low \n[316] Low  Low  Low  High High Low  Low  Low  Low  Low  Low  Low  High High High\n[331] Low  High Low  Low  Low  Low  High High High Low  High Low  High High High\n[346] Low  Low  High Low  Low  Low  Low  High Low  High High Low  High Low  Low \n[361] Low  High High Low  Low  Low  High Low  High Low  Low  Low  Low  Low  High\n[376] Low  High High Low  High Low  Low  Low  High Low  High High Low  Low  High\n[391] Low  High Low  Low  High High Low  Low  Low  Low  High High High High Low \n[406] Low  High High High Low  High Low  High Low  High High High Low  Low  High\n[421] High Low  High Low  High High Low  Low  Low  Low  Low  Low  High High High\n[436] High High High Low  Low  High Low  Low  Low  High High Low  Low  Low  High\n[451] High High Low  High High High High Low  High High Low  Low  Low  High Low \n[466] Low  High Low  High High Low  Low  Low  Low  Low  High Low  High Low  High\n[481] Low  High Low  Low  Low  Low  High High Low  High Low  Low  High Low  High\n[496] High Low  Low  Low  Low  Low  High Low  Low  High Low  Low  High Low  High\n[511] High Low  Low  Low  Low  High High Low  High High High High Low  Low  Low \n[526] Low  High Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  High Low  High\n[541] Low  Low  Low  Low  High High High High High High High Low  High High Low \n[556] High High Low  High High Low  Low  Low  Low  Low  Low  High High High Low \n[571] Low  Low  High Low  High High High Low  Low  Low  Low  High High High Low \n[586] High High Low  Low  Low  Low  Low  High Low  Low  Low  Low  High High High\n[601] High Low  Low  Low  Low  Low  Low  High Low  High Low  High Low  Low  Low \n[616] Low  High Low  Low  High Low  Low  Low  Low  High Low  Low  Low  Low  Low \n[631] Low  Low  Low  High High Low  Low  Low  Low  High Low  High Low  High Low \n[646] Low  High Low  Low  Low  Low  High Low  Low  Low  High High High High High\n[661] Low  Low  High High Low  High High High Low  Low  High Low  High Low  Low \n[676] Low  High Low  High Low  High Low  Low  High Low  Low  Low  Low  High Low \n[691] High High Low  High Low  Low  Low  High High High High Low  Low  High Low \n[706] High Low  Low  High Low  High High High High Low  Low  Low  High Low  Low \n[721] High Low  Low  High High High Low  Low  Low  Low  Low  Low  Low  Low  High\n[736] High Low  High Low  High Low  High High Low  Low  Low  Low  High High Low \n[751] High Low  High High High High High High High Low  Low  Low  Low  Low  High\n[766] Low  Low  High Low  Low  High High High Low \nLevels: Low High\nattr(,\"gstari\")\n[1] FALSE\nattr(,\"call\")\nlocalG(x = nga_wp$\"wpt non-functional\", listw = wm72_lw)\nattr(,\"class\")\n[1] \"localG\"\n\n\nThe output of localG() is a vector of G or Gstar values, with attributes “gstari” set to TRUE or FALSE, “call” set to the function call, and class “localG”.\nThe Gi statistics is represented as a Z-score. Greater values represent a greater intensity of clustering and the direction (positive or negative) indicates high or low clusters.\nNext, we will join the Gi values to their corresponding nga_wp sf data frame by using the code chunk below.\n\nnga_wp.gi <- cbind(nga_wp, as.matrix(gi.fixed)) %>%\n  rename(gstat_fixed = as.matrix.gi.fixed.)\n\nIn fact, the code chunk above performs three tasks. First, it convert the output vector (i.e. gi.fixed) into r matrix object by using as.matrix(). Next, cbind() is used to join hunan@data and gi.fixed matrix to produce a new SpatialPolygonDataFrame called hunan.gi. Lastly, the field name of the gi values is renamed to gstat_fixed by using rename().\n\n\n12.2 Mapping Gi values with fixed distance weights.\nThe code chunk below shows the functions used to map the Gi values derived using fixed distance weight matrix.\n\nwpt_non_func <- qtm(nga_wp, \"wpt non-functional\")\n\nGimap <-tm_shape(nga_wp.gi) +\n  tm_fill(col = \"gstat_fixed\", \n          style = \"pretty\",\n          palette=\"-RdBu\",\n          title = \"local Gi\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(wpt_non_func, Gimap, asp=1, ncol=2)\n\nVariable(s) \"gstat_fixed\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n12.3 Gi statistics using adaptive distance.\nThe code chunk below are used to compute the Gi values for GDPPC2012 by using an adaptive distance weight matrix (i.e knb_lw).\n\nfips <- order(nga_wp$shapeName)\ngi.adaptive <- localG(nga_wp$'wpt non-functional', knn_lw)\nhunan.gi <- cbind(nga_wp, as.matrix(gi.adaptive)) %>%\n  rename(gstat_adaptive = as.matrix.gi.adaptive.)"
  },
  {
    "objectID": "TakeHome_Ex02/TakeHome_Ex02.html#setting-the-scene.",
    "href": "TakeHome_Ex02/TakeHome_Ex02.html#setting-the-scene.",
    "title": "Take Home Ex 2 : Regionalization of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods.",
    "section": "1. Setting the scene.",
    "text": "1. Setting the scene.\nIn this take-home exercise we are going to regionalise Nigeria.The process of creating regions is called regionalisation. A regionalisation is a special kind of clustering where the objective is to group observations which are -\n\nSimilar in their statistical attributes &\nSimilar in their spatial location.\n\nWe are going to regionalise Nigeria by using following measures :\n\nTotal number of functional water points.\nTotal number of nonfunctional water points.\nPercentage of functional water points.\nPercentage of non-functional water points.\nPercentage of main water point technology (i.e. Hand Pump).\nPercentage of usage capacity.\nPercentage of rural water points."
  },
  {
    "objectID": "TakeHome_Ex02/TakeHome_Ex02.html#objectives.",
    "href": "TakeHome_Ex02/TakeHome_Ex02.html#objectives.",
    "title": "Take Home Ex 2 : Regionalization of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods.",
    "section": "2. Objectives.",
    "text": "2. Objectives.\nIn this take-home exercise we are going to regionalise Nigeria by using following measures :\n\nTotal number of functional water points.\nTotal number of nonfunctional water points.\nPercentage of functional water points.\nPercentage of non-functional water points.\nPercentage of main water point technology (i.e. Hand Pump).\nPercentage of usage capacity.\nPercentage of rural water points."
  },
  {
    "objectID": "TakeHome_Ex02/TakeHome_Ex02.html#installing-and-loading-required-packages.",
    "href": "TakeHome_Ex02/TakeHome_Ex02.html#installing-and-loading-required-packages.",
    "title": "Take Home Ex 2 : Regionalization of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods.",
    "section": "3. Installing and loading required packages.",
    "text": "3. Installing and loading required packages.\nLet us install necessary R packages into R and launch these R packages into R environment.\nThe R packages needed for this exercise are as follows :\n\nSpatial data handling using sf, rgdal and spdep.\nAttribute data handling using tidyverse, especially readr, ggplot2 and dplyr. tidyverse for importing and processing non-spatial data. In this exercise, readr package will be used for importing wkt data and dplyr package will be used to wrangling the data.\nChoropleth mapping using tmap.\nMultivariate data visualisation and analysis using coorplot, ggpubr, and heatmaply.\nCluster analysis cluster and ClustGeo.\n\nThe code chunk below installs and launches these R packages into R environment.\n\npacman::p_load(rgdal, spdep, tmap, sf, ClustGeo, funModeling,\n               ggpubr, cluster, factoextra, NbClust,\n               heatmaply, corrplot, psych, tidyverse, GGally)"
  },
  {
    "objectID": "TakeHome_Ex02/TakeHome_Ex02.html#importing-data.",
    "href": "TakeHome_Ex02/TakeHome_Ex02.html#importing-data.",
    "title": "Take Home Ex 2 : Regionalization of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods.",
    "section": "4. Importing Data.",
    "text": "4. Importing Data.\n\n\n\n\n4.1 Importing Water point Data.\n\nwp_nga <- read_csv(\"data/aspatial/Water_Point.csv\") %>%\n  filter(`#clean_country_name` == \"Nigeria\")\n\nRows: 1048575 Columns: 70\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (44): #source, #report_date, #status_id, #water_source_clean, #water_sou...\ndbl (24): row_id, #lat_deg, #lon_deg, #install_year, #rehab_year, #fecal_col...\nlgl  (2): is_urban, latest_record\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nThings to learn from the code chunk above :\n\nThe original file name is called Water_Point_Data_Exchange_-PlusWPdx.csv, it has been rename to Water_Point.csv for easy encoding.\nInstead of using read.csv() of Base R to import the csv file into R, read_csv() of readr package is used. This is because during the initial data exploration, we noticed that there is at least one field name with space between the field name (ie. New Georeferenced Column)\nThe data file contains water point data of many countries. In this study, we are interested on water point in Nigeria on. Hence, filter() of dplyr is used to extract out records which belong to Nigeria only.\n\n\n\n5. Convert Well Known Text (wkt) data.\nAfter the data are imported into R environment, it is a good practice to review both the data structure and the data table if it is in tibble data frame format in R Studio. Notice that the newly imported tibble data frame (i.e. wp_nga) contains a field called NewGeoreferenced Column which represent spatial data in a textual format. In fact, this kind of text file is popularly known as Well Known Text in short wkt. Two steps will be used to convert an aspatial data file in wkt format into a sf data frame by using sf.\n\nst_as_sfc() of sf package is used to derive a new field called Geometry as shown in the code chunk below.\n\n\nwp_nga$Geometry = st_as_sfc(wp_nga$`New Georeferenced Column`)\n\n\nst_sf() will be used to convert the tibble data frame into sf data frame.\n\n\nwp_sf <- st_sf(wp_nga, crs=4326) \n\nLet us do a quick check by printing summary of wp_sf. We can see that new column Geometry is added.\n\nsummary(wp_sf)\n\n     row_id         #source             #lat_deg         #lon_deg     \n Min.   : 10732   Length:95008       Min.   : 4.302   Min.   : 2.707  \n 1st Qu.: 52633   Class :character   1st Qu.: 7.360   1st Qu.: 5.517  \n Median : 86953   Mode  :character   Median : 9.091   Median : 7.891  \n Mean   :199976                      Mean   : 9.334   Mean   : 7.505  \n 3rd Qu.:323672                      3rd Qu.:11.833   3rd Qu.: 9.080  \n Max.   :681838                      Max.   :13.866   Max.   :14.218  \n                                                                      \n #report_date        #status_id        #water_source_clean\n Length:95008       Length:95008       Length:95008       \n Class :character   Class :character   Class :character   \n Mode  :character   Mode  :character   Mode  :character   \n                                                          \n                                                          \n                                                          \n                                                          \n #water_source_category #water_tech_clean  #water_tech_category\n Length:95008           Length:95008       Length:95008        \n Class :character       Class :character   Class :character    \n Mode  :character       Mode  :character   Mode  :character    \n                                                               \n                                                               \n                                                               \n                                                               \n #facility_type     #clean_country_name #clean_adm1        #clean_adm2       \n Length:95008       Length:95008        Length:95008       Length:95008      \n Class :character   Class :character    Class :character   Class :character  \n Mode  :character   Mode  :character    Mode  :character   Mode  :character  \n                                                                             \n                                                                             \n                                                                             \n                                                                             \n #clean_adm3        #clean_adm4        #install_year    #installer       \n Length:95008       Length:95008       Min.   :1904    Length:95008      \n Class :character   Class :character   1st Qu.:2005    Class :character  \n Mode  :character   Mode  :character   Median :2010    Mode  :character  \n                                       Mean   :2007                      \n                                       3rd Qu.:2012                      \n                                       Max.   :2045                      \n                                       NA's   :48169                     \n  #rehab_year    #rehabilitator     #management_clean  #status_clean     \n Min.   :2020    Length:95008       Length:95008       Length:95008      \n 1st Qu.:2020    Class :character   Class :character   Class :character  \n Median :2020    Mode  :character   Mode  :character   Mode  :character  \n Mean   :2020                                                            \n 3rd Qu.:2020                                                            \n Max.   :2020                                                            \n NA's   :94994                                                           \n     #pay           #fecal_coliform_presence #fecal_coliform_value\n Length:95008       Length:95008             Min.   :0            \n Class :character   Class :character         1st Qu.:0            \n Mode  :character   Mode  :character         Median :0            \n                                             Mean   :0            \n                                             3rd Qu.:0            \n                                             Max.   :0            \n                                             NA's   :94981        \n #subjective_quality #activity_id        #scheme_id          #wpdx_id        \n Length:95008        Length:95008       Length:95008       Length:95008      \n Class :character    Class :character   Class :character   Class :character  \n Mode  :character    Mode  :character   Mode  :character   Mode  :character  \n                                                                             \n                                                                             \n                                                                             \n                                                                             \n    #notes           #orig_lnk          #photo_lnk        #country_id       \n Length:95008       Length:95008       Length:95008       Length:95008      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n  #data_lnk         #distance_to_primary_road #distance_to_secondary_road\n Length:95008       Min.   :    0.01          Min.   :    0.0            \n Class :character   1st Qu.: 1361.68          1st Qu.:  788.6            \n Mode  :character   Median : 6647.50          Median : 4446.0            \n                    Mean   :10177.43          Mean   : 7934.7            \n                    3rd Qu.:15132.29          3rd Qu.:11083.7            \n                    Max.   :82666.56          Max.   :94773.0            \n                                                                         \n #distance_to_tertiary_road #distance_to_city   #distance_to_town\n Min.   :    0.0            Min.   :    12.12   Min.   :   10    \n 1st Qu.:  261.5            1st Qu.: 20693.47   1st Qu.: 8319    \n Median : 1442.4            Median : 41935.41   Median :17866    \n Mean   : 3853.2            Mean   : 49220.21   Mean   :22977    \n 3rd Qu.: 5114.6            3rd Qu.: 71940.78   3rd Qu.:32230    \n Max.   :58874.0            Max.   :216727.25   Max.   :97759    \n                                                                 \n water_point_history rehab_priority     water_point_population\n Length:95008        Min.   :     0.0   Min.   :     0        \n Class :character    1st Qu.:   136.5   1st Qu.:   117        \n Mode  :character    Median :   522.0   Median :   413        \n                     Mean   :  1545.4   Mean   :  1246        \n                     3rd Qu.:  1527.0   3rd Qu.:  1169        \n                     Max.   :384595.0   Max.   :384595        \n                     NA's   :53109      NA's   :539           \n local_population_1km crucialness_score pressure_score    usage_capacity  \n Min.   :     0       Min.   :0.000     Min.   :  0.001   Min.   :  50.0  \n 1st Qu.:   597       1st Qu.:0.130     1st Qu.:  0.397   1st Qu.: 300.0  \n Median :  1756       Median :0.304     Median :  1.183   Median : 300.0  \n Mean   :  3723       Mean   :0.414     Mean   :  3.210   Mean   : 488.6  \n 3rd Qu.:  4393       3rd Qu.:0.628     3rd Qu.:  3.103   3rd Qu.:1000.0  \n Max.   :384595       Max.   :1.000     Max.   :776.970   Max.   :1000.0  \n NA's   :539          NA's   :6879      NA's   :6879                      \n  is_urban       days_since_report staleness_score latest_record \n Mode :logical   Min.   :  32      Min.   :23.13   Mode:logical  \n FALSE:75444     1st Qu.:2580      1st Qu.:41.49   TRUE:95008    \n TRUE :19564     Median :2687      Median :42.87                 \n                 Mean   :2564      Mean   :44.94                 \n                 3rd Qu.:2791      3rd Qu.:44.34                 \n                 Max.   :4645      Max.   :99.00                 \n                                                                 \n  location_id      cluster_size   #clean_country_id  #country_name     \n Min.   : 23741   Min.   :1.000   Length:95008       Length:95008      \n 1st Qu.:210091   1st Qu.:1.000   Class :character   Class :character  \n Median :241080   Median :1.000   Mode  :character   Mode  :character  \n Mean   :248184   Mean   :1.047                                        \n 3rd Qu.:270210   3rd Qu.:1.000                                        \n Max.   :407805   Max.   :4.000                                        \n                                                                       \n #water_source      #water_tech          #status             #adm2          \n Length:95008       Length:95008       Length:95008       Length:95008      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n    #adm3           #management           #adm1          \n Length:95008       Length:95008       Length:95008      \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character  \n                                                         \n                                                         \n                                                         \n                                                         \n New Georeferenced Column lat_deg_original lat_lon_deg        lon_deg_original\n Length:95008             Min.   : NA      Length:95008       Min.   : NA     \n Class :character         1st Qu.: NA      Class :character   1st Qu.: NA     \n Mode  :character         Median : NA      Mode  :character   Median : NA     \n                          Mean   :NaN                         Mean   :NaN     \n                          3rd Qu.: NA                         3rd Qu.: NA     \n                          Max.   : NA                         Max.   : NA     \n                          NA's   :95008                       NA's   :95008   \n public_data_source  converted             count   created_timestamp \n Length:95008       Length:95008       Min.   :1   Length:95008      \n Class :character   Class :character   1st Qu.:1   Class :character  \n Mode  :character   Mode  :character   Median :1   Mode  :character  \n                                       Mean   :1                     \n                                       3rd Qu.:1                     \n                                       Max.   :1                     \n                                                                     \n updated_timestamp           Geometry    \n Length:95008       POINT        :95008  \n Class :character   epsg:4326    :    0  \n Mode  :character   +proj=long...:    0  \n                                         \n                                         \n                                         \n                                         \n\n\n\n\n\n5. Importing Nigeria LGA level boundary data.\nNote that shapefile downloaded from geoBoundaries portal will be used.\n\nnga <- st_read(dsn = \"data\\\\geospatial\\\\geoBoundaries-NGA-ADM2-all\",\n               layer = \"geoBoundaries-NGA-ADM2\",\n               crs = 4326) \n\nReading layer `geoBoundaries-NGA-ADM2' from data source \n  `C:\\Yogendra345\\ISSS624_A01\\TakeHome_Ex02\\data\\geospatial\\geoBoundaries-NGA-ADM2-all' \n  using driver `ESRI Shapefile'\nSimple feature collection with 774 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2.668534 ymin: 4.273007 xmax: 14.67882 ymax: 13.89442\nGeodetic CRS:  WGS 84\n\n\n\nsummary(nga)\n\n  shapeName            Level             shapeID           shapeGroup       \n Length:774         Length:774         Length:774         Length:774        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n  shapeType                  geometry  \n Length:774         MULTIPOLYGON :774  \n Class :character   epsg:4326    :  0  \n Mode  :character   +proj=long...:  0  \n\n\n\nnga <- nga %>% select(shapeName)"
  },
  {
    "objectID": "TakeHome_Ex02/TakeHome_Ex02.html#point-in-polygon-overlay.",
    "href": "TakeHome_Ex02/TakeHome_Ex02.html#point-in-polygon-overlay.",
    "title": "Take Home Ex 2 : Regionalization of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods.",
    "section": "6. Point in Polygon Overlay.",
    "text": "6. Point in Polygon Overlay.\nAlthough wp_sf sf data frame consists of a field called #clean_adm2 which should provides the LGA name of the water point located. However, it is always a good practice to exercise more caution when dealing with data accuracy.\nIn this section, we are going to use a geoprocessing function (or commonly know as GIS analysis) called point-in-polygon overlay to transfer the attribute information in nga sf data frame into wp_sf data frame.\n\nwp_sf <- st_join(wp_sf, nga)\n\nNotice that a new field called shapeName has been added into wp_sf sf data frame. as shown below.\n\n\n\nFig-1."
  },
  {
    "objectID": "TakeHome_Ex02/TakeHome_Ex02.html#derive-new-variables-using-dplyr-package.",
    "href": "TakeHome_Ex02/TakeHome_Ex02.html#derive-new-variables-using-dplyr-package.",
    "title": "Take Home Ex 2 : Regionalization of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods.",
    "section": "7. Derive new variables using dplyr package.",
    "text": "7. Derive new variables using dplyr package.\n\n7.1 Exploratory Data Analysis.\nExploratory Data Analysis (EDA) is a crucial technique to understand insights of the data. freq function of funmodelling package helps to understand different types of water points as shown below.\nNote - Data Cleaning purpose, I have marked blank rows in column #status_clean as ‘Unknown_Blank’ to make it clear in the distribution graph below.\n\nfreq(data=wp_sf, \n     input = '#status_clean')\n\nWarning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\nof ggplot2 3.3.4.\nℹ The deprecated feature was likely used in the funModeling package.\n  Please report the issue at <https://github.com/pablo14/funModeling/issues>.\n\n\n\n\n\n                     #status_clean frequency percentage cumulative_perc\n1                       Functional     45883      48.29           48.29\n2                   Non-Functional     29385      30.93           79.22\n3                    Unknown_Blank     10656      11.22           90.44\n4      Functional but needs repair      4579       4.82           95.26\n5 Non-Functional due to dry season      2403       2.53           97.79\n6        Functional but not in use      1686       1.77           99.56\n7         Abandoned/Decommissioned       234       0.25           99.81\n8                        Abandoned       175       0.18           99.99\n9 Non functional due to dry season         7       0.01          100.00\n\n\n\n\n7.2 Extracting Functional Water Points.\nIn the code chunk below, filter() of dplyr is used to select functional water points.\n\nwpt_functional <- wp_sf %>%\n  filter(`#status_clean` %in%\n           c(\"Functional\", \n             \"Functional but not in use\",\n             \"Functional but needs repair\"))\n\nHere we run freq( ) function of funmodelling package to understand distribution of ‘functional’ water points.\n\nfreq(data=wpt_functional, \n     input = '#status_clean')\n\n\n\n\n                #status_clean frequency percentage cumulative_perc\n1                  Functional     45883      87.99           87.99\n2 Functional but needs repair      4579       8.78           96.77\n3   Functional but not in use      1686       3.23          100.00\n\n\n\n\n\n\n\n7.3 Extracting non-functional water point.\nIn the code chunk shown below, filter() of dplyr is used to select non-functional water points.\n\nwpt_nonfunctional <- wp_sf %>% \n                 filter(`#status_clean` %in%\n                          c(\"Abandoned/Decommissioned\",\n                             \"Abandoned\",\n                             \"Non-Functional\",\n                             \"Non functional due to dry season\",\n                             \"Non-Functional due to dry season\"\n                            ))\n\nLet us understand distribution of ‘Non-functional’ water-points in graphical format.\n\nfreq(data=wpt_nonfunctional, \n     input = '#status_clean')\n\n\n\n\n                     #status_clean frequency percentage cumulative_perc\n1                   Non-Functional     29385      91.25           91.25\n2 Non-Functional due to dry season      2403       7.46           98.71\n3         Abandoned/Decommissioned       234       0.73           99.44\n4                        Abandoned       175       0.54           99.98\n5 Non functional due to dry season         7       0.02          100.00\n\n\n\n\n\n\n\n7.3 Extracting water point with ‘Unknown’ class.\nIn the code chunk below, filter() of dplyr is used to select water points with unknown status.\n\nwpt_unknown <- wp_sf %>%\n  filter(`#status_clean` == \"Unknown\")\n\nConclusion –> There are no water points with “Unknown” status.\n\n\n7.4 Understand distribution of water point technology.\nLet us plot the distribution of ‘#water_tech_category’ using freq() function.\nNote - We can choose ’#water_tech_clean” column also if we want to further explore types of ‘Hand-Pumps’ as shown below. However for this exercise purpose, I will restrict myself to ‘#water_tech_category’ only & following graph is created just for knowledge purpose.\n\nfreq(data = wp_sf,\n     input = '#water_tech_clean')\n\n\n\n\n            #water_tech_clean frequency percentage cumulative_perc\n1                   Hand Pump     58720      61.81           61.81\n2             Mechanized Pump     25240      26.57           88.38\n3                     Unknown     10055      10.58           98.96\n4                    Tapstand       553       0.58           99.54\n5     Mechanized Pump - Solar       401       0.42           99.96\n6  Hand Pump - India Mark III        19       0.02           99.98\n7         Hand Pump - Afridev         7       0.01           99.99\n8   Hand Pump - India Mark II         7       0.01          100.00\n9    Mechanized Pump - Diesel         3       0.00          100.00\n10           Hand Pump - Mono         1       0.00          100.00\n11      Hand Pump - Rope Pump         1       0.00          100.00\n12            Rope and Bucket         1       0.00          100.00\n\n\n\nfreq(data = wp_sf,\n     input = '#water_tech_category')\n\n\n\n\n  #water_tech_category frequency percentage cumulative_perc\n1            Hand Pump     58755      61.84           61.84\n2      Mechanized Pump     25644      26.99           88.83\n3              Unknown     10055      10.58           99.41\n4             Tapstand       553       0.58           99.99\n5      Rope and Bucket         1       0.00          100.00\n\n\n\nwpt_handpump <- wp_sf %>%\n  filter(`#water_tech_category` %in%\n           c(\"Hand Pump - Afridev\",\n             \"Hand Pump - Vergnet\",\n             \"Hand Pump\",\n             \"Hand Pump - Nira\",\n             \"Hand Pump - India Mark II\",\n             \"Hand Pump - India Mark III\",\n             \"Hand Pump - EMAS\",\n             \"Hand Pump - India Mark\",\n             \"Hand Pump - PHE-6\",\n             \"Hand Pump - Mono\",\n             \"Hand Pump - Climax\",\n             \"Hand Pump - Rope Pump\",\n             \"Hand Pump - Tara\",\n             \"Hand Pump - Consallen\",\n             \"Hand Pump - Kardia\",\n             \"Hand Pump - SWN 80\",\n             \"Hand Pump - PB Mark II\",\n             \"Hand Pump - Walimi\",\n             \"Hand Pump - Blue\",\n             \"Hand Pump - Malda\",\n             \"Hand Pump - Inkar\"))\n\nLet us see the distribution of the ‘Hand Pumps’\n\nfreq(data = wpt_handpump,\n     input = '#water_tech_clean')\n\n\n\n\n           #water_tech_clean frequency percentage cumulative_perc\n1                  Hand Pump     58720      99.94           99.94\n2 Hand Pump - India Mark III        19       0.03           99.97\n3        Hand Pump - Afridev         7       0.01           99.98\n4  Hand Pump - India Mark II         7       0.01           99.99\n5           Hand Pump - Mono         1       0.00           99.99\n6      Hand Pump - Rope Pump         1       0.00          100.00"
  },
  {
    "objectID": "TakeHome_Ex02/TakeHome_Ex02.html#performing-point-in-polygon-count.",
    "href": "TakeHome_Ex02/TakeHome_Ex02.html#performing-point-in-polygon-count.",
    "title": "Take Home Ex 2 : Regionalization of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods.",
    "section": "8. Performing Point-in-Polygon Count.",
    "text": "8. Performing Point-in-Polygon Count.\n\nnga_wp_sf <- wp_sf %>% \n  mutate(`total wpt` = lengths(\n    st_intersects(wp_sf, wp_sf))) %>%\n  mutate(`wpt functional` = lengths(\n    st_intersects(wp_sf, wpt_functional))) %>%\n  mutate(`wpt non-functional` = lengths(\n    st_intersects(wp_sf, wpt_nonfunctional)))"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS624_A01",
    "section": "",
    "text": "If I want to describe it in one line then I can say -\nGeospatial Analytics is a Statistical Analysis of Geographical Information.\n\n\n\nInternet and mobile phone revolution enabled easy access of GPS enabled data capturing devices to common man. There is therefore associated increase in demand for explicit spatial analysis of such data. Such analytics help policy makers, decision makers to understand underlying trends of socio-economic activities. If one wants to understand various aspects as mentioned below, then Geospatial Analytics is the key.\n\nAvailability of affordable housing\nAvailability of pre-schools, day-care facilities etc.\nTransportation (Urban and Transport Planning, Logistics etc.)\nCrime\nPollution\nGeo-marketing (store location analysis)\nEmergency Planning\nWater resources analysis\nPandemic Analysis\n\n\n\n\nEPSG stands for European Petroleum Survey Group and is an organization that maintains a geodetic parameter database with standard codes, the EPSG codes, for coordinate systems, datums, spheroids, units and such alike. Additionally, this database contains the parameters for these objects or - if they cannot easily be expressed as values - at least references to where such parameters can be found. \nEvery geographic object (coordinate system, spheroid, unit, etc.) gets assigned a unique number. The database is under active maintenance.\n\nThe coordinate system with its EPSG code is usually stored in the source file (GeoTIFF, Shapefile, LandXML, etc.)\n\n\n\nWorld Geodetic System 84 (WGS 84) is based on a consistent set of constants and model parameters that describe the Earth’s size, shape, and gravity and geomagnetic fields. WGS84 consists of a reference ellipsoid, a standard coordinate system, altitude data, and a geoid. The error of WGS84 is believed to be less than 2 centimeters to the center mass."
  },
  {
    "objectID": "TakeHome_Ex02/TakeHome_Ex02.html#section-1",
    "href": "TakeHome_Ex02/TakeHome_Ex02.html#section-1",
    "title": "Take Home Ex 2 : Regionalization of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods.",
    "section": "",
    "text": "2. Approach.\nAs we want to delineate homogeneous region of Nigeria by using geographically referenced multivariate waterpoint attributes data, we will be conducting following analysis -\n\nHierarchical cluster analysis\nK means cluster analysis\nSpatially constrained cluster analysis using SKATER approach\nSpatially constrained cluster analysis using ClustGeo method\n\nTo achieve above mentioned objectives, we will perform following steps.\n\nImport required packages in R environment.\nImporting required .csv and shapefile into R using sf package.\nDeriving the proportion of functional and non-functional water point at LGA level using appropriate tidyr and dplyr methods.\nCombining the geospatial and aspatial data frame into simple feature data frame.\nDelineating water point measures functional regions by using conventional hierarchical clustering.\nDelineating water point measures functional regions by using spatially constrained clustering algorithms.\nThematic Mapping - Plotting maps to show the water points measures derived by using appropriate statistical graphics and choropleth mapping technique.\nAnalytical Mapping - Plotting functional regions delineated by using both non-spatially constrained and spatially constrained clustering algorithms."
  },
  {
    "objectID": "TakeHome_Ex02/TakeHome_Ex02_Updated.html",
    "href": "TakeHome_Ex02/TakeHome_Ex02_Updated.html",
    "title": "TakeHome_Ex02_Updated : Regionalization by clustering of multivariate Water point attributes in Nigeria",
    "section": "",
    "text": "In this take-home exercise we are going to regionalise Nigeria.The process of creating regions is called regionalisation. A regionalisation is a special kind of clustering where the objective is to group observations which are -\n\nSimilar in their statistical attributes &\nSimilar in their spatial location.\n\nWe are going to regionalise Nigeria by using following measures :\n\nTotal number of functional water points.\nTotal number of nonfunctional water points.\nPercentage of functional water points.\nPercentage of non-functional water points.\nPercentage of main water point technology (i.e. Hand Pump).\nPercentage of usage capacity.\nPercentage of rural water points."
  },
  {
    "objectID": "TakeHome_Ex02/TakeHome_Ex02_Updated.html#approach.",
    "href": "TakeHome_Ex02/TakeHome_Ex02_Updated.html#approach.",
    "title": "TakeHome_Ex02_Updated : Regionalization by clustering of multivariate Water point attributes in Nigeria",
    "section": "2. Approach.",
    "text": "2. Approach.\nAs we want to delineate homogeneous region of Nigeria by using geographically referenced multivariate water point attributes data, we will be conducting following analysis -\n\nHierarchical cluster analysis\nK means cluster analysis\nSpatially constrained cluster analysis using SKATER approach\nSpatially constrained cluster analysis using ClustGeo method\n\nTo achieve above mentioned objectives, we will perform following steps.\n\nImport required packages in R environment.\nImporting required .csv and shapefile into R using sf package.\nDeriving the proportion of functional and non-functional water point at LGA level using appropriate tidyr and dplyr methods.\nCombining the geospatial and aspatial data frame into simple feature data frame.\nDelineating water point measures functional regions by using conventional hierarchical clustering.\nDelineating water point measures functional regions by using spatially constrained clustering algorithms.\nThematic Mapping - Plotting maps to show the water points measures derived by using appropriate statistical graphics and choropleth mapping technique.\nAnalytical Mapping - Plotting functional regions delineated by using both non-spatially constrained and spatially constrained clustering algorithms."
  },
  {
    "objectID": "TakeHome_Ex02/TakeHome_Ex02_Updated.html#installing-and-loading-required-packages.",
    "href": "TakeHome_Ex02/TakeHome_Ex02_Updated.html#installing-and-loading-required-packages.",
    "title": "TakeHome_Ex02_Updated : Regionalization by clustering of multivariate Water point attributes in Nigeria",
    "section": "3. Installing and loading required packages.",
    "text": "3. Installing and loading required packages.\nLet us install necessary R packages into R and launch these R packages into R environment.\nThe R packages needed for this exercise are as follows :\n\nSpatial data handling using sf, rgdal and spdep.\nAttribute data handling using tidyverse, especially readr, ggplot2 and dplyr. tidyverse for importing and processing non-spatial data. In this exercise, readr package will be used for importing wkt data and dplyr package will be used to wrangling the data.\nChoropleth mapping using tmap.\nMultivariate data visualisation and analysis using coorplot, ggpubr, and heatmaply.\nCluster analysis cluster and ClustGeo.\n\nThe code chunk below installs and launches these R packages into R environment.\n\npacman::p_load(rgdal, spdep, tmap, sf, ClustGeo, funModeling,knitr,\n               ggpubr, cluster, factoextra, NbClust,\n               heatmaply, corrplot, psych, tidyverse, GGally)"
  },
  {
    "objectID": "TakeHome_Ex02/TakeHome_Ex02_Updated.html#importing-data.",
    "href": "TakeHome_Ex02/TakeHome_Ex02_Updated.html#importing-data.",
    "title": "TakeHome_Ex02_Updated : Regionalization by clustering of multivariate Water point attributes in Nigeria",
    "section": "4. Importing Data.",
    "text": "4. Importing Data.\n\n4.1 Importing Water point Data.\nData used are imported from WPdx Global Data Repositories in csv format and from geoBoundaries in shape file format.\n\n4.1.1 Importing Geospatial Data.\n\nnga <- st_read(dsn = \"data\\\\geospatial\\\\geoBoundaries-NGA-ADM2-all\",\n               layer = \"geoBoundaries-NGA-ADM2\",\n               crs = 4326) \n\nReading layer `geoBoundaries-NGA-ADM2' from data source \n  `C:\\Yogendra345\\ISSS624_A01\\TakeHome_Ex02\\data\\geospatial\\geoBoundaries-NGA-ADM2-all' \n  using driver `ESRI Shapefile'\nSimple feature collection with 774 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2.668534 ymin: 4.273007 xmax: 14.67882 ymax: 13.89442\nGeodetic CRS:  WGS 84\n\n\nNote - CRS stands forCoordinate Reference System in EPSG format. EPSG: 4326 is wgs84 Geographic Coordinate System.\n\n\n4.1.2 Importing Aspatial Data.\nFollowing chunk of code imports .csv data filtered for Nigeria. Here we use filter() command of dplyr package to select Nigerial records only.\n\nwp_nga <- read_csv(\"data\\\\aspatial\\\\Water_Point.csv\") %>%\n  filter(`#clean_country_name` == \"Nigeria\")\n\nRows: 1048575 Columns: 70\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (44): #source, #report_date, #status_id, #water_source_clean, #water_sou...\ndbl (24): row_id, #lat_deg, #lon_deg, #install_year, #rehab_year, #fecal_col...\nlgl  (2): is_urban, latest_record\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n4.1.3 Creating Simple feature data frame from an aspatial and geospatial data frame.\n\nwp_nga_sf <- st_as_sf(wp_nga, \n                       coords = c(\"#lat_deg\", \"#lon_deg\"),\n                       crs=4326) %>%\n  st_transform(crs = 26391)\n\nNote - EPSG: 26391 is Nigeria’s SVY21 Projected Coordinate System.\nst_transform() of sf package is used to reproject nga from one coordinate system(WGS 84) to another coordinate system(ESPG) mathemetically.\n\nnga_sf <- st_transform(nga,crs = 26391)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This webpage is created by Yogendra as a part of his Applied Geospatial Analytics Course at Singapore Management University.\nHe can be contacted at yogendrass.2022@mitb.smu.edu.sg\nLinkedIn https://www.linkedin.com/in/yogendra-shinde-746864a/"
  },
  {
    "objectID": "TakeHome_Ex02/TakeHome_Ex02_Updated.html#data-pre-processing.",
    "href": "TakeHome_Ex02/TakeHome_Ex02_Updated.html#data-pre-processing.",
    "title": "TakeHome_Ex02_Updated : Regionalization by clustering of multivariate Water point attributes in Nigeria",
    "section": "5. Data Pre-processing.",
    "text": "5. Data Pre-processing.\nReferring to the work done by Ong Zhi Rong Jordan (our MITB classmate).Link to Jordan’s work, here I am going to do some data wrangling to remove duplicates.\n\nduplicated_area <- nga_sf %>% \n  mutate(dup_shapeName = duplicated(shapeName)) %>% \n  filter(dup_shapeName)\nduplicated_area$shapeName\n\n[1] \"Bassa\"    \"Ifelodun\" \"Irepodun\" \"Nasarawa\" \"Obi\"      \"Surulere\"\n\n\nThe below chunk assigns the right shape names corresponding to index values\n\nnga_sf$shapeName[c(94,95,304,305,355,356,519,546,547,693,694)] <- \n  c(\"Bassa (Kogi)\",\"Bassa (Plateau)\",                                                  \"Ifelodun (Kwara)\",\"Ifelodun (Osun)\",                                              \"Irepodun (Kwara)\",\"Irepodun (Osun)\",                                              \"Nassarawa\",\"Obi (Benue)\",\"Obi(Nasarawa)\",                                         \"Surulere (Lagos)\",\"Surulere (Oyo)\")\n\n\nduplicated_area <- nga_sf %>% \n  mutate(dup_shapeName = duplicated(shapeName)) %>% \n  filter(dup_shapeName)\nduplicated_area$shapeName\n\ncharacter(0)\n\n\nThe output is zero meaning there are no duplicate values.\n\n5.1 Point-in-Polygon - Join aspatial and geospatial data.\nLet us perform a spatial operation Point-in-Polygon. It is an operation in which points from one feature dataset are overlaid on the polygons of another to determine which points are contained within the polygons. Here we are going to transfer the attribute information in wp_nga_sf data frame into wp_sf data frame using st_join()function.\n\n\nwp_sf <- st_join(wp_nga_sf, nga_sf)\n\n\n5.2 Measures used for regionalisation.\nBased on the WPdx standard, following measures are chosen -\n\nTable-1\n\n\n\n\n\n\n\nMeasure\ncol_id\nDescription\n\n\n\n\nTotal number of functional water points\n#status_clean\nNo. of functional waterpoints are derived from this categorised column.\n\n\nTotal number of nonfunctional water points\n#status_clean\nNo. of non- functional waterpoints are derived from this categorised column.\n\n\nPercentage of functional water points\n#status_clean\nPercentage of functional waterpoints are derived from the already derived columns.\n\n\nPercentage of non-functional water points\n#status_clean\nPercentage of non-functional waterpoints are derived from the already derived columns.\n\n\nPercentage of main water point technology\n#water_tech_clean\nDescribe the system being used to transport the water from the source to the point of collection (e.g. Hand pump)\n\n\nPercentage of usage capacity\nusage_cap\nRecommended maximum users per water point. For eg. 250 people per tap [tapstand, kiosk, rainwater catchment] 500 people per hand pump.\n\n\nPercentage of rural water points\nis_urban\nIs in an urban area as defined by EU Global Human Settlement Database TRUE/FALSE - urban/rural.\n\n\nPercentage of crucial waterpoints\ncrucialness_score\nCrucialness score shows how important the water point would be if it were to be rehabilitated.\n\n\nPercentage of stale water points\nstaleness_score\nThe staleness score represents the depreciation of the point’s relevance. Varies between 0 and 100. Higher the value more the staleness.\n\n\n\n\n\n\n\n5.2.1 - Renaming Columns.\nLet us rename some of the column names which begins with # for ease of use by using rename() function.\n\nwp_sf <-wp_sf %>% \n  rename (\"water_tech\" = \"#water_tech_clean\") %>%\n  rename (\"status_clean\" = \"#status_clean\") %>%\n  rename (\"status_id\" = \"#status_id\")\n\n\n\n5.2.2 Replacing NA values.\nNow we are replacing the NA values in the status_clean column by Unknown.\n\nwp_nga <- wp_sf  %>%\n  mutate(status_cle = replace_na(status_clean, \"Unknown\"))\n\n\n\n5.2.3 Recoding the values.\nThere are water technology values mentioned along with the manufacturer like India Mark III, Afridev. We will recode all those manufacturers into one class as Hand Pump using recode() function.\n\nwp_nga <-wp_nga %>% \nmutate(wpt_tech=recode(water_tech, \n                     'Hand Pump - Rope Pump'='Hand Pump',\n                     'Hand Pump - India Mark III'='Hand Pump',\n                     'Hand Pump - Afridev'='Hand Pump',\n                     'Hand Pump'='Hand Pump',\n                     'Hand Pump - India Mark II'='Hand Pump',\n                     'Hand Pump - Mono'= 'Hand Pump'))\n\n\n\n5.2.4 Extracting Funtional, Non-Functional and Unknown water points.\n\nwpt_functional <- wp_nga %>%\n  filter(status_cle %in%\n           c(\"Functional\", \n             \"Functional but not in use\",\n             \"Functional but needs repair\"))\n\nwpt_nonfunctional <- wp_nga %>%\n  filter(status_cle %in%\n           c(\"Abandoned/Decommissioned\", \n             \"Abandoned\",\n             \"Non-Functional\",\n             \"Non functional due to dry season\",\n             \"Non-Functional due to dry season\"))\n\nwpt_unknown <- wp_nga %>%\n  filter(status_cle == \"Unknown\")\n\nhandpump <- wp_nga %>%\n  filter(wpt_tech == \"Hand Pump\")\n\nusecap_lessthan1000 <- wp_nga %>%\n  filter(usage_capacity < 1000)\n\nusecap_greatthan1000 <- wp_nga %>%\n  filter(usage_capacity >= 1000)\n\nwpt_rural <- wp_nga %>%\n  filter(is_urban == FALSE)\n\ncrucial_score <- wp_nga %>%\n  filter(crucialness_score >= 0.5)\n\nstale_score <- wp_nga %>%\n  filter(staleness_score >= 50)\n\nWe have to perform 2 steps to calculate the absolue numbers of waterpoint attributes in each division.\n\nLet us identify no. of water points located inside each division by using st_intersects().\nNext, let us calculate numbers of hand-pumps that fall inside each division by using length() function.\n\n\nnga_wp <- nga_sf %>% \n  mutate(total_wpt = lengths(\n    st_intersects(nga_sf, wp_nga))) %>%\n  mutate(wpt_functional = lengths(\n    st_intersects(nga_sf, wpt_functional))) %>%\n  mutate(wpt_nonfunctional = lengths(\n    st_intersects(nga_sf, wpt_nonfunctional))) %>%\n  mutate(wpt_unknown = lengths(\n    st_intersects(nga_sf, wpt_unknown)))%>%\n  mutate(handpump = lengths(\n    st_intersects(nga_sf, handpump)))%>%\n  mutate(cap_lessthan1000 = lengths(\n    st_intersects(nga_sf, usecap_lessthan1000)))%>%\n  mutate(cap_greatthan1000 = lengths(\n    st_intersects(nga_sf, usecap_greatthan1000)))%>%\n  mutate(wpt_rural = lengths(\n    st_intersects(nga_sf, wpt_rural)))%>%\n  mutate(wpt_crucial = lengths(\n    st_intersects(nga_sf, crucial_score)))%>%\n  mutate(wpt_stale = lengths(\n    st_intersects(nga_sf, stale_score)))\n\nCalculate what is the overall proportion with respect to the total no. of waterpoints\n\nnga_wp_clus <- nga_wp %>%\n  mutate(pct_functional = wpt_functional/total_wpt) %>%\n  mutate(pct_nonfunctional = wpt_nonfunctional/total_wpt) %>%\n  mutate(pct_handpump = handpump/total_wpt) %>%\n  mutate(pct_capless1000 = cap_lessthan1000/total_wpt) %>%\n  mutate(pct_capmore1000 = cap_greatthan1000/total_wpt) %>%\n  mutate(pct_rural = wpt_rural/total_wpt) %>%\n  mutate(pct_crucial = wpt_crucial/total_wpt) %>%\n  mutate(pct_stale = wpt_stale/total_wpt) \n\n\n\n\n\n5.3 Create rds file\nIn order to manage the storage data efficiently, we are saving the final data frame in rds format.\n\nwrite_rds(nga_wp_clus, \"data/nga_wp_clus.rds\")\nwrite_rds(wpt_functional, \"data/wpt_functional.rds\")\nwrite_rds(wpt_nonfunctional, \"data/wpt_nonfunctional.rds\")\nwrite_rds(wp_nga, \"data/wp_nga.rds\")"
  },
  {
    "objectID": "HandsOn_Exercise4/HandsOn_Ex04.html",
    "href": "HandsOn_Exercise4/HandsOn_Ex04.html",
    "title": "HandsOn_Ex04 : Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method.",
    "section": "",
    "text": "Geographically weighted regression (GWR) is a spatial statistical technique that takes non-stationary variables into consideration (e.g., climate; demographic factors; physical environment characteristics) and models the local relationships between these independent variables and an outcome of interest (also known as dependent variable). In this hands-on exercise, we will learn how to build hedonic pricing models by using GWR methods. The dependent variable is the resale prices of condominium in 2015. The independent variables are divided into either structural and locational.\n\n\n\n\n\nAs defined by Cambridge dictionary, the word Hedonic means “connected with feelings of pleasure“\nHedonic pricing is a model that identifies price factors according to the premise that price is determined both by internal characteristics of the good being sold and external factors affecting it.\nA hedonic pricing model is often used to estimate quantitative values for environmental or ecosystem services that directly affect market prices for homes. This method of valuation can require a strong degree of statistical expertise and model specification, following a period of data collection.\n\n\n\n\nHedonic pricing identifies the internal and external factors and characteristics that affect an item’s price in the market.\nHedonic pricing is most often seen in the housing market, since real estate prices are determined by the characteristics of the property itself as well as the neighborhood or environment within which it exists.\nHedonic pricing captures a consumer’s willingness to pay for what they perceive are environmental differences that add or detract from the intrinsic value of an asset or property.\nIn simple words, ‘Hedonic pricing’ uses regression to see which factors matter the most and each’s relative importance."
  },
  {
    "objectID": "HandsOn_Exercise4/HandsOn_Ex04.html#the-data.",
    "href": "HandsOn_Exercise4/HandsOn_Ex04.html#the-data.",
    "title": "HandsOn_Ex04 : Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method.",
    "section": "2. The Data.",
    "text": "2. The Data.\nTwo data sets will be used in this model building exercise, they are:\n\nURA Master Plan subzone boundary in shapefile format (i.e. MP14_SUBZONE_WEB_PL)\ncondo_resale_2015 in csv format (i.e. condo_resale_2015.csv)"
  },
  {
    "objectID": "HandsOn_Exercise4/HandsOn_Ex04.html#getting-started.",
    "href": "HandsOn_Exercise4/HandsOn_Ex04.html#getting-started.",
    "title": "HandsOn_Ex04 : Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method.",
    "section": "3. Getting Started.",
    "text": "3. Getting Started.\nBefore we get started, it is important for us to install the necessary R packages into R and launch these R packages into R environment.\nThe R packages needed for this exercise are as follows :\n\nR package for building OLS and performing diagnostics tests\n\nolsrr\n\nR package for calibrating geographical weighted family of models\n\nGWmodel\n\nR package for multivariate data visualisation and analysis\n\ncorrplot\n\nSpatial data handling\n\nsf\n\nAttribute data handling\n\ntidyverse, especially readr, ggplot2 and dplyr\n\nChoropleth mapping\n\ntmap\n\n\nThe code chunks below installs and launches these R packages into R environment.\n\npacman::p_load(olsrr, corrplot, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary)\n\nI received error while installing gtsummary. Hence trying to install this package again.\n\ninstall.packages(\"gtsummary\")\n\nWarning: package 'gtsummary' is in use and will not be installed"
  },
  {
    "objectID": "HandsOn_Exercise4/HandsOn_Ex04.html#a-short-note-about-gwmodel.",
    "href": "HandsOn_Exercise4/HandsOn_Ex04.html#a-short-note-about-gwmodel.",
    "title": "HandsOn_Ex04 : Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method.",
    "section": "4. A short note about GWmodel.",
    "text": "4. A short note about GWmodel.\nGWmodel package provides a collection of localized spatial statistical methods, namely :\n\nGW summary statistics,\nGW principal components analysis,\nGW discriminant analysis and\nVarious forms of GW regression; some of which are provided in basic and robust (outlier resistant) forms. Commonly, outputs or parameters of the GWmodel are mapped to provide a useful exploratory tool, which can often precede (and direct) a more traditional or sophisticated statistical analysis."
  },
  {
    "objectID": "HandsOn_Exercise4/HandsOn_Ex04.html#geospatial-data-wrangling.",
    "href": "HandsOn_Exercise4/HandsOn_Ex04.html#geospatial-data-wrangling.",
    "title": "HandsOn_Ex04 : Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method.",
    "section": "5. Geospatial Data Wrangling.",
    "text": "5. Geospatial Data Wrangling.\n\n5.1 Importing geospatial data\nThe geospatial data used in this hands-on exercise is called MP14_SUBZONE_WEB_PL. It is in ESRI shapefile format. The shapefile consists of URA Master Plan 2014’s planning sub-zone boundaries. Polygon features are used to represent these geographic boundaries. The GIS data is in svy21 projected coordinates systems.\nThe code chunk below is used to import MP_SUBZONE_WEB_PL shapefile by using st_read() of sf packages.\n\nmpsz = st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Yogendra345\\ISSS624_A01\\HandsOn_Exercise4\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nThe report above shows that the R object used to contain the imported MP14_SUBZONE_WEB_PL shapefile is called mpsz and it is a simple feature object. The geometry type is multipolygon. it is also important to note that mpsz simple feature object does not have EPSG information.\n\n\n5.2 Updating CRS information.\nThe code chunk below updates the newly imported mpsz with the correct ESPG code (i.e. 3414)\nNote - Singapore has a special coordinate system called SVY21. This converts the special coordinates to lat/lng.\n\nmpsz_svy21 <- st_transform(mpsz, 3414)\n\nAfter transforming the projection metadata, you can varify the projection of the newly transformed mpsz_svy21 by using st_crs() of sf package.\nThe code chunk below will be used to verify the newly transformed mpsz_svy21\n\nst_crs(mpsz_svy21)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\nNotice that the EPSG: is indicated as 3414 now.\nNext, we will reveal the extent of mpsz_svy21 by using st_bbox() of sf package.\n\nst_bbox(mpsz_svy21) #view extent\n\n     xmin      ymin      xmax      ymax \n 2667.538 15748.721 56396.440 50256.334"
  },
  {
    "objectID": "HandsOn_Exercise4/HandsOn_Ex04.html#aspatial-data-wrangling.",
    "href": "HandsOn_Exercise4/HandsOn_Ex04.html#aspatial-data-wrangling.",
    "title": "HandsOn_Ex04 : Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method.",
    "section": "6. Aspatial Data Wrangling.",
    "text": "6. Aspatial Data Wrangling.\n\n6.1 Importing the aspatial data.\nThe condo_resale_2015 is in csv file format. The codes chunk below uses read_csv() function of readr package to import condo_resale_2015 into R as a tibble data frame called condo_resale.\n\ncondo_resale = read_csv(\"data/aspatial/Condo_resale_2015.csv\")\n\nNew names:\nRows: 1436 Columns: 49\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" dbl\n(23): LATITUDE, LONGITUDE, POSTCODE, SELLING_PRICE, AREA_SQM, AGE, PROX_... lgl\n(26): ...24, ...25, ...26, ...27, ...28, ...29, ...30, ...31, ...32, ......\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...24`\n• `` -> `...25`\n• `` -> `...26`\n• `` -> `...27`\n• `` -> `...28`\n• `` -> `...29`\n• `` -> `...30`\n• `` -> `...31`\n• `` -> `...32`\n• `` -> `...33`\n• `` -> `...34`\n• `` -> `...35`\n• `` -> `...36`\n• `` -> `...37`\n• `` -> `...38`\n• `` -> `...39`\n• `` -> `...40`\n• `` -> `...41`\n• `` -> `...42`\n• `` -> `...43`\n• `` -> `...44`\n• `` -> `...45`\n• `` -> `...46`\n• `` -> `...47`\n• `` -> `...48`\n• `` -> `...49`\n\n\nAfter importing the data file into R, it is important for us to examine if the data file has been imported correctly.\nThe codes chunks below uses glimpse() to display the data structure of will do the job.\n\nglimpse(condo_resale)\n\nRows: 1,436\nColumns: 49\n$ LATITUDE             <dbl> 1.287145, 1.328698, 1.313727, 1.308563, 1.321437,…\n$ LONGITUDE            <dbl> 103.7802, 103.8123, 103.7971, 103.8247, 103.9505,…\n$ POSTCODE             <dbl> 118635, 288420, 267833, 258380, 467169, 466472, 3…\n$ SELLING_PRICE        <dbl> 3000000, 3880000, 3325000, 4250000, 1400000, 1320…\n$ AREA_SQM             <dbl> 309, 290, 248, 127, 145, 139, 218, 141, 165, 168,…\n$ AGE                  <dbl> 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22, 6,…\n$ PROX_CBD             <dbl> 7.941259, 6.609797, 6.898000, 4.038861, 11.783402…\n$ PROX_CHILDCARE       <dbl> 0.16597932, 0.28027246, 0.42922669, 0.39473543, 0…\n$ PROX_ELDERLYCARE     <dbl> 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.121…\n$ PROX_URA_GROWTH_AREA <dbl> 6.618741, 7.505109, 6.463887, 4.906512, 6.410632,…\n$ PROX_HAWKER_MARKET   <dbl> 1.76542207, 0.54507614, 0.37789301, 1.68259969, 0…\n$ PROX_KINDERGARTEN    <dbl> 0.05835552, 0.61592412, 0.14120309, 0.38200076, 0…\n$ PROX_MRT             <dbl> 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.528…\n$ PROX_PARK            <dbl> 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.116…\n$ PROX_PRIMARY_SCH     <dbl> 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.709…\n$ PROX_TOP_PRIMARY_SCH <dbl> 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.709…\n$ PROX_SHOPPING_MALL   <dbl> 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.307…\n$ PROX_SUPERMARKET     <dbl> 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.581…\n$ PROX_BUS_STOP        <dbl> 0.10336166, 0.28673408, 0.28504777, 0.29872340, 0…\n$ NO_Of_UNITS          <dbl> 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34, 3…\n$ FAMILY_FRIENDLY      <dbl> 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD             <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ ...24                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...25                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...26                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...27                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...28                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...29                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...30                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...31                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...32                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...33                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...34                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...35                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...36                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...37                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...38                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...39                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...40                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...41                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...42                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...43                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...44                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...45                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...46                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...47                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...48                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ...49                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n\n\n\nhead(condo_resale$LONGITUDE) #see the data in XCOORD column\n\n[1] 103.7802 103.8123 103.7971 103.8247 103.9505 103.9386\n\n\n\nhead(condo_resale$LATITUDE) #see the data in YCOORD column\n\n[1] 1.287145 1.328698 1.313727 1.308563 1.321437 1.314198\n\n\nNext, summary() of base R is used to display the summary statistics of cond_resale tibble data frame.\n\nsummary(condo_resale)\n\n    LATITUDE       LONGITUDE        POSTCODE      SELLING_PRICE     \n Min.   :1.240   Min.   :103.7   Min.   : 18965   Min.   :  540000  \n 1st Qu.:1.309   1st Qu.:103.8   1st Qu.:259849   1st Qu.: 1100000  \n Median :1.328   Median :103.8   Median :469298   Median : 1383222  \n Mean   :1.334   Mean   :103.8   Mean   :440439   Mean   : 1751211  \n 3rd Qu.:1.357   3rd Qu.:103.9   3rd Qu.:589486   3rd Qu.: 1950000  \n Max.   :1.454   Max.   :104.0   Max.   :828833   Max.   :18000000  \n    AREA_SQM          AGE           PROX_CBD       PROX_CHILDCARE    \n Min.   : 34.0   Min.   : 0.00   Min.   : 0.3869   Min.   :0.004927  \n 1st Qu.:103.0   1st Qu.: 5.00   1st Qu.: 5.5574   1st Qu.:0.174481  \n Median :121.0   Median :11.00   Median : 9.3567   Median :0.258135  \n Mean   :136.5   Mean   :12.14   Mean   : 9.3254   Mean   :0.326313  \n 3rd Qu.:156.0   3rd Qu.:18.00   3rd Qu.:12.6661   3rd Qu.:0.368293  \n Max.   :619.0   Max.   :37.00   Max.   :19.1804   Max.   :3.465726  \n PROX_ELDERLYCARE  PROX_URA_GROWTH_AREA PROX_HAWKER_MARKET PROX_KINDERGARTEN \n Min.   :0.05451   Min.   :0.2145       Min.   :0.05182    Min.   :0.004927  \n 1st Qu.:0.61254   1st Qu.:3.1643       1st Qu.:0.55245    1st Qu.:0.276345  \n Median :0.94179   Median :4.6186       Median :0.90842    Median :0.413385  \n Mean   :1.05351   Mean   :4.5981       Mean   :1.27987    Mean   :0.458903  \n 3rd Qu.:1.35122   3rd Qu.:5.7550       3rd Qu.:1.68578    3rd Qu.:0.578474  \n Max.   :3.94916   Max.   :9.1554       Max.   :5.37435    Max.   :2.229045  \n    PROX_MRT         PROX_PARK       PROX_PRIMARY_SCH  PROX_TOP_PRIMARY_SCH\n Min.   :0.05278   Min.   :0.02906   Min.   :0.07711   Min.   :0.07711     \n 1st Qu.:0.34646   1st Qu.:0.26211   1st Qu.:0.44024   1st Qu.:1.34451     \n Median :0.57430   Median :0.39926   Median :0.63505   Median :1.88213     \n Mean   :0.67316   Mean   :0.49802   Mean   :0.75471   Mean   :2.27347     \n 3rd Qu.:0.84844   3rd Qu.:0.65592   3rd Qu.:0.95104   3rd Qu.:2.90954     \n Max.   :3.48037   Max.   :2.16105   Max.   :3.92899   Max.   :6.74819     \n PROX_SHOPPING_MALL PROX_SUPERMARKET PROX_BUS_STOP       NO_Of_UNITS    \n Min.   :0.0000     Min.   :0.0000   Min.   :0.001595   Min.   :  18.0  \n 1st Qu.:0.5258     1st Qu.:0.3695   1st Qu.:0.098356   1st Qu.: 188.8  \n Median :0.9357     Median :0.5687   Median :0.151710   Median : 360.0  \n Mean   :1.0455     Mean   :0.6141   Mean   :0.193974   Mean   : 409.2  \n 3rd Qu.:1.3994     3rd Qu.:0.7862   3rd Qu.:0.220466   3rd Qu.: 590.0  \n Max.   :3.4774     Max.   :2.2441   Max.   :2.476639   Max.   :1703.0  \n FAMILY_FRIENDLY     FREEHOLD      LEASEHOLD_99YR    ...24        \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   Mode:logical  \n 1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.0000   NA's:1436     \n Median :0.0000   Median :0.0000   Median :0.0000                 \n Mean   :0.4868   Mean   :0.4227   Mean   :0.4882                 \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000                 \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000                 \n  ...25          ...26          ...27          ...28          ...29        \n Mode:logical   Mode:logical   Mode:logical   Mode:logical   Mode:logical  \n NA's:1436      NA's:1436      NA's:1436      NA's:1436      NA's:1436     \n                                                                           \n                                                                           \n                                                                           \n                                                                           \n  ...30          ...31          ...32          ...33          ...34        \n Mode:logical   Mode:logical   Mode:logical   Mode:logical   Mode:logical  \n NA's:1436      NA's:1436      NA's:1436      NA's:1436      NA's:1436     \n                                                                           \n                                                                           \n                                                                           \n                                                                           \n  ...35          ...36          ...37          ...38          ...39        \n Mode:logical   Mode:logical   Mode:logical   Mode:logical   Mode:logical  \n NA's:1436      NA's:1436      NA's:1436      NA's:1436      NA's:1436     \n                                                                           \n                                                                           \n                                                                           \n                                                                           \n  ...40          ...41          ...42          ...43          ...44        \n Mode:logical   Mode:logical   Mode:logical   Mode:logical   Mode:logical  \n NA's:1436      NA's:1436      NA's:1436      NA's:1436      NA's:1436     \n                                                                           \n                                                                           \n                                                                           \n                                                                           \n  ...45          ...46          ...47          ...48          ...49        \n Mode:logical   Mode:logical   Mode:logical   Mode:logical   Mode:logical  \n NA's:1436      NA's:1436      NA's:1436      NA's:1436      NA's:1436     \n                                                                           \n                                                                           \n                                                                           \n                                                                           \n\n\n\n\n6.2 Converting aspatial data frame into a sf object\nCurrently, the condo_resale tibble data frame is aspatial. We will convert it to a sf object. The code chunk below converts condo_resale data frame into a simple feature data frame by using st_as_sf() of sf packages.\n\ncondo_resale.sf <- st_as_sf(condo_resale,\n                            coords = c(\"LONGITUDE\", \"LATITUDE\"),\n                            crs=4326) %>%\n  st_transform(crs=3414)\n\nNotice that st_transform() of sf package is used to convert the coordinates from wgs84 (i.e. crs:4326) to svy21 (i.e. crs=3414).\nNext, head() is used to list the content of condo_resale.sf object.\n\nhead(condo_resale.sf)\n\nSimple feature collection with 6 features and 47 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 22085.12 ymin: 29951.54 xmax: 41042.56 ymax: 34546.2\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 6 × 48\n  POSTCODE SELLI…¹ AREA_…²   AGE PROX_…³ PROX_…⁴ PROX_…⁵ PROX_…⁶ PROX_…⁷ PROX_…⁸\n     <dbl>   <dbl>   <dbl> <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1   118635 3000000     309    30    7.94   0.166   2.52     6.62   1.77   0.0584\n2   288420 3880000     290    32    6.61   0.280   1.93     7.51   0.545  0.616 \n3   267833 3325000     248    33    6.90   0.429   0.502    6.46   0.378  0.141 \n4   258380 4250000     127     7    4.04   0.395   1.99     4.91   1.68   0.382 \n5   467169 1400000     145    28   11.8    0.119   1.12     6.41   0.565  0.461 \n6   466472 1320000     139    22   10.3    0.125   0.789    5.09   0.781  0.0994\n# … with 38 more variables: PROX_MRT <dbl>, PROX_PARK <dbl>,\n#   PROX_PRIMARY_SCH <dbl>, PROX_TOP_PRIMARY_SCH <dbl>,\n#   PROX_SHOPPING_MALL <dbl>, PROX_SUPERMARKET <dbl>, PROX_BUS_STOP <dbl>,\n#   NO_Of_UNITS <dbl>, FAMILY_FRIENDLY <dbl>, FREEHOLD <dbl>,\n#   LEASEHOLD_99YR <dbl>, ...24 <lgl>, ...25 <lgl>, ...26 <lgl>, ...27 <lgl>,\n#   ...28 <lgl>, ...29 <lgl>, ...30 <lgl>, ...31 <lgl>, ...32 <lgl>,\n#   ...33 <lgl>, ...34 <lgl>, ...35 <lgl>, ...36 <lgl>, ...37 <lgl>, …\n\n\nNotice that the output is in point feature data frame.\n\n\n6.3 Exploratory Data Analysis (EDA)\nIn the section, you will learn how to use statistical graphics functions of ggplot2 package to perform EDA.\n\n\n6.3.1 EDA using statistical graphics.\nWe can plot the distribution of SELLING_PRICE by using appropriate Exploratory Data Analysis (EDA) as shown in the code chunk below.\n\nggplot(data=condo_resale.sf, aes(x=`SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\n\n\n\nThe figure above reveals a right skewed distribution. This means that more condominium units were transacted at relative lower prices.\nRemember , for right skewed distribution :\n\n\n\nFig-2 : Right Skewed Distribution\n\n\nStatistically, the skewed dsitribution can be normalised by using log transformation. The code chunk below is used to derive a new variable called LOG_SELLING_PRICE by using a log transformation on the variable SELLING_PRICE. It is performed using mutate() of dplyr package.\n\ncondo_resale.sf <- condo_resale.sf %>%\n  mutate(`LOG_SELLING_PRICE` = log(SELLING_PRICE))\n\nNow, we can plot the LOG_SELLING_PRICE using the code chunk below.\n\nggplot(data=condo_resale.sf, aes(x=`LOG_SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\n\n\n\nNotice that the distribution is relatively less skewed after the transformation.\n\n\n6.3.2 Multiple Histogram Plots distribution of variables\nIn this section, we will learn how to draw a small multiple histograms (also known as trellis plot) by using ggarrange() of ggpubr package.\nThe code chunk below is used to create 12 histograms. Then, ggarrange() is used to organised these histogram into a 3 columns by 4 rows small multiple plot.\n\nAREA_SQM <-  ggplot(data = condo_resale.sf,\n                 aes(x = `AREA_SQM`))+\n                  geom_histogram(bins = 20,color=\"black\", fill=\"light blue\")\n##\nAGE <- ggplot(data = condo_resale.sf,\n              aes(x=`AGE`))+\n          geom_histogram(bins=20,color=\"black\",fill=\"light blue\")\n##\n\nPROX_CBD <- ggplot(data=condo_resale.sf, aes(x= `PROX_CBD`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n##\n\nPROX_CHILDCARE <- ggplot(data=condo_resale.sf, aes(x= `PROX_CHILDCARE`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n##\n\nPROX_ELDERLYCARE <- ggplot(data=condo_resale.sf, aes(x= `PROX_ELDERLYCARE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")+\n  geom_density()\n##\n\nPROX_URA_GROWTH_AREA <- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_URA_GROWTH_AREA`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n##\n\nPROX_HAWKER_MARKET <- ggplot(data=condo_resale.sf, aes(x= `PROX_HAWKER_MARKET`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n##\n\nPROX_KINDERGARTEN <- ggplot(data=condo_resale.sf, aes(x= `PROX_KINDERGARTEN`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n##\n\nPROX_MRT <- ggplot(data=condo_resale.sf, aes(x= `PROX_MRT`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n##\n\nPROX_PARK <- ggplot(data=condo_resale.sf, aes(x= `PROX_PARK`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n##\n\nPROX_PRIMARY_SCH <- ggplot(data=condo_resale.sf, aes(x= `PROX_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n##\n\nPROX_TOP_PRIMARY_SCH <- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_TOP_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")+\n  geom_density()\n##\n\n\nggarrange(AREA_SQM, AGE, PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, \n          PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN, PROX_MRT,\n          PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH,  \n          ncol = 4, nrow = 3)\n\n\n\n\n\n\n6.3.3 Understand geospatial distribution condominium resale prices in Singapore.\nLastly, we want to reveal the geospatial distribution condominium resale prices in Singapore. The map will be prepared by using tmap package.\nFirst, we will turn on the interactive mode of tmap by using the code chunk below.\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\n\nNext, the code chunks below is used to create an interactive point symbol map.\n\n#tm_shape(mpsz_svy21)+\n#  tm_polygons() +\n#tm_shape(condo_resale.sf) +  \n#  tm_dots(col = \"SELLING_PRICE\",size = 0.1,\n#          alpha = 0.8,\n#          style=\"quantile\") +\n#  tm_view(set.zoom.limits = c(11,14))\n\nLet us see how tm_bubbles will look like in map.\n\n#tm_shape(mpsz_svy21)+\n#  tm_polygons() +\n#tm_shape(condo_resale.sf) +  \n#  tm_bubbles(col = \"SELLING_PRICE\",size = 0.05,\n#          alpha = 0.3,\n#          style=\"quantile\") +\n#  tm_view(set.zoom.limits = c(11,14))\n\nset.zoom.limits argument of tm_view() sets the minimum and maximum zoom level to 11 and 14 respectively.\nThe code below will be used to turn R display into plot mode.\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting"
  },
  {
    "objectID": "HandsOn_Exercise4/HandsOn_Ex04.html#hedonic-pricing-modelling-in-r.",
    "href": "HandsOn_Exercise4/HandsOn_Ex04.html#hedonic-pricing-modelling-in-r.",
    "title": "HandsOn_Ex04 : Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method.",
    "section": "7. Hedonic Pricing Modelling in R.",
    "text": "7. Hedonic Pricing Modelling in R.\nIn this section, we will learn how to building hedonic pricing models for condominium resale units using lm() of R base.\n7.1 Simple Linear Regression Method.\nFirst, we will build a simple linear regression model by using SELLING_PRICE as the dependent variable and AREA_SQM as the independent variable.\n\ncondo.slr <- lm(formula=SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\nlm() returns an object of class “lm” or for multiple responses of class c(“mlm”, “lm”).\nThe functions summary() and anova() can be used to obtain and print a summary and analysis of variance table of the results. The generic accessor functions coefficients, effects, fitted.values and residuals extract various useful features of the value returned by lm.\n\nsummary(condo.slr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3695815  -391764   -87517   258900 13503875 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -258121.1    63517.2  -4.064 5.09e-05 ***\nAREA_SQM      14719.0      428.1  34.381  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 942700 on 1434 degrees of freedom\nMultiple R-squared:  0.4518,    Adjusted R-squared:  0.4515 \nF-statistic:  1182 on 1 and 1434 DF,  p-value: < 2.2e-16\n\n\nThe output report reveals that the SELLING_PRICE can be explained by using the formula:\n      *y = -258121.1 + 14719x1*\nThe R-squared of 0.4518 reveals that the simple regression model built is able to explain about 45% of the resale prices.\nSince p-value is much smaller than 0.001, we will reject the null hypothesis that mean is a good estimator of SELLING_PRICE. This will allow us to infer that simple linear regression model above is a good estimator of SELLING_PRICE.\nThe Coefficients: section of the report reveals that the p-values of both the estimates of the Intercept and ARA_SQM are smaller than 0.001. In view of this, the null hypothesis of the B0 and B1 are equal to 0 will be rejected. As a results, we will be able to infer that the B0 and B1 are good parameter estimates.\nTo visualise the best fit curve on a scatterplot, we can incorporate lm() as a method function in ggplot’s geometry as shown in the code chunk below.\n\nggplot(data=condo_resale.sf,  \n       aes(x=`AREA_SQM`, y=`SELLING_PRICE`)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nFigure above reveals that there are a few statistical outliers with relatively high selling prices.\n\n\n7.1 Multiple Linear Regression Method.\nBefore building a multiple regression model, it is important to ensure that the indepdent variables used are not highly correlated to each other. If these highly correlated independent variables are used in building a regression model by mistake, the quality of the model will be compromised. This phenomenon is known as multicollinearity in statistics.\nCorrelation matrix is commonly used to visualize the relationships between the independent variables. Beside the pairs() of R, there are many packages support the display of a correlation matrix. In this section, the corrplot package will be used.\nThe code chunk below is used to plot a scatterplot matrix of the relationship between the independent variables in condo_resale data.frame.\n\ncorrplot(cor(condo_resale[, 5:23]),\n         diag = FALSE, order = \"AOE\",\n         number.cex = 0.4,number.font = 3,\n         tl.pos = \"td\", tl.cex = 0.4,tl.col = 'Blue', \n         method = \"number\", type = \"upper\")\n\n\n\n\nMatrix reorder is very important for mining the hiden structure and patter in the matrix. There are four methods in corrplot (parameter order), named “AOE”, “FPC”, “hclust”, “alphabet”. In the code chunk above, AOE order is used. It orders the variables by using the angular order of the eigenvectors method suggested by Michael Friendly.\nFrom the scatterplot matrix, it is clear that Freehold is highly correlated to LEASE_99YEAR. In view of this, it is wiser to only include either one of them in the subsequent model building. As a result, LEASE_99YEAR is excluded in the subsequent model building.\n\n\n7.2 Building a hedonic pricing model using multiple linear regression method\nThe code chunk below using lm() to calibrate the multiple linear regression model.\n\ncondo.mlr <- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE    + \n                  PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                  PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + PROX_KINDERGARTEN + \n                  PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + \n                  PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n                  PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                data=condo_resale.sf)\nsummary(condo.mlr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + PROX_CHILDCARE + \n    PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + \n    PROX_KINDERGARTEN + PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + \n    PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3475964  -293923   -23069   241043 12260381 \n\nCoefficients:\n                       Estimate Std. Error t value Pr(>|t|)    \n(Intercept)           481728.40  121441.01   3.967 7.65e-05 ***\nAREA_SQM               12708.32     369.59  34.385  < 2e-16 ***\nAGE                   -24440.82    2763.16  -8.845  < 2e-16 ***\nPROX_CBD              -78669.78    6768.97 -11.622  < 2e-16 ***\nPROX_CHILDCARE       -351617.91  109467.25  -3.212  0.00135 ** \nPROX_ELDERLYCARE      171029.42   42110.51   4.061 5.14e-05 ***\nPROX_URA_GROWTH_AREA   38474.53   12523.57   3.072  0.00217 ** \nPROX_HAWKER_MARKET     23746.10   29299.76   0.810  0.41782    \nPROX_KINDERGARTEN     147468.99   82668.87   1.784  0.07466 .  \nPROX_MRT             -314599.68   57947.44  -5.429 6.66e-08 ***\nPROX_PARK             563280.50   66551.68   8.464  < 2e-16 ***\nPROX_PRIMARY_SCH      180186.08   65237.95   2.762  0.00582 ** \nPROX_TOP_PRIMARY_SCH    2280.04   20410.43   0.112  0.91107    \nPROX_SHOPPING_MALL   -206604.06   42840.60  -4.823 1.57e-06 ***\nPROX_SUPERMARKET      -44991.80   77082.64  -0.584  0.55953    \nPROX_BUS_STOP         683121.35  138353.28   4.938 8.85e-07 ***\nNO_Of_UNITS             -231.18      89.03  -2.597  0.00951 ** \nFAMILY_FRIENDLY       140340.77   47020.55   2.985  0.00289 ** \nFREEHOLD              359913.01   49220.22   7.312 4.38e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 755800 on 1417 degrees of freedom\nMultiple R-squared:  0.6518,    Adjusted R-squared:  0.6474 \nF-statistic: 147.4 on 18 and 1417 DF,  p-value: < 2.2e-16\n\n\n\n\n7.3 Preparing Publication Quality Table: olsrr method.\nWith reference to the report above, it is clear that not all the independent variables are statistically significant. We will revised the model by removing those variables which are not statistically significant.\nNow, we are ready to calibrate the revised model by using the code chunk below.\n\ncondo.mlr1 <- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                   PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                   PROX_URA_GROWTH_AREA + PROX_MRT  + PROX_PARK + \n                   PROX_PRIMARY_SCH + PROX_SHOPPING_MALL    + PROX_BUS_STOP + \n                   NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD,\n                 data=condo_resale.sf)\n#\nols_regress(condo.mlr1)\n\n                             Model Summary                               \n------------------------------------------------------------------------\nR                       0.807       RMSE                     755957.289 \nR-Squared               0.651       Coef. Var                    43.168 \nAdj. R-Squared          0.647       MSE                571471422208.591 \nPred R-Squared          0.638       MAE                      414819.628 \n------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.512586e+15          14        1.080418e+14    189.059    0.0000 \nResidual      8.120609e+14        1421    571471422208.591                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     527633.222    108183.223                   4.877    0.000     315417.244     739849.200 \n            AREA_SQM      12777.523       367.479        0.584     34.771    0.000      12056.663      13498.382 \n                 AGE     -24687.739      2754.845       -0.167     -8.962    0.000     -30091.739     -19283.740 \n            PROX_CBD     -77131.323      5763.125       -0.263    -13.384    0.000     -88436.469     -65826.176 \n      PROX_CHILDCARE    -318472.751    107959.512       -0.084     -2.950    0.003    -530249.889    -106695.613 \n    PROX_ELDERLYCARE     185575.623     39901.864        0.090      4.651    0.000     107302.737     263848.510 \nPROX_URA_GROWTH_AREA      39163.254     11754.829        0.060      3.332    0.001      16104.571      62221.936 \n            PROX_MRT    -294745.107     56916.367       -0.112     -5.179    0.000    -406394.234    -183095.980 \n           PROX_PARK     570504.807     65507.029        0.150      8.709    0.000     442003.938     699005.677 \n    PROX_PRIMARY_SCH     159856.136     60234.599        0.062      2.654    0.008      41697.849     278014.424 \n  PROX_SHOPPING_MALL    -220947.251     36561.832       -0.115     -6.043    0.000    -292668.213    -149226.288 \n       PROX_BUS_STOP     682482.221    134513.243        0.134      5.074    0.000     418616.359     946348.082 \n         NO_Of_UNITS       -245.480        87.947       -0.053     -2.791    0.005       -418.000        -72.961 \n     FAMILY_FRIENDLY     146307.576     46893.021        0.057      3.120    0.002      54320.593     238294.560 \n            FREEHOLD     350599.812     48506.485        0.136      7.228    0.000     255447.802     445751.821 \n-----------------------------------------------------------------------------------------------------------------\n\n\n\n\n7.4 Preparing Publication Quality Table: gtsummary method.\nThe gtsummary package provides an elegant and flexible way to create publication-ready summary tables in R.\nIn the code chunk below, tbl_regression() is used to create a well formatted regression report.\n\ntbl_regression(condo.mlr1, intercept = TRUE)\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n<0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n<0.001\n    AGE\n-24,688\n-30,092, -19,284\n<0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n<0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n<0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n<0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n<0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n<0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n<0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n<0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n<0.001\n  \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\nWith gtsummary package, model statistics can be included in the report by either appending them to the report table by using add_glance_table() or adding as a table source note by using add_glance_source_note() as shown in the code chunk below.\n\ntbl_regression(condo.mlr1, \n               intercept = TRUE) %>% \n  add_glance_source_note(\n    label = list(sigma ~ \"\\U03C3\"),\n    include = c(r.squared, adj.r.squared, \n                AIC, statistic,\n                p.value, sigma))\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n<0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n<0.001\n    AGE\n-24,688\n-30,092, -19,284\n<0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n<0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n<0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n<0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n<0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n<0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n<0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n<0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n<0.001\n  \n  \n    \n      R² = 0.651; Adjusted R² = 0.647; AIC = 42,967; Statistic = 189; p-value = <0.001; σ = 755,957\n    \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\n\n\n7.5 Checking for multi-collinearity.\nIn this section, let us see fantastic R package specially programmed for performing OLS regression. It is called olsrr. It provides a collection of very useful methods for building better multiple linear regression models:\n\ncomprehensive regression output\nresidual diagnostics\nmeasures of influence\nheteroskedasticity tests\ncollinearity diagnostics\nmodel fit assessment\nvariable contribution assessment\nvariable selection procedures\n\nIn the code chunk below, the ols_vif_tol() of olsrr package is used to test if there are sign of multicollinearity.\n\nols_vif_tol(condo.mlr1)\n\n              Variables Tolerance      VIF\n1              AREA_SQM 0.8728554 1.145665\n2                   AGE 0.7071275 1.414172\n3              PROX_CBD 0.6356147 1.573280\n4        PROX_CHILDCARE 0.3066019 3.261559\n5      PROX_ELDERLYCARE 0.6598479 1.515501\n6  PROX_URA_GROWTH_AREA 0.7510311 1.331503\n7              PROX_MRT 0.5236090 1.909822\n8             PROX_PARK 0.8279261 1.207837\n9      PROX_PRIMARY_SCH 0.4524628 2.210126\n10   PROX_SHOPPING_MALL 0.6738795 1.483945\n11        PROX_BUS_STOP 0.3514118 2.845664\n12          NO_Of_UNITS 0.6901036 1.449058\n13      FAMILY_FRIENDLY 0.7244157 1.380423\n14             FREEHOLD 0.6931163 1.442759\n\n\nSince the VIF of the independent variables are less than 10. We can safely conclude that there are no sign of multicollinearity among the independent variables.\n\n\n7.6 Test for Non-Linearity\nIn multiple linear regression, it is important for us to test the assumption that linearity and additivity of the relationship between dependent and independent variables.\nIn the code chunk below, the ols_plot_resid_fit() of olsrr package is used to perform linearity assumption test.\n\nols_plot_resid_fit(condo.mlr1)\n\n\n\n\nThe figure above reveals that most of the data poitns are scattered around the 0 line, hence we can safely conclude that the relationships between the dependent variable and independent variables are linear.\n\n\n\n\n\n7.7 Test for Normality Assumption\nLastly, the code chunk below uses ols_plot_resid_hist() of olsrr package to perform normality assumption test.\n\nols_plot_resid_hist(condo.mlr1)\n\n\n\n\nThe figure reveals that the residual of the multiple linear regression model (i.e. condo.mlr1) is resemble normal distribution.\nIf we prefer formal statistical test methods, the ols_test_normality() of olsrr package can be used as shown in the code chun below.\n\nols_test_normality(condo.mlr1)\n\nWarning in ks.test.default(y, \"pnorm\", mean(y), sd(y)): ties should not be\npresent for the Kolmogorov-Smirnov test\n\n\n-----------------------------------------------\n       Test             Statistic       pvalue  \n-----------------------------------------------\nShapiro-Wilk              0.6856         0.0000 \nKolmogorov-Smirnov        0.1366         0.0000 \nCramer-von Mises         121.0768        0.0000 \nAnderson-Darling         67.9551         0.0000 \n-----------------------------------------------\n\n\nThe summary table above reveals that the p-values of the four tests are way smaller than the alpha value of 0.05. Hence we will reject the null hypothesis and infer that there is statistical evidence that the residual are not normally distributed.\n\n\n7.8 Testing for Spatial Autocorrelation\nThe hedonic model we try to build are using geographically referenced attributes, hence it is also important for us to visualize the residual of the hedonic pricing model.\nIn order to perform spatial autocorrelation test, we need to convert condo_resale.sf from sf data frame into a SpatialPointsDataFrame.\nFirst, we will export the residual of the hedonic pricing model and save it as a data frame.\n\nmlr.output <- as.data.frame(condo.mlr1$residuals)\n\nNext, we will join the newly created data frame with condo_resale.sf object.\n\ncondo_resale.res.sf <- cbind(condo_resale.sf, \n                        condo.mlr1$residuals) %>%\nrename(`MLR_RES` = `condo.mlr1.residuals`)\n\nNext, we will convert condo_resale.res.sf from simple feature object into a SpatialPointsDataFrame because spdep package can only process sp conformed spatial data objects.\nThe code chunk below will be used to perform the data conversion process.\n\ncondo_resale.sp <- as_Spatial(condo_resale.res.sf)\ncondo_resale.sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1436 \nextent      : 14940.85, 43352.45, 24765.67, 48382.81  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 49\nnames       : POSTCODE, SELLING_PRICE, AREA_SQM, AGE,    PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN,    PROX_MRT,   PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH, PROX_SHOPPING_MALL, ... \nmin values  :    18965,        540000,       34,   0, 0.386916393,    0.004927023,      0.054508623,          0.214539508,        0.051817113,       0.004927023, 0.052779424, 0.029064164,      0.077106132,          0.077106132,                  0, ... \nmax values  :   828833,       1.8e+07,      619,  37, 19.18042832,     3.46572633,      3.949157205,           9.15540001,        5.374348075,       2.229045366,  3.48037319,  2.16104919,      3.928989144,          6.748192062,        3.477433767, ... \n\n\nNext, we will use tmap package to display the distribution of the residuals on an interactive map.\nThe code churn below will turn on the interactive mode of tmap.\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\n\nThe code chunks below is used to create an interactive point symbol map.\n\ntm_shape(mpsz_svy21)+\n  tmap_options(check.and.fix = TRUE) +\n  tm_polygons(alpha = 0.4) +\ntm_shape(condo_resale.res.sf) +  \n  tm_dots(col = \"MLR_RES\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n\nWarning: The shape mpsz_svy21 is invalid (after reprojection). See\nsf::st_is_valid\n\n\nVariable(s) \"MLR_RES\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\n\nThe figure above reveal that there is sign of spatial autocorrelation.\nTo proof that our observation is indeed true, the Moran’s I test will be performed\nFirst, we will compute the distance-based weight matrix by using dnearneigh() function of spdep.\n\nnb <- dnearneigh(coordinates(condo_resale.sp), 0, 1500, longlat = FALSE)\nsummary(nb)\n\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\n\nNext, nb2listw() of spdep packge will be used to convert the output neighbours lists (i.e. nb) into a spatial weights.\n\nnb_lw <- nb2listw(nb, style = 'W')\nsummary(nb_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\nWeights style: W \nWeights constants summary:\n     n      nn   S0       S1       S2\nW 1436 2062096 1436 94.81916 5798.341\n\n\nNext, lm.morantest() of spdep package will be used to perform Moran’s I test for residual spatial autocorrelation\n\nlm.morantest(condo.mlr1, nb_lw)\n\n\n    Global Moran I for regression residuals\n\ndata:  \nmodel: lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD +\nPROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_MRT +\nPROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP +\nNO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, data = condo_resale.sf)\nweights: nb_lw\n\nMoran I statistic standard deviate = 24.366, p-value < 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nObserved Moran I      Expectation         Variance \n    1.438876e-01    -5.487594e-03     3.758259e-05 \n\n\nThe Global Moran’s I test for residual spatial autocorrelation shows that it’s p-value is less than 0.00000000000000022 which is less than the alpha value of 0.05. Hence, we will reject the null hypothesis that the residuals are randomly distributed.\nSince the Observed Global Moran I = 0.1424418 which is greater than 0, we can infer than the residuals resemble cluster distribution."
  },
  {
    "objectID": "HandsOn_Exercise4/HandsOn_Ex04.html#building-hedonic-pricing-models-using-gwmodel.",
    "href": "HandsOn_Exercise4/HandsOn_Ex04.html#building-hedonic-pricing-models-using-gwmodel.",
    "title": "HandsOn_Ex04 : Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method.",
    "section": "8. Building Hedonic Pricing Models using GWmodel.",
    "text": "8. Building Hedonic Pricing Models using GWmodel.\nIn this section, we are going to learn how to modelling hedonic pricing using both the fixed and adaptive bandwidth schemes.\n\n8.1 Building Fixed Bandwidth GWR Model.\n\n8.1.1 Computing fixed bandwidth.\nIn the code chunk below bw.gwr() of GWModel package is used to determine the optimal fixed bandwidth to use in the model. Notice that the argument adaptive is set to FALSE indicates that we are interested to compute the fixed bandwidth.\nTwo possible approaches can be used to determine the stopping rule, they are:\n\nCV cross-validation approach and\nAIC corrected (AICc) approach.\nWe define the stopping rule using approach argeement.\n\nbw.fixed <- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                     PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                     PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + \n                     PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                     FAMILY_FRIENDLY + FREEHOLD, \n                   data=condo_resale.sp, \n                   approach=\"CV\", \n                   kernel=\"gaussian\", \n                   adaptive=FALSE, \n                   longlat=FALSE)\n\nFixed bandwidth: 17660.96 CV score: 8.259118e+14 \nFixed bandwidth: 10917.26 CV score: 7.970454e+14 \nFixed bandwidth: 6749.419 CV score: 7.273273e+14 \nFixed bandwidth: 4173.553 CV score: 6.300006e+14 \nFixed bandwidth: 2581.58 CV score: 5.404958e+14 \nFixed bandwidth: 1597.687 CV score: 4.857515e+14 \nFixed bandwidth: 989.6077 CV score: 4.722431e+14 \nFixed bandwidth: 613.7939 CV score: 1.378294e+16 \nFixed bandwidth: 1221.873 CV score: 4.778717e+14 \nFixed bandwidth: 846.0596 CV score: 4.791629e+14 \nFixed bandwidth: 1078.325 CV score: 4.751406e+14 \nFixed bandwidth: 934.7772 CV score: 4.72518e+14 \nFixed bandwidth: 1023.495 CV score: 4.730305e+14 \nFixed bandwidth: 968.6643 CV score: 4.721317e+14 \nFixed bandwidth: 955.7206 CV score: 4.722072e+14 \nFixed bandwidth: 976.6639 CV score: 4.721387e+14 \nFixed bandwidth: 963.7202 CV score: 4.721484e+14 \nFixed bandwidth: 971.7199 CV score: 4.721293e+14 \nFixed bandwidth: 973.6083 CV score: 4.721309e+14 \nFixed bandwidth: 970.5527 CV score: 4.721295e+14 \nFixed bandwidth: 972.4412 CV score: 4.721296e+14 \nFixed bandwidth: 971.2741 CV score: 4.721292e+14 \nFixed bandwidth: 970.9985 CV score: 4.721293e+14 \nFixed bandwidth: 971.4443 CV score: 4.721292e+14 \nFixed bandwidth: 971.5496 CV score: 4.721293e+14 \nFixed bandwidth: 971.3793 CV score: 4.721292e+14 \nFixed bandwidth: 971.3391 CV score: 4.721292e+14 \nFixed bandwidth: 971.3143 CV score: 4.721292e+14 \nFixed bandwidth: 971.3545 CV score: 4.721292e+14 \nFixed bandwidth: 971.3296 CV score: 4.721292e+14 \nFixed bandwidth: 971.345 CV score: 4.721292e+14 \nFixed bandwidth: 971.3355 CV score: 4.721292e+14 \nFixed bandwidth: 971.3413 CV score: 4.721292e+14 \nFixed bandwidth: 971.3377 CV score: 4.721292e+14 \nFixed bandwidth: 971.34 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3408 CV score: 4.721292e+14 \nFixed bandwidth: 971.3403 CV score: 4.721292e+14 \nFixed bandwidth: 971.3406 CV score: 4.721292e+14 \nFixed bandwidth: 971.3404 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \n\n\n\n\nNote that cross-validation stops when Rate of Change is very very small or there is no change.\nThe result shows that the recommended bandwidth is 971.3405 meters.\nQuiz: Do you know why it is in meter?\nThe bandwidth is the distance beyond which a value of zero is assigned to weight observations. Larger bandwidths include a larger number of observations receiving a non-zero weight and more observations are used to fit a local regression. We are trying to find similar neighbors within a given distance and hence recommended bandwidth is in meters. See the following graph to understand more.\n\n\n\nFixed Bandwidth\n\n\n\n8.1.2 GWModel method - fixed bandwith.\nNow we can use the code chunk below to calibrate the gwr model using fixed bandwidth and gaussian kernel.\n\ngwr.fixed <- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                         PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                         PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + \n                         PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                         FAMILY_FRIENDLY + FREEHOLD, \n                       data=condo_resale.sp, \n                       bw=bw.fixed, \n                       kernel = 'gaussian', \n                       longlat = FALSE)\n\nThe output is saved in a list of class “gwrm”. The code below can be used to display the model output.\n\ngwr.fixed\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2022-12-11 06:35:15 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sp, bw = bw.fixed, kernel = \"gaussian\", \n    longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(>|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  < 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  < 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  < 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  < 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: < 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Fixed bandwidth: 971.3405 \n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -3.5988e+07 -5.1998e+05  7.6780e+05  1.7412e+06\n   AREA_SQM              1.0003e+03  5.2758e+03  7.4740e+03  1.2301e+04\n   AGE                  -1.3475e+05 -2.0813e+04 -8.6260e+03 -3.7784e+03\n   PROX_CBD             -7.7047e+07 -2.3608e+05 -8.3600e+04  3.4646e+04\n   PROX_CHILDCARE       -6.0097e+06 -3.3667e+05 -9.7425e+04  2.9007e+05\n   PROX_ELDERLYCARE     -3.5000e+06 -1.5970e+05  3.1971e+04  1.9577e+05\n   PROX_URA_GROWTH_AREA -3.0170e+06 -8.2013e+04  7.0749e+04  2.2612e+05\n   PROX_MRT             -3.5282e+06 -6.5836e+05 -1.8833e+05  3.6922e+04\n   PROX_PARK            -1.2062e+06 -2.1732e+05  3.5383e+04  4.1335e+05\n   PROX_PRIMARY_SCH     -2.2695e+07 -1.7066e+05  4.8472e+04  5.1555e+05\n   PROX_SHOPPING_MALL   -7.2585e+06 -1.6684e+05 -1.0517e+04  1.5923e+05\n   PROX_BUS_STOP        -1.4676e+06 -4.5207e+04  3.7601e+05  1.1664e+06\n   NO_Of_UNITS          -1.3170e+03 -2.4822e+02 -3.0846e+01  2.5496e+02\n   FAMILY_FRIENDLY      -2.2749e+06 -1.1140e+05  7.6214e+03  1.6107e+05\n   FREEHOLD             -9.2067e+06  3.8073e+04  1.5169e+05  3.7528e+05\n                             Max.\n   Intercept            112793548\n   AREA_SQM                 21575\n   AGE                     434201\n   PROX_CBD               2704596\n   PROX_CHILDCARE         1654087\n   PROX_ELDERLYCARE      38867814\n   PROX_URA_GROWTH_AREA  78515730\n   PROX_MRT               3124316\n   PROX_PARK             18122425\n   PROX_PRIMARY_SCH       4637503\n   PROX_SHOPPING_MALL     1529952\n   PROX_BUS_STOP         11342182\n   NO_Of_UNITS              12907\n   FAMILY_FRIENDLY        1720744\n   FREEHOLD               6073636\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 438.3804 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 997.6196 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 42263.61 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41632.36 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 42515.71 \n   Residual sum of squares: 2.53407e+14 \n   R-square value:  0.8909912 \n   Adjusted R-square value:  0.8430417 \n\n   ***********************************************************************\n   Program stops at: 2022-12-11 06:35:16 \n\n\n\n\n\n8.2 Building Adaptive Bandwidth GWR Model.\nIn this section, we will calibrate the gwr-based hedonic pricing model by using adaptive bandwidth approach.\n\n\n8.2.1 Computing the adaptive bandwidth.\nSimilar to the earlier section, we will first use bw.gwr() to determine the recommended data point to use.\nThe code chunk used look very similar to the one used to compute the fixed bandwidth except the adaptive argument has changed to TRUE.\n\nbw.adaptive <- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE  + \n                        PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE    + \n                        PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                        PROX_PRIMARY_SCH + PROX_SHOPPING_MALL   + PROX_BUS_STOP + \n                        NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                      data=condo_resale.sp, \n                      approach=\"CV\", \n                      kernel=\"gaussian\", \n                      adaptive=TRUE, \n                      longlat=FALSE)\n\nAdaptive bandwidth: 895 CV score: 7.952401e+14 \nAdaptive bandwidth: 561 CV score: 7.667364e+14 \nAdaptive bandwidth: 354 CV score: 6.953454e+14 \nAdaptive bandwidth: 226 CV score: 6.15223e+14 \nAdaptive bandwidth: 147 CV score: 5.674373e+14 \nAdaptive bandwidth: 98 CV score: 5.426745e+14 \nAdaptive bandwidth: 68 CV score: 5.168117e+14 \nAdaptive bandwidth: 49 CV score: 4.859631e+14 \nAdaptive bandwidth: 37 CV score: 4.646518e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \nAdaptive bandwidth: 25 CV score: 4.430816e+14 \nAdaptive bandwidth: 32 CV score: 4.505602e+14 \nAdaptive bandwidth: 27 CV score: 4.462172e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \n\n\nThe result shows that the 30 is the recommended data points to be used.\n\n\n\n8.2.2 Constructing the adaptive bandwidth gwr model.\nNow, we can go ahead to calibrate the gwr-based hedonic pricing model by using adaptive bandwidth and gaussian kernel as shown in the code chunk below.\n\ngwr.adaptive <- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                            PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE + \n                            PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                            PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP + \n                            NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                          data=condo_resale.sp, bw=bw.adaptive, \n                          kernel = 'gaussian', \n                          adaptive=TRUE, \n                          longlat = FALSE)\n\nThe code below can be used to display the model output.\n\ngwr.adaptive\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2022-12-11 06:35:21 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sp, bw = bw.adaptive, kernel = \"gaussian\", \n    adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(>|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  < 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  < 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  < 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  < 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: < 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 30 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -1.3487e+08 -2.4669e+05  7.7928e+05  1.6194e+06\n   AREA_SQM              3.3188e+03  5.6285e+03  7.7825e+03  1.2738e+04\n   AGE                  -9.6746e+04 -2.9288e+04 -1.4043e+04 -5.6119e+03\n   PROX_CBD             -2.5330e+06 -1.6256e+05 -7.7242e+04  2.6624e+03\n   PROX_CHILDCARE       -1.2790e+06 -2.0175e+05  8.7158e+03  3.7778e+05\n   PROX_ELDERLYCARE     -1.6212e+06 -9.2050e+04  6.1029e+04  2.8184e+05\n   PROX_URA_GROWTH_AREA -7.2686e+06 -3.0350e+04  4.5869e+04  2.4613e+05\n   PROX_MRT             -4.3781e+07 -6.7282e+05 -2.2115e+05 -7.4593e+04\n   PROX_PARK            -2.9020e+06 -1.6782e+05  1.1601e+05  4.6572e+05\n   PROX_PRIMARY_SCH     -8.6418e+05 -1.6627e+05 -7.7853e+03  4.3222e+05\n   PROX_SHOPPING_MALL   -1.8272e+06 -1.3175e+05 -1.4049e+04  1.3799e+05\n   PROX_BUS_STOP        -2.0579e+06 -7.1461e+04  4.1104e+05  1.2071e+06\n   NO_Of_UNITS          -2.1993e+03 -2.3685e+02 -3.4699e+01  1.1657e+02\n   FAMILY_FRIENDLY      -5.9879e+05 -5.0927e+04  2.6173e+04  2.2481e+05\n   FREEHOLD             -1.6340e+05  4.0765e+04  1.9023e+05  3.7960e+05\n                            Max.\n   Intercept            18758355\n   AREA_SQM                23064\n   AGE                     13303\n   PROX_CBD             11346650\n   PROX_CHILDCARE        2892127\n   PROX_ELDERLYCARE      2465671\n   PROX_URA_GROWTH_AREA  7384059\n   PROX_MRT              1186242\n   PROX_PARK             2588497\n   PROX_PRIMARY_SCH      3381462\n   PROX_SHOPPING_MALL   38038564\n   PROX_BUS_STOP        12081592\n   NO_Of_UNITS              1010\n   FAMILY_FRIENDLY       2072414\n   FREEHOLD              1813995\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 350.3088 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 1085.691 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 41982.22 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41546.74 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 41914.08 \n   Residual sum of squares: 2.528227e+14 \n   R-square value:  0.8912425 \n   Adjusted R-square value:  0.8561185 \n\n   ***********************************************************************\n   Program stops at: 2022-12-11 06:35:22 \n\n\nThe report shows that the AICc the adaptive distance gwr is 42966.76 which is slightly smaller than the AICc of the fixed distance gwr of 42967.14.\n\n\n\n8.3 Visualising GWR Output.\nIn addition to regression residuals, the output feature class table includes fields for observed and predicted y values, condition number (cond), Local R2, residuals, and explanatory variable coefficients and standard errors:\n\nCondition Number: this diagnostic evaluates local collinearity. In the presence of strong local collinearity, results become unstable. Results associated with condition numbers larger than 30, may be unreliable.\nLocal R2: these values range between 0.0 and 1.0 and indicate how well the local regression model fits observed y values. Very low values indicate the local model is performing poorly. Mapping the Local R2 values to see where GWR predicts well and where it predicts poorly may provide clues about important variables that may be missing from the regression model.\nPredicted: these are the estimated (or fitted) y values 3. computed by GWR.\nResiduals: to obtain the residual values, the fitted y values are subtracted from the observed y values. Standardized residuals have a mean of zero and a standard deviation of 1. A cold-to-hot rendered map of standardized residuals can be produce by using these values.\nCoefficient Standard Error: these values measure the reliability of each coefficient estimate. Confidence in those estimates are higher when standard errors are small in relation to the actual coefficient values. Large standard errors may indicate problems with local collinearity.\n\nThey are all stored in a SpatialPointsDataFrame or SpatialPolygonsDataFrame object integrated with fit.points, GWR coefficient estimates, y value, predicted values, coefficient standard errors and t-values in its “data” slot in an object called SDF of the output list.\nIn addition to regression residuals, the output feature class table includes fields for observed and predicted y values, condition number (cond), Local R2, residuals, and explanatory variable coefficients and standard errors:\n\nCondition Number: this diagnostic evaluates local collinearity. In the presence of strong local collinearity, results become unstable. Results associated with condition numbers larger than 30, may be unreliable.\nLocal R2: these values range between 0.0 and 1.0 and indicate how well the local regression model fits observed y values. Very low values indicate the local model is performing poorly. Mapping the Local R2 values to see where GWR predicts well and where it predicts poorly may provide clues about important variables that may be missing from the regression model.\nPredicted: these are the estimated (or fitted) y values 3. computed by GWR.\nResiduals: to obtain the residual values, the fitted y values are subtracted from the observed y values. Standardized residuals have a mean of zero and a standard deviation of 1. A cold-to-hot rendered map of standardized residuals can be produce by using these values.\nCoefficient Standard Error: these values measure the reliability of each coefficient estimate. Confidence in those estimates are higher when standard errors are small in relation to the actual coefficient values. Large standard errors may indicate problems with local collinearity.\n\nThey are all stored in a SpatialPointsDataFrame or SpatialPolygonsDataFrame object integrated with fit.points, GWR coefficient estimates, y value, predicted values, coefficient standard errors and t-values in its “data” slot in an object called SDF of the output list.\n\n\n8.4 Converting SDF into sf data.frame.\nTo visualize the fields in SDF, we need to first covert it into sf data.frame by using the code chunk below.\n\ncondo_resale.sf.adaptive <- st_as_sf(gwr.adaptive$SDF) %>%\n  st_transform(crs=3414)\n\n\ncondo_resale.sf.adaptive.svy21 <- st_transform(condo_resale.sf.adaptive, 3414)\ncondo_resale.sf.adaptive.svy21  \n\nSimple feature collection with 1436 features and 51 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14940.85 ymin: 24765.67 xmax: 43352.45 ymax: 48382.81\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n    Intercept  AREA_SQM        AGE  PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE\n1   2050011.7  9561.892  -9514.634 -120681.9      319266.92       -393417.79\n2   1633128.2 16576.853 -58185.479 -149434.2      441102.18        325188.74\n3   3433608.2 13091.861 -26707.386 -259397.8     -120116.82        535855.81\n4    234358.9 20730.601 -93308.988 2426853.7      480825.28        314783.72\n5   2285804.9  6722.836 -17608.018 -316835.5       90764.78       -137384.61\n6  -3568877.4  6039.581 -26535.592  327306.1     -152531.19       -700392.85\n7  -2874842.4 16843.575 -59166.727 -983577.2     -177810.50       -122384.02\n8   2038086.0  6905.135 -17681.897 -285076.6       70259.40        -96012.78\n9   1718478.4  9580.703 -14401.128  105803.4     -657698.02       -123276.00\n10  3457054.0 14072.011 -31579.884 -234895.4       79961.45        548581.04\n   PROX_URA_GROWTH_AREA    PROX_MRT  PROX_PARK PROX_PRIMARY_SCH\n1            -159980.20  -299742.96 -172104.47        242668.03\n2            -142290.39 -2510522.23  523379.72       1106830.66\n3            -253621.21  -936853.28  209099.85        571462.33\n4           -2679297.89 -2039479.50 -759153.26       3127477.21\n5             303714.81   -44567.05  -10284.62         30413.56\n6             -28051.25   733566.47 1511488.92        320878.23\n7            1397676.38 -2745430.34  710114.74       1786570.95\n8             269368.71   -14552.99   73533.34         53359.73\n9            -361974.72  -476785.32 -132067.59        -40128.92\n10           -150024.38 -1503835.53  574155.47        108996.67\n   PROX_SHOPPING_MALL PROX_BUS_STOP  NO_Of_UNITS FAMILY_FRIENDLY  FREEHOLD\n1          300881.390     1210615.4  104.8290640       -9075.370  303955.6\n2          -87693.378     1843587.2 -288.3441183      310074.664  396221.3\n3         -126732.712     1411924.9   -9.5532945        5949.746  168821.7\n4          -29593.342     7225577.5 -161.3551620     1556178.531 1212515.6\n5           -7490.586      677577.0   42.2659674       58986.951  328175.2\n6          258583.881     1086012.6 -214.3671271      201992.641  471873.1\n7         -384251.210     5094060.5   -0.9212521      359659.512  408871.9\n8          -39634.902      735767.1   30.1741069       55602.506  347075.0\n9          276718.757     2815772.4  675.1615559      -30453.297  503872.8\n10        -454726.822     2123557.0  -21.3044311     -100935.586  213324.6\n         y    yhat    residual CV_Score Stud_residual Intercept_SE AREA_SQM_SE\n1  3000000 2886532   113468.16        0    0.38207013     516105.5    823.2860\n2  3880000 3466801   413198.52        0    1.01433140     488083.5    825.2380\n3  3325000 3616527  -291527.20        0   -0.83780678     963711.4    988.2240\n4  4250000 5435482 -1185481.63        0   -2.84614670     444185.5    617.4007\n5  1400000 1388166    11834.26        0    0.03404453    2119620.6   1376.2778\n6  1320000 1516702  -196701.94        0   -0.72065800   28572883.7   2348.0091\n7  3410000 3266881   143118.77        0    0.41291992     679546.6    893.5893\n8  1420000 1431955   -11955.27        0   -0.03033109    2217773.1   1415.2604\n9  2025000 1832799   192200.83        0    0.52018109     814281.8    943.8434\n10 2550000 2223364   326635.53        0    1.10559735    2410252.0   1271.4073\n      AGE_SE PROX_CBD_SE PROX_CHILDCARE_SE PROX_ELDERLYCARE_SE\n1   5889.782    37411.22          319111.1           120633.34\n2   6226.916    23615.06          299705.3            84546.69\n3   6510.236    56103.77          349128.5           129687.07\n4   6010.511   469337.41          304965.2           127150.69\n5   8180.361   410644.47          698720.6           327371.55\n6  14601.909  5272846.47         1141599.8          1653002.19\n7   8970.629   346164.20          530101.1           148598.71\n8   8661.309   438035.69          742532.8           399221.05\n9  11791.208    89148.35          704630.7           329683.30\n10  9941.980   173532.77          500976.2           281876.74\n   PROX_URA_GROWTH_AREA_SE PROX_MRT_SE PROX_PARK_SE PROX_PRIMARY_SCH_SE\n1                 56207.39    185181.3     205499.6            152400.7\n2                 76956.50    281133.9     229358.7            165150.7\n3                 95774.60    275483.7     314124.3            196662.6\n4                470762.12    279877.1     227249.4            240878.9\n5                474339.56    363830.0     364580.9            249087.7\n6               5496627.21    730453.2    1741712.0            683265.5\n7                371692.97    375511.9     297400.9            344602.8\n8                517977.91    423155.4     440984.4            261251.2\n9                153436.22    285325.4     304998.4            278258.5\n10               239182.57    571355.7     599131.8            331284.8\n   PROX_SHOPPING_MALL_SE PROX_BUS_STOP_SE NO_Of_UNITS_SE FAMILY_FRIENDLY_SE\n1               109268.8         600668.6       218.1258           131474.7\n2                98906.8         410222.1       208.9410           114989.1\n3               119913.3         464156.7       210.9828           146607.2\n4               177104.1         562810.8       361.7767           108726.6\n5               301032.9         740922.4       299.5034           160663.7\n6              2931208.6        1418333.3       602.5571           331727.0\n7               249969.5         821236.4       532.1978           129241.2\n8               351634.0         775038.4       338.6777           171895.1\n9               289872.7         850095.5       439.9037           220223.4\n10              265529.7         631399.2       259.0169           189125.5\n   FREEHOLD_SE Intercept_TV AREA_SQM_TV     AGE_TV PROX_CBD_TV\n1     115954.0    3.9720784   11.614302  -1.615447 -3.22582173\n2     130110.0    3.3460017   20.087361  -9.344188 -6.32792021\n3     141031.5    3.5629010   13.247868  -4.102368 -4.62353528\n4     138239.1    0.5276150   33.577223 -15.524302  5.17080808\n5     210641.1    1.0784029    4.884795  -2.152474 -0.77155660\n6     374347.3   -0.1249043    2.572214  -1.817269  0.06207388\n7     182216.9   -4.2305303   18.849348  -6.595605 -2.84136028\n8     216649.4    0.9189786    4.879056  -2.041481 -0.65080678\n9     220473.7    2.1104224   10.150733  -1.221345  1.18682383\n10    206346.2    1.4343123   11.068059  -3.176418 -1.35360852\n   PROX_CHILDCARE_TV PROX_ELDERLYCARE_TV PROX_URA_GROWTH_AREA_TV PROX_MRT_TV\n1         1.00048819          -3.2612693            -2.846248368 -1.61864578\n2         1.47178634           3.8462625            -1.848971738 -8.92998600\n3        -0.34404755           4.1319138            -2.648105057 -3.40075727\n4         1.57665606           2.4756745            -5.691404992 -7.28705261\n5         0.12990138          -0.4196596             0.640289855 -0.12249416\n6        -0.13361179          -0.4237096            -0.005103357  1.00426206\n7        -0.33542751          -0.8235874             3.760298131 -7.31116712\n8         0.09462126          -0.2405003             0.520038994 -0.03439159\n9        -0.93339393          -0.3739225            -2.359121712 -1.67102293\n10        0.15961128           1.9461735            -0.627237944 -2.63204802\n   PROX_PARK_TV PROX_PRIMARY_SCH_TV PROX_SHOPPING_MALL_TV PROX_BUS_STOP_TV\n1   -0.83749312           1.5923022            2.75358842        2.0154464\n2    2.28192684           6.7019454           -0.88662640        4.4941192\n3    0.66565951           2.9058009           -1.05686949        3.0419145\n4   -3.34061770          12.9836105           -0.16709578       12.8383775\n5   -0.02820944           0.1220998           -0.02488294        0.9145046\n6    0.86781794           0.4696245            0.08821750        0.7656963\n7    2.38773567           5.1844351           -1.53719231        6.2029165\n8    0.16674816           0.2042469           -0.11271635        0.9493299\n9   -0.43301073          -0.1442145            0.95462153        3.3123012\n10   0.95831249           0.3290120           -1.71252687        3.3632555\n   NO_Of_UNITS_TV FAMILY_FRIENDLY_TV FREEHOLD_TV  Local_R2\n1     0.480589953        -0.06902748    2.621347 0.8846744\n2    -1.380026395         2.69655779    3.045280 0.8899773\n3    -0.045279967         0.04058290    1.197050 0.8947007\n4    -0.446007570        14.31276425    8.771149 0.9073605\n5     0.141120178         0.36714544    1.557983 0.9510057\n6    -0.355762335         0.60891234    1.260522 0.9247586\n7    -0.001731033         2.78285441    2.243875 0.8310458\n8     0.089093858         0.32346758    1.602012 0.9463936\n9     1.534793921        -0.13828365    2.285410 0.8380365\n10   -0.082251138        -0.53369623    1.033819 0.9080753\n                    geometry\n1  POINT (22085.12 29951.54)\n2   POINT (25656.84 34546.2)\n3   POINT (23963.99 32890.8)\n4  POINT (27044.28 32319.77)\n5  POINT (41042.56 33743.64)\n6   POINT (39717.04 32943.1)\n7   POINT (28419.1 33513.37)\n8  POINT (40763.57 33879.61)\n9  POINT (23595.63 28884.78)\n10 POINT (24586.56 33194.31)\n\n\n\ngwr.adaptive.output <- as.data.frame(gwr.adaptive$SDF)\ncondo_resale.sf.adaptive <- cbind(condo_resale.res.sf, as.matrix(gwr.adaptive.output))\n\nNext, glimpse() is used to display the content of condo_resale.sf.adaptive sf data frame.\n\nglimpse(condo_resale.sf.adaptive)\n\nRows: 1,436\nColumns: 103\n$ POSTCODE                <dbl> 118635, 288420, 267833, 258380, 467169, 466472…\n$ SELLING_PRICE           <dbl> 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ AREA_SQM                <dbl> 309, 290, 248, 127, 145, 139, 218, 141, 165, 1…\n$ AGE                     <dbl> 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22,…\n$ PROX_CBD                <dbl> 7.941259, 6.609797, 6.898000, 4.038861, 11.783…\n$ PROX_CHILDCARE          <dbl> 0.16597932, 0.28027246, 0.42922669, 0.39473543…\n$ PROX_ELDERLYCARE        <dbl> 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.…\n$ PROX_URA_GROWTH_AREA    <dbl> 6.618741, 7.505109, 6.463887, 4.906512, 6.4106…\n$ PROX_HAWKER_MARKET      <dbl> 1.76542207, 0.54507614, 0.37789301, 1.68259969…\n$ PROX_KINDERGARTEN       <dbl> 0.05835552, 0.61592412, 0.14120309, 0.38200076…\n$ PROX_MRT                <dbl> 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.…\n$ PROX_PARK               <dbl> 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.…\n$ PROX_PRIMARY_SCH        <dbl> 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.…\n$ PROX_TOP_PRIMARY_SCH    <dbl> 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.…\n$ PROX_SHOPPING_MALL      <dbl> 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.…\n$ PROX_SUPERMARKET        <dbl> 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.…\n$ PROX_BUS_STOP           <dbl> 0.10336166, 0.28673408, 0.28504777, 0.29872340…\n$ NO_Of_UNITS             <dbl> 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34…\n$ FAMILY_FRIENDLY         <dbl> 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD                <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR          <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ ...24                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...25                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...26                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...27                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...28                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...29                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...30                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...31                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...32                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...33                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...34                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...35                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...36                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...37                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...38                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...39                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...40                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...41                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...42                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...43                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...44                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...45                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...46                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...47                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...48                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...49                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ LOG_SELLING_PRICE       <dbl> 14.91412, 15.17135, 15.01698, 15.26243, 14.151…\n$ MLR_RES                 <dbl> -1489099.55, 415494.57, 194129.69, 1088992.71,…\n$ Intercept               <dbl> 2050011.67, 1633128.24, 3433608.17, 234358.91,…\n$ AREA_SQM.1              <dbl> 9561.892, 16576.853, 13091.861, 20730.601, 672…\n$ AGE.1                   <dbl> -9514.634, -58185.479, -26707.386, -93308.988,…\n$ PROX_CBD.1              <dbl> -120681.94, -149434.22, -259397.77, 2426853.66…\n$ PROX_CHILDCARE.1        <dbl> 319266.925, 441102.177, -120116.816, 480825.28…\n$ PROX_ELDERLYCARE.1      <dbl> -393417.795, 325188.741, 535855.806, 314783.72…\n$ PROX_URA_GROWTH_AREA.1  <dbl> -159980.203, -142290.389, -253621.206, -267929…\n$ PROX_MRT.1              <dbl> -299742.96, -2510522.23, -936853.28, -2039479.…\n$ PROX_PARK.1             <dbl> -172104.47, 523379.72, 209099.85, -759153.26, …\n$ PROX_PRIMARY_SCH.1      <dbl> 242668.03, 1106830.66, 571462.33, 3127477.21, …\n$ PROX_SHOPPING_MALL.1    <dbl> 300881.390, -87693.378, -126732.712, -29593.34…\n$ PROX_BUS_STOP.1         <dbl> 1210615.44, 1843587.22, 1411924.90, 7225577.51…\n$ NO_Of_UNITS.1           <dbl> 104.8290640, -288.3441183, -9.5532945, -161.35…\n$ FAMILY_FRIENDLY.1       <dbl> -9075.370, 310074.664, 5949.746, 1556178.531, …\n$ FREEHOLD.1              <dbl> 303955.61, 396221.27, 168821.75, 1212515.58, 3…\n$ y                       <dbl> 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ yhat                    <dbl> 2886531.8, 3466801.5, 3616527.2, 5435481.6, 13…\n$ residual                <dbl> 113468.16, 413198.52, -291527.20, -1185481.63,…\n$ CV_Score                <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Stud_residual           <dbl> 0.38207013, 1.01433140, -0.83780678, -2.846146…\n$ Intercept_SE            <dbl> 516105.5, 488083.5, 963711.4, 444185.5, 211962…\n$ AREA_SQM_SE             <dbl> 823.2860, 825.2380, 988.2240, 617.4007, 1376.2…\n$ AGE_SE                  <dbl> 5889.782, 6226.916, 6510.236, 6010.511, 8180.3…\n$ PROX_CBD_SE             <dbl> 37411.22, 23615.06, 56103.77, 469337.41, 41064…\n$ PROX_CHILDCARE_SE       <dbl> 319111.1, 299705.3, 349128.5, 304965.2, 698720…\n$ PROX_ELDERLYCARE_SE     <dbl> 120633.34, 84546.69, 129687.07, 127150.69, 327…\n$ PROX_URA_GROWTH_AREA_SE <dbl> 56207.39, 76956.50, 95774.60, 470762.12, 47433…\n$ PROX_MRT_SE             <dbl> 185181.3, 281133.9, 275483.7, 279877.1, 363830…\n$ PROX_PARK_SE            <dbl> 205499.6, 229358.7, 314124.3, 227249.4, 364580…\n$ PROX_PRIMARY_SCH_SE     <dbl> 152400.7, 165150.7, 196662.6, 240878.9, 249087…\n$ PROX_SHOPPING_MALL_SE   <dbl> 109268.8, 98906.8, 119913.3, 177104.1, 301032.…\n$ PROX_BUS_STOP_SE        <dbl> 600668.6, 410222.1, 464156.7, 562810.8, 740922…\n$ NO_Of_UNITS_SE          <dbl> 218.1258, 208.9410, 210.9828, 361.7767, 299.50…\n$ FAMILY_FRIENDLY_SE      <dbl> 131474.73, 114989.07, 146607.22, 108726.62, 16…\n$ FREEHOLD_SE             <dbl> 115954.0, 130110.0, 141031.5, 138239.1, 210641…\n$ Intercept_TV            <dbl> 3.9720784, 3.3460017, 3.5629010, 0.5276150, 1.…\n$ AREA_SQM_TV             <dbl> 11.614302, 20.087361, 13.247868, 33.577223, 4.…\n$ AGE_TV                  <dbl> -1.6154474, -9.3441881, -4.1023685, -15.524301…\n$ PROX_CBD_TV             <dbl> -3.22582173, -6.32792021, -4.62353528, 5.17080…\n$ PROX_CHILDCARE_TV       <dbl> 1.000488185, 1.471786337, -0.344047555, 1.5766…\n$ PROX_ELDERLYCARE_TV     <dbl> -3.26126929, 3.84626245, 4.13191383, 2.4756745…\n$ PROX_URA_GROWTH_AREA_TV <dbl> -2.846248368, -1.848971738, -2.648105057, -5.6…\n$ PROX_MRT_TV             <dbl> -1.61864578, -8.92998600, -3.40075727, -7.2870…\n$ PROX_PARK_TV            <dbl> -0.83749312, 2.28192684, 0.66565951, -3.340617…\n$ PROX_PRIMARY_SCH_TV     <dbl> 1.59230221, 6.70194543, 2.90580089, 12.9836104…\n$ PROX_SHOPPING_MALL_TV   <dbl> 2.753588422, -0.886626400, -1.056869486, -0.16…\n$ PROX_BUS_STOP_TV        <dbl> 2.0154464, 4.4941192, 3.0419145, 12.8383775, 0…\n$ NO_Of_UNITS_TV          <dbl> 0.480589953, -1.380026395, -0.045279967, -0.44…\n$ FAMILY_FRIENDLY_TV      <dbl> -0.06902748, 2.69655779, 0.04058290, 14.312764…\n$ FREEHOLD_TV             <dbl> 2.6213469, 3.0452799, 1.1970499, 8.7711485, 1.…\n$ Local_R2                <dbl> 0.8846744, 0.8899773, 0.8947007, 0.9073605, 0.…\n$ coords.x1               <dbl> 22085.12, 25656.84, 23963.99, 27044.28, 41042.…\n$ coords.x2               <dbl> 29951.54, 34546.20, 32890.80, 32319.77, 33743.…\n$ geometry                <POINT [m]> POINT (22085.12 29951.54), POINT (25656.…\n\n\n\nsummary(gwr.adaptive$SDF$yhat)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n  171347  1102001  1385528  1751842  1982307 13887901 \n\n\n\n\n8.5 Visualizing local R2\nThe code chunks below is used to create an interactive point symbol map.\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\ntm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"Local_R2\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\nWarning: The shape mpsz_svy21 is invalid (after reprojection). See\nsf::st_is_valid\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\n\n\n\n8.6 Visualizing coefficient estimates.\nThe code chunks below is used to create an interactive point symbol map.\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\nAREA_SQM_SE <- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_SE\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\nAREA_SQM_TV <- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_TV\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\ntmap_arrange(AREA_SQM_SE, AREA_SQM_TV, \n             asp=1, ncol=2,\n             sync = TRUE)\n\nWarning: The shape mpsz_svy21 is invalid (after reprojection). See\nsf::st_is_valid\n\nWarning: The shape mpsz_svy21 is invalid (after reprojection). See\nsf::st_is_valid\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\n\n\n\n8.7 By URA Plannign Region.\n\ntm_shape(mpsz_svy21[mpsz_svy21$REGION_N==\"CENTRAL REGION\", ])+\n  tm_polygons()+\ntm_shape(condo_resale.sf.adaptive) + \n  tm_bubbles(col = \"Local_R2\",\n           size = 0.15,\n           border.col = \"gray60\",\n           border.lwd = 1)\n\nWarning: The shape mpsz_svy21[mpsz_svy21$REGION_N == \"CENTRAL REGION\", ] is\ninvalid. See sf::st_is_valid"
  },
  {
    "objectID": "TakeHome_Ex02/TakeHome_Ex02_Updated.html#exploratory-data-analysis.",
    "href": "TakeHome_Ex02/TakeHome_Ex02_Updated.html#exploratory-data-analysis.",
    "title": "TakeHome_Ex02_Updated : Regionalization by clustering of multivariate Water point attributes in Nigeria",
    "section": "6. Exploratory Data Analysis.",
    "text": "6. Exploratory Data Analysis.\n\nwp_nga <- read_rds(\"data/wp_nga.rds\")\n\nngawater_sf<-wp_nga %>%\n  mutate(status_id=\n                case_when(status_id==\"Yes\"~\"Functional\",\n                          status_id==\"No\"~\"Non-Functional\",\n                          status_id== \"Unknown\"~\"unknown\"))\n\n\nggplot(data= ngawater_sf, \n       aes(x= status_id)) +\n       geom_bar(fill= 'light blue') +\n       geom_text(stat = 'Count',\n           aes(label= paste0(stat(count), ', ', \n                             round(stat(count)/sum(stat(count))*100, \n                             1), '%')), vjust= -0.5, size= 3) +\n       labs(y= 'No. of \\nwater points',\n            x= 'Water Points Type',\n            title = \"Distribution of water points\") +\n       theme(axis.title.y= element_text(angle=0), \n             axis.ticks.x= element_blank(),\n             panel.background= element_blank(),\n             axis.line= element_line(color= 'black'),\n             axis.title.y.left = element_text(vjust = 0.5),\n             plot.title = element_text(hjust=0.5))\n\nWarning: `stat(count)` was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(count)` instead.\n\n\n\n\n\nConclusion - Nigeria consists of approx. 55% of functional, 34% of non-functional and 11% of unknown water points.\n\n6.1 District wise proportion of water points.\nTo find out the solution for this question, first let’s prepare the data accordingly:\n\nCreate separate dataframe for each plot.\nArrange it in descending order by the count values using arrange() function.\n\nSelect top 10 divisions using slice_head() function.\n\n6.1.1 Prepare Data\n\nnga_wp_clus <- read_rds(\"data/nga_wp_clus.rds\")\n\ntop10_crucial <- nga_wp_clus %>%\n  st_set_geometry(NULL) %>%\n  arrange(desc(wpt_crucial)) %>%\n  slice_head(n=10)\n\ntop10_rural <- nga_wp_clus %>%\n  st_set_geometry(NULL) %>%\n  arrange(desc(wpt_rural)) %>%\n  slice_head(n=10)\n\ntop10_stale <- nga_wp_clus %>%\n  st_set_geometry(NULL) %>%\n  arrange(desc(wpt_stale)) %>%\n  slice_head(n=10)\n\ntop10_handpump <- nga_wp_clus %>%\n  st_set_geometry(NULL) %>%\n  arrange(desc(handpump)) %>%\n  slice_head(n=10)\n\n\n\n6.1.2 Top 10 Crucial\n\ntp1 <- ggplot(data = top10_crucial,\n       aes(y = reorder(shapeName,wpt_crucial),\n           x= wpt_crucial)) + \n  geom_bar(stat = \"identity\",\n           fill = \"coral\")+\n  labs(x='No. of crucial water points',\n       y=\" \",\n       title=\"Top 10 divisions with crucial waterpoints\") +\n  geom_text(stat='identity', aes(label=paste0(wpt_crucial)),hjust=-0.5)+\n  theme(axis.title.y=element_text(angle=0),\n                                  \n        axis.ticks.x=element_blank(),\n        panel.background = element_blank(),\n        axis.line = element_line(color='grey'),\n        plot.title = element_text(hjust = 0.5,\n                                  size = 10),\n        axis.title.y.left = element_text(vjust = 0.5), \n        axis.text = element_text(face=\"bold\",\n                                  size=6))\n\n\n\n6.1.3 Top 10 Rural\n\ntp2 <- ggplot(data = top10_rural,\n       aes(y = reorder(shapeName,wpt_rural),\n           x= wpt_rural)) + \n  geom_bar(stat = \"identity\",\n           fill = \"hotpink\")+\n  labs(x='No. of rural water points',\n       y=\" \",\n       title=\"Top 10 divisions with rural waterpoints\",) +\n  geom_text(stat='identity', aes(label=paste0(wpt_rural)),hjust=-0.5)+\n  theme(axis.title.y=element_text(angle=0),\n        axis.ticks.x=element_blank(),\n        panel.background = element_blank(),\n        axis.line = element_line(color='grey'),\n        plot.title = element_text(hjust = 0.5,\n                                  size = 10),\n        axis.title.y.left = element_text(vjust = 0.5), \n        axis.text = element_text(face=\"bold\",\n                                 size=6) )\n\n\n\n6.1.4 Top 10 Stale.\n\ntp3 <- ggplot(data = top10_stale,\n       aes(y = reorder(shapeName,wpt_stale),\n           x= wpt_stale)) + \n  geom_bar(stat = \"identity\",\n           fill = \"red\")+\n  labs(x='No. of stale water points',\n       y=\" \",\n       title=\"Top 10 divisions with stale waterpoints\",) +\n  geom_text(stat='identity', aes(label=paste0(wpt_stale)),hjust=-0.5)+\n  theme(axis.title.y=element_text(angle=0),\n        #axis.title.y=element_blank(),\n        axis.ticks.x=element_blank(),\n        panel.background = element_blank(),\n        axis.line = element_line(color='grey'),\n        plot.title = element_text(hjust = 0.5,\n                                  size = 10),\n        axis.title.y.left = element_text(vjust = 0.5), \n        axis.text = element_text(face=\"bold\",\n                                 size=6))\n\n\n\n6.1.5 Top 10 handpumps\n\ntp4 <- ggplot(data = top10_crucial,\n       aes(y = reorder(shapeName,handpump),\n           x= handpump)) + \n  geom_bar(stat = \"identity\",\n           fill = \"yellow\")+\n  labs(x='No. of handpump water points',\n       y=\" \",\n       title=\"Top 10 divisions with handpump waterpoints\",) +\n  geom_text(stat='identity', aes(label=paste0(handpump)),hjust=-0.5)+\n  theme(axis.title.y=element_text(angle=0), \n        axis.ticks.x=element_blank(),\n        panel.background = element_blank(),\n        axis.line = element_line(color='grey'),\n        plot.title = element_text(hjust = 0.5,\n                                  size = 8),\n        axis.title.y.left = element_text(vjust = 0.5), \n        axis.text = element_text(face=\"bold\",\n                                 size=6))\n\n\nggarrange(tp1, tp2, tp3, tp4,\n          ncol=2,\n          nrow=2)\n\n\n\n\n\n\n\n\n6.2 Understand Overall Distribution.\nThe code chunks below are used to create multiple histograms to reveal the overall distribution of the selected variables in nga_wp_clus. They consist of two main parts.\n\nCreate the individual histograms using geom_histogram() and geom_density() functions.\nGroup these histograms together by using the ggarrange() function of ggpubr package.\n\n\nh1 <- ggplot(data=nga_wp_clus, \n             aes(x= pct_functional,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"coral\")+\n  geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nh2 <- ggplot(data=nga_wp_clus, \n             aes(x= pct_nonfunctional,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"coral\")+\n  geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nh3 <- ggplot(data=nga_wp_clus, \n             aes(x= pct_handpump,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"coral\")+\n    geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nh4 <- ggplot(data=nga_wp_clus, \n             aes(x= pct_rural,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"coral\")+\n  geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nh5 <- ggplot(data=nga_wp_clus, \n             aes(x= pct_capmore1000,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"coral\")+\n  geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nh6 <- ggplot(data=nga_wp_clus, \n             aes(x= pct_capless1000,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"coral\")+\n  geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nh7 <- ggplot(data=nga_wp_clus, \n             aes(x= pct_crucial,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"coral\")+\n  geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nh8 <- ggplot(data=nga_wp_clus, \n             aes(x= pct_stale,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"coral\")+\n  geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nggarrange(h1, h2, h3, h4, h5, h6, h7, h8,\n          ncol = 4, \n          nrow = 2)\n\nWarning: The dot-dot notation (`..density..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(density)` instead.\n\n\nWarning: Removed 244 rows containing non-finite values (`stat_bin()`).\n\n\nWarning: Removed 244 rows containing non-finite values (`stat_density()`).\n\n\nWarning: Removed 244 rows containing non-finite values (`stat_bin()`).\n\n\nWarning: Removed 244 rows containing non-finite values (`stat_density()`).\n\n\nWarning: Removed 244 rows containing non-finite values (`stat_bin()`).\n\n\nWarning: Removed 244 rows containing non-finite values (`stat_density()`).\n\n\nWarning: Removed 244 rows containing non-finite values (`stat_bin()`).\n\n\nWarning: Removed 244 rows containing non-finite values (`stat_density()`).\n\n\nWarning: Removed 244 rows containing non-finite values (`stat_bin()`).\n\n\nWarning: Removed 244 rows containing non-finite values (`stat_density()`).\n\n\nWarning: Removed 244 rows containing non-finite values (`stat_bin()`).\n\n\nWarning: Removed 244 rows containing non-finite values (`stat_density()`).\n\n\nWarning: Removed 244 rows containing non-finite values (`stat_bin()`).\n\n\nWarning: Removed 244 rows containing non-finite values (`stat_density()`).\n\n\nWarning: Removed 244 rows containing non-finite values (`stat_bin()`).\n\n\nWarning: Removed 244 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\nWe can observe that distribution of rural water points proportion is left skewed and distribution of proportion of staleness water points is right skewed."
  },
  {
    "objectID": "TakeHome_Ex02/TakeHome_Ex02_Updated.html#understand-spread-of-hand-pumps-across-nigeria.",
    "href": "TakeHome_Ex02/TakeHome_Ex02_Updated.html#understand-spread-of-hand-pumps-across-nigeria.",
    "title": "TakeHome_Ex02_Updated : Regionalization by clustering of multivariate Water point attributes in Nigeria",
    "section": "7. Understand Spread of Hand pumps across Nigeria.",
    "text": "7. Understand Spread of Hand pumps across Nigeria.\n7.1 Total Waterpoints spread across Nigeria.\n\ncm1 <-  tm_shape(nga_wp_clus)+\n  tm_fill(\"total_wpt\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Total \\nWaterpoints ratio\") +\n  tm_layout(main.title = \"Distribution of total no. of waterpoints\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.6, \n            legend.width = 0.6,\n            legend.text.size = 0.6,\n            legend.title.size = 0.6,\n            main.title.fontface = \"bold\",\n            frame = TRUE) +\n  tmap_mode(\"plot\")+\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"4star\",\n             position=c(\"right\", \"top\"))\n\ntmap mode set to plotting\n\n\n7.2 Handpump Spread\n\ncm2 <-  tm_shape(nga_wp_clus)+\n  tm_fill(\"handpump\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Handpump \\nWaterpoints ratio\") +\n  tm_layout(main.title = \"Distribution of handpumps\",\n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.height = 0.6, \n            legend.width = 0.6,\n            legend.text.size = 0.6,\n            legend.title.size = 0.6,\n            main.title.fontface = \"bold\",\n            frame = TRUE) +\n  tmap_mode(\"plot\")+\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"4star\",\n             position=c(\"right\", \"top\"))\n\ntmap mode set to plotting\n\n\n\ntmap_arrange(cm1, cm2, ncol=2)"
  },
  {
    "objectID": "TakeHome_Ex02/TakeHome_Ex02_Updated.html#cluster-analysis",
    "href": "TakeHome_Ex02/TakeHome_Ex02_Updated.html#cluster-analysis",
    "title": "TakeHome_Ex02_Updated : Regionalization by clustering of multivariate Water point attributes in Nigeria",
    "section": "8. Cluster Analysis",
    "text": "8. Cluster Analysis\nFollowing figure shows the steps of cluster analysis.\n\n\n\nFig-2\n\n\nLet us find highly correlated variables.\nThe code chunk below helps us to visualise and analyse the correlation of the input variables by using corrplot.mixed() function of corrplot package.\n\nderived <- nga_wp_clus %>%\n  select(8,9,17:24) %>%\n  st_drop_geometry() %>%\n  replace(is.na(.), 0)\n\nCode chunk below creates correlation chart.\n\ncluster_vars.cor = cor(derived[,1:10])\ncorrplot.mixed(cluster_vars.cor,tl.cex = 0.7,title = \"Correlation Matrix\",\n         lower = \"ellipse\", number.cex = 0.6,\n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\n8.1 How do we interpret Correlation Chart ?\n\nWe need to ignore diagonal values as it is a correlation with self and it will be always 1.\nAs a rule of thumb, correlation value greater than .80 is considered as a ‘highly correlated variable’.\nAny correlation greater than 0.6 is considered as ‘Strong Correlation’.\n\nIn this case, pct_handpump and pct_capless1000 is highly correlated as the magnitude of corelation coefficient is 0.94. Hence, let us exclude the cluster variable pct_capless1000.\n\n\n8.2 Extract and save the clustering variables in a separate dataframe.\n\nDrop geometry from the dataframe using st_set_geometry() function\nChoose the desired columns by using select() clause\nReplace the NA values by 0 using replace(is.na()) function\nPrepare a tabular format using kable() function\n\ncluster_vars <- nga_wp_clus %>%\n  st_set_geometry(NULL) %>%\n  select(1,7,8,16:18,20:23) %>%\n  replace(is.na(.), 0)\nkable(head(cluster_vars,5))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nshapeName\nwpt_functional\nwpt_nonfunctional\npct_functional\npct_nonfunctional\npct_handpump\npct_capmore1000\npct_rural\npct_crucial\npct_stale\n\n\n\n\nAba North\n13\n11\n0.5416667\n0.4583333\n0.7916667\n0.2083333\n0.2500000\n0.0000000\n0.0000000\n\n\nAba South\n5\n8\n0.3846154\n0.6153846\n0.8461538\n0.1538462\n0.6923077\n0.1538462\n0.0000000\n\n\nAbadam\n0\n0\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n\n\nAbaji\n90\n45\n0.5625000\n0.2812500\n0.7312500\n0.1187500\n0.9687500\n0.4937500\n0.1500000\n\n\nAbak\n74\n46\n0.5323741\n0.3309353\n0.4964029\n0.3669065\n0.4820144\n0.0575540\n0.1366906\n\n\n\n\n\n\n\n\n8.3 Division As Rows.\nChange the rows by division name instead of row number by using the code chunk below\n\nrow.names(cluster_vars) <- cluster_vars$shapeName \nnga_derived <- select(cluster_vars, c(2:10)) \nwrite_rds(nga_derived, \"data/nga_derived.rds\")\nkable(head(nga_derived,5))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nwpt_functional\nwpt_nonfunctional\npct_functional\npct_nonfunctional\npct_handpump\npct_capmore1000\npct_rural\npct_crucial\npct_stale\n\n\n\n\nAba North\n13\n11\n0.5416667\n0.4583333\n0.7916667\n0.2083333\n0.2500000\n0.0000000\n0.0000000\n\n\nAba South\n5\n8\n0.3846154\n0.6153846\n0.8461538\n0.1538462\n0.6923077\n0.1538462\n0.0000000\n\n\nAbadam\n0\n0\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n\n\nAbaji\n90\n45\n0.5625000\n0.2812500\n0.7312500\n0.1187500\n0.9687500\n0.4937500\n0.1500000\n\n\nAbak\n74\n46\n0.5323741\n0.3309353\n0.4964029\n0.3669065\n0.4820144\n0.0575540\n0.1366906"
  },
  {
    "objectID": "TakeHome_Ex02/TakeHome_Ex02_Updated.html#section-2",
    "href": "TakeHome_Ex02/TakeHome_Ex02_Updated.html#section-2",
    "title": "TakeHome_Ex02_Updated : Regionalization by clustering of multivariate Water point attributes in Nigeria",
    "section": "",
    "text": "Distribution Analysis.\n\nLet us examine the distribution of the cluster variables using appropriate exploratory data analysis techniques, such as histogram. \n\n9.1 Univariate Distribution.\n\nrh1 <- ggplot(data=nga_derived, \n             aes(x= wpt_functional,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"wheat3\")+\n  geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nh2 <- ggplot(data=nga_derived, \n             aes(x= wpt_nonfunctional,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"coral\")+\n  geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nh3 <- ggplot(data=nga_derived, \n             aes(x= pct_functional,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"maroon1\")+\n    geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nh4 <- ggplot(data=nga_derived, \n             aes(x= pct_nonfunctional,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"yellow\")+\n  geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nh5 <- ggplot(data=nga_derived, \n             aes(x= pct_handpump,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"sienna3\")+\n  geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nh6 <- ggplot(data=nga_derived, \n             aes(x= pct_capmore1000,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"coral4\")+\n  geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nh7 <- ggplot(data=nga_derived, \n             aes(x= pct_rural,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")+\n  geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nh8 <- ggplot(data=nga_derived, \n             aes(x= pct_crucial,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"violet\")+\n  geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nh9 <- ggplot(data=nga_derived, \n             aes(x= pct_stale,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"limegreen\")+\n  geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nggarrange(rh1, h2, h3, h4, h5, h6, h7, h8, h9,\n          ncol = 3, \n          nrow = 3)\n\n\n\n\nThe univariate distribution plot shows that there are majority of zero. Let us exclude zero and view again.\n\nnga_derived_excludeZero <- filter_if(nga_derived, is.numeric, all_vars((.) != 0))\n\nh1 <- ggplot(data=nga_derived_excludeZero,\n             aes(x= wpt_functional,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"yellow\")+\n  geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nh2 <- ggplot(data=nga_derived_excludeZero, \n             aes(x= wpt_nonfunctional,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"linen\")+\n  geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nh3 <- ggplot(data=nga_derived_excludeZero, \n             aes(x= pct_functional,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"coral\")+\n    geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nh4 <- ggplot(data=nga_derived_excludeZero, \n             aes(x= pct_nonfunctional,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"violet\")+\n  geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nh5 <- ggplot(data=nga_derived_excludeZero, \n             aes(x= pct_handpump,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"khaki4\")+\n  geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nh6 <- ggplot(data=nga_derived_excludeZero, \n             aes(x= pct_capmore1000,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")+\n  geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nh7 <- ggplot(data=nga_derived_excludeZero, \n             aes(x= pct_rural,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"palevioletred\")+\n  geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nh8 <- ggplot(data=nga_derived_excludeZero, \n             aes(x= pct_crucial,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"maroon1\")+\n  geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nh9 <- ggplot(data=nga_derived_excludeZero, \n             aes(x= pct_stale,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"palegreen3\")+\n  geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nggarrange(h1, h2, h3, h4, h5, h6, h7, h8, h9,\n          ncol = 3, \n          nrow = 3)\n\n\n\n\nObservation\nDistribution of attributes like pct_functional, pct_nonfunctional are normal whereas wpt_functional, wpt_non_functional are right skewed, pct_rural distribution is left skewed.\n\n\n9.2 Perform Log Transformation.\n\nlognga_derived <- nga_derived_excludeZero\nlognga_derived[,1:9] <- log(lognga_derived[,1:9]+1)\n\nlh1 <- ggplot(data=lognga_derived,\n             aes(x= wpt_functional,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")+\n  geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nlh2 <- ggplot(data=lognga_derived, \n             aes(x= wpt_nonfunctional,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")+\n  geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nlh3 <- ggplot(data=lognga_derived, \n             aes(x= pct_functional,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")+\n    geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nlh4 <- ggplot(data=lognga_derived, \n             aes(x= pct_nonfunctional,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")+\n  geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nlh5 <- ggplot(data=lognga_derived, \n             aes(x= pct_handpump,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")+\n  geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nlh6 <- ggplot(data=lognga_derived, \n             aes(x= pct_capmore1000,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")+\n  geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nlh7 <- ggplot(data=lognga_derived, \n             aes(x= pct_rural,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")+\n  geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nlh8 <- ggplot(data=lognga_derived, \n             aes(x= pct_crucial,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")+\n  geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nlh9 <- ggplot(data=lognga_derived, \n             aes(x= pct_stale,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")+\n  geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\nggarrange(lh1, lh2, lh3, lh4,lh5, lh6, lh7,lh8, lh9,\n          ncol = 3, \n          nrow = 3)\n\n\n\n\nNote - Distribution is normal after performing Log Transformation.\nComparison of Raw vs. Log Transformed. Note that skewness is removed and the distribution has become normal.\n\nh1 <- h1 + labs(title= \"Raw values\")\nlh1 <- lh1 + labs(title = \"Log transformation\")\n\nggarrange(h1, lh1, ncol=2)"
  },
  {
    "objectID": "TakeHome_Ex02/TakeHome_Ex02_Updated.html#removing-bias-using-data-standardization.",
    "href": "TakeHome_Ex02/TakeHome_Ex02_Updated.html#removing-bias-using-data-standardization.",
    "title": "TakeHome_Ex02_Updated : Regionalization by clustering of multivariate Water point attributes in Nigeria",
    "section": "10. Removing Bias Using Data Standardization.",
    "text": "10. Removing Bias Using Data Standardization.\n\n10.1 Find Z-Score.\nLet use following 3 techniques to remove biases due to large numbers. Standardisation can handle outliers.\n\nZ Score\nMin-Max\nDecimal Scaling\n\n\nnga_derived.z <- scale(lognga_derived)\n\nzh1 <- ggplot(data=as.data.frame(nga_derived.z),\n             aes(x= wpt_functional,\n                 y= ..density..)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"coral\")+\n  geom_density(color=\"black\",\n               alpha = 0.5)+\n  theme(panel.background= element_blank())\n\n\n\nrh1 <- rh1 + labs(title= \"Raw Data\")\nh1 <-  h1 + labs(title= \"Excluding Zeroes\")\nlh1 <- lh1 + labs(title = \"Log transformation\")\nzh1 <- zh1 + labs(title = \"Z-score standardisation\")\n\nggarrange(rh1,h1, lh1,zh1, ncol=4)\n\n\n\n\n\n\n10.2 Computing Proximity Matrix.\nA proximity matrix is a square matrix (two-dimensional array) containing the distances, taken pairwise between the elements of a matrix. Broadly defined; a proximity matrix measures the similarity or dissimilarity between the pairs of matrix.\nMajor types are euclidean, maximum, manhattan, canberra, binary and minkowski.\nThe code chunk below is used to compute the proximity matrix using dist() function and euclidean method.\n\nproxmat <- dist(nga_derived, method = 'euclidean')"
  },
  {
    "objectID": "TakeHome_Ex02/TakeHome_Ex02_Updated.html#hierarchical-and-k-means-clustering.",
    "href": "TakeHome_Ex02/TakeHome_Ex02_Updated.html#hierarchical-and-k-means-clustering.",
    "title": "TakeHome_Ex02_Updated : Regionalization by clustering of multivariate Water point attributes in Nigeria",
    "section": "11. Hierarchical and K-means clustering.",
    "text": "11. Hierarchical and K-means clustering.\n\n\n\n\n11.1 Compute the agglomerative coefficients\nThe code chunk below will be used to compute the agglomerative coefficients of all hierarchical clustering algorithms.\n\nm <- c( \"average\", \"single\", \"complete\", \"ward\")\nnames(m) <- c( \"average\", \"single\", \"complete\", \"ward\")\n\nac <- function(x) {\n  agnes(nga_derived, method = x)$ac\n}\n\nmap_dbl(m, ac)\n\n  average    single  complete      ward \n0.9934065 0.9892576 0.9959162 0.9986306 \n\n\nLet us use Ward’s method as it provides the strongest clustering structure among the four methods assessed.\n\n\n11.2 Determining optimal clusters\nThere are three commonly used methods to determine the optimal clusters, they are:\n\nElbow Method\nAverage Silhouette Method\nGap Statistic Method\n\nLet us use Elbow Method to determine optimal no. of clusters.\nfviz_nbclust() of factoextra package - to specify the no. of clusters to be generated\nmethod - wss - within sum of squares\n\nfviz_nbclust(nga_derived.z, \n             hcut, \n             method = \"wss\")\n\n\n\n\nMin no. of clusters required to perform clustering analysis is 3. The plot shows that optimal no. of clusters is 5 as the slope reduces gradually after that.\n\n\n11.3 Create Dendogram\nIn the dendrogram displayed below, each leaf corresponds to one observation. As we move up the tree, observations that are similar to each other are combined. The code chunk below performs hierarchical cluster analysis using Ward.D method. The hierarchical clustering output is stored in an object of class hclust which describes the tree produced by the clustering process. rect.hclust() - to draw the dendrogram with a border around the selected clusters.\n\nset.seed(3456)\nhclust_ward <- hclust(proxmat, method = 'ward.D')\nplot(hclust_ward, cex = 0.2)\nrect.hclust(hclust_ward, \n            k = 5, \n            border = 2:5)\n\n\n\n\n\n\n\n\n\n11.4 Interpretation of clusters - Spatial Map\nWe have 5 clusters for analysis.The code chunk performs the following steps\n\nDerive a 5-cluster model using cutree() function\nConvert the groups list object into a matrix using as.matrix() function\nAppend groups matrix onto nga_wp_clus to produce an output simple feature object called hierarCluster using cbind() function\nRename as.matrix.groups as Hierar cluster using rename() function\n\n\ngroups <- as.factor(cutree(hclust_ward, k=5))\nhierarCluster <- cbind(nga_wp_clus, as.matrix(groups)) %>%\n  rename(`Hierar cluster` = `as.matrix.groups.`)\n\n\nlength(as.matrix(groups))\n\n[1] 774\n\n\n\n\n11.5 Mapping Hierarchical Cluster.\n\ncmap1 <- tm_shape (hierarCluster) +\n          tm_polygons(\"Hierar cluster\",\n          title = \"Hierarchical Cluster\") +\n          tm_layout(main.title = \"Conventional Hierarchical clusters\",\n                    main.title.position = \"center\",\n                    main.title.size = 1,\n                    legend.height = 0.75, \n                    legend.width = .8,\n                    legend.text.size = 0.7,\n                    legend.title.size = .8,\n                    main.title.fontface = \"bold\",\n                    frame = TRUE) +\n        tmap_mode(\"plot\")+\n        tm_borders(alpha = 0.5) +\n        tm_compass(type=\"8star\",\n                  position=c(\"right\", \"top\"))\n\ntmap mode set to plotting\n\n\n\ncmap1\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\n\n\n\n\n\n\n11.6 Visual interpretation of clusters - Parallel Plot\n\nggparcoord(data = hierarCluster,\n           columns = c(7,8,16,17,18,20:23),\n           scale = \"std\",\n           alphaLines = 0.2,\n           boxplot = TRUE,\n           title = \"Multiple Parallel Coordinates Plots of Hierarchical variables by Cluster\") +\n  facet_grid(~ `Hierar cluster`) +\n  theme(axis.text.x = element_text(angle = 30))"
  },
  {
    "objectID": "TakeHome_Ex02/TakeHome_Ex02_Updated.html#spatially-constrained-clustering.",
    "href": "TakeHome_Ex02/TakeHome_Ex02_Updated.html#spatially-constrained-clustering.",
    "title": "TakeHome_Ex02_Updated : Regionalization by clustering of multivariate Water point attributes in Nigeria",
    "section": "12. Spatially Constrained Clustering.",
    "text": "12. Spatially Constrained Clustering.\nPerform the following spatially constrained clustering using\n\nSpatial 'K'luster Analysis by Tree Edge Removal (SKATER) method.\nSpatially Constrained Hierarchical Clustering using ClustGeo method.\n\n\n12.1 SKATER Method.\nFirst, let us convert nga_wp_clus into SpatialPolygonsDataFrame. This is because SKATER function only support sp objects such as SpatialPolygonDataFrame.\nThe code chunk below uses as_Spatial() of sf package to convert nga_wp_clus into a SpatialPolygonDataFrame called nga_sp.\npoly2nd() of spdep package will be used to compute the neighbours list from polygon list.\nnbcosts() of spdep package is used to compute the cost of each edge. It is the distance between it nodes.\nWe have to remove the region which has no neighbours.\n\nnga_sp <- as_Spatial(nga_wp_clus %>%\n                       filter(shapeName != \"Bakassi\"))\nnga.nb <- poly2nb(nga_sp)\nlcosts <- nbcosts(nga.nb, nga_derived)\nnga.w <- nb2listw(nga.nb, \n                   lcosts, \n                   style=\"B\")\n\nWarning in nb2listw(nga.nb, lcosts, style = \"B\"): zero sum general weights\n\n\n\nnga.mst <- mstree(nga.w)\n\n\n\n12.2 Plot Mininum Spanning Tree.\n\nplot(nga_sp, border=gray(.5))\nplot.mst(nga.mst, \n         coordinates(nga_sp), \n         col=\"red\", \n         cex.lab=0.7, \n         cex.circles=0.005, \n         add=TRUE)\n\n\n\n\n\n\n\n12.3 Computing SKATER.\n\nset.seed(3456)\nclust4 <- spdep::skater(edges = nga.mst[,1:2], \n                 data = nga_derived, \n                 method = \"euclidean\", \n                 ncuts = 3)\n\ngroups_mat <- as.matrix(clust4$groups)\nskaterCluster <- cbind(nga_wp_clus %>%\n                       filter(shapeName != \"Bakassi\"), as.factor(groups_mat)) %>%\n  rename(`SKATER cluster`=`as.factor.groups_mat.`)\n\n12.4 Mapping SKATER\n\ncmap2 <- tm_shape (skaterCluster) +\n          tm_polygons(\"SKATER cluster\",\n          title = \"SKATER Cluster\") +\n          tm_layout(main.title = \"Spatially constraied- SKATER\",\n                    main.title.position = \"center\",\n                    main.title.size = 0.75,\n                    legend.height = 0.75, \n                    legend.width = 0.75,\n                    legend.text.size = 0.75,\n                    legend.title.size = 0.75,\n                    main.title.fontface = \"bold\",\n                    frame = TRUE) +\n        tmap_mode(\"plot\")+\n        tm_borders(alpha = 0.5) +\n        tm_compass(type=\"8star\",\n                  position=c(\"right\", \"top\"))\n\ntmap mode set to plotting\n\n\nMapping SKATER Cluster\n\ncmap2\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\n\n\n\n\n12.6 SKATER Parallel Plots\n\nggparcoord(data = skaterCluster,\n           columns = c(7,8,16,17,18,20:23),\n           scale = \"std\",\n           alphaLines = 0.2,\n           boxplot = TRUE,\n           title = \"Multiple Parallel Coordinates Plots of SKATER cluster Variables by Cluster\") +\n  facet_grid(~ `SKATER cluster`) +\n  theme(axis.text.x = element_text(angle = 30))"
  },
  {
    "objectID": "TakeHome_Ex02/TakeHome_Ex02_Updated.html#section-7",
    "href": "TakeHome_Ex02/TakeHome_Ex02_Updated.html#section-7",
    "title": "TakeHome_Ex02_Updated : Regionalization by clustering of multivariate Water point attributes in Nigeria",
    "section": "",
    "text": "Non spatially constrained clustering using ClustGeo method.\n\n\n13.1 Computing ClustGeo.\n\nset.seed(3456)\nnongeo_cluster <- hclustgeo(proxmat)\ngroups <- as.factor(cutree(nongeo_cluster, k=5))\ngeoCluster <- cbind(nga_wp_clus, as.matrix(groups)) %>%\n  rename(`Geo cluster` = `as.matrix.groups.`)\n\n\n\n13.2 Mapping Geo Cluster.\n\ncmap3 <- tm_shape (geoCluster) +\n          tm_polygons(\"Geo cluster\",\n          title = \"Geo Cluster\") +\n          tm_layout(main.title = \"Non-spatially constraied - GeoCluster\",\n                    main.title.position = \"center\",\n                    main.title.size = .5,\n                    legend.height = .5, \n                    legend.width = .5,\n                    legend.text.size = .5,\n                    legend.title.size = .5,\n                    main.title.fontface = \"bold\",\n                    frame = TRUE) +\n        tmap_mode(\"plot\")+\n        tm_borders(alpha = 0.5) +\n        tm_compass(type=\"8star\",\n                  position=c(\"right\", \"top\"))\n\ntmap mode set to plotting\n\n\n\ncmap3\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\n\n\n\n\n\n\n13.3 Visual interpretation of clusters - Parallel Plot.\n\nggparcoord(data = geoCluster,\n           columns = c(7,8,16,17,18,20:23),\n           scale = \"std\",\n           alphaLines = 0.2,\n           boxplot = TRUE,\n           title = \"Multiple Parallel Coordinates Plots of Non spatially constrained Variables by Cluster\") +\n  facet_grid(~ `Geo cluster`) +\n  theme(axis.text.x = element_text(angle = 30))\n\n\n\n\n\n\n13.4 Spatially constrained hierarchical clustering using ClustGeo method.\n\ndist <- st_distance(nga_wp_clus, nga_wp_clus)\ndistmat <- as.dist(dist)\ncr <- choicealpha(D0 = proxmat, \n                  D1 = distmat, \n                  range.alpha = seq(0, 1, 0.1),\n                  K=5, \n                  graph = TRUE)\n\n\n\n\n\n\n\n\nset.seed(3456)\nclustG <- hclustgeo(proxmat, distmat, alpha = 0.3)\ngroups <- as.factor(cutree(clustG, k=4))\nspConstrainedCluster <- cbind(nga_wp_clus, as.matrix(groups)) %>%\n  rename(`spatial constrained cluster` = `as.matrix.groups.`)\n\n\ncmap4 <- tm_shape (spConstrainedCluster) +\n          tm_polygons(\"spatial constrained cluster\",\n          title = \"spatial constrained cluster\") +\n          tm_layout(main.title = \"Spatially constraied - GeoCluster\",\n                    main.title.position = \"center\",\n                    main.title.size = .5,\n                    legend.height = .5, \n                    legend.width = .5,\n                    legend.text.size = .5,\n                    legend.title.size = .5,\n                    main.title.fontface = \"bold\",\n                    frame = TRUE) +\n        tmap_mode(\"plot\")+\n        tm_borders(alpha = 0.5) +\n        tm_compass(type=\"8star\",\n                  position=c(\"right\", \"top\"))\n\ntmap mode set to plotting\n\n\n\ncmap4\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\n\n\n\n\n\n\n\n13.5 Visual interpretation of clusters - Parallel Plot.\n\nggparcoord(data = spConstrainedCluster,\n           columns = c(7,8,16,17,18,20:23),\n           scale = \"std\",\n           alphaLines = 0.2,\n           boxplot = TRUE,\n           title = \"Multiple Parallel Coordinates Plots of spatially constrained Variables by Cluster\") +\n  facet_grid(~ `spatial constrained cluster`) +\n  theme(axis.text.x = element_text(angle = 30))\n\n\n\n\n\ntmap_arrange(cmap1, cmap2, cmap3, cmap4,\n             nrow = 2,\n             ncol = 2)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them)."
  },
  {
    "objectID": "TakeHome_Ex02/TakeHome_Ex02_Updated.html#non-spatially-constrained-clustering-using-clustgeo-method.",
    "href": "TakeHome_Ex02/TakeHome_Ex02_Updated.html#non-spatially-constrained-clustering-using-clustgeo-method.",
    "title": "TakeHome_Ex02_Updated : Regionalization by clustering of multivariate Water point attributes in Nigeria",
    "section": "13. Non spatially constrained clustering using ClustGeo method.",
    "text": "13. Non spatially constrained clustering using ClustGeo method.\n\n13.1 Computing ClustGeo.\n\nset.seed(3456)\nnongeo_cluster <- hclustgeo(proxmat)\ngroups <- as.factor(cutree(nongeo_cluster, k=5))\ngeoCluster <- cbind(nga_wp_clus, as.matrix(groups)) %>%\n  rename(`Geo cluster` = `as.matrix.groups.`)\n\n\n\n13.2 Mapping Geo Cluster.\n\ncmap3 <- tm_shape (geoCluster) +\n          tm_polygons(\"Geo cluster\",\n          title = \"Geo Cluster\") +\n          tm_layout(main.title = \"Non-spatially constraied - GeoCluster\",\n                    main.title.position = \"center\",\n                    main.title.size = .5,\n                    legend.height = .5, \n                    legend.width = .5,\n                    legend.text.size = .5,\n                    legend.title.size = .5,\n                    main.title.fontface = \"bold\",\n                    frame = TRUE) +\n        tmap_mode(\"plot\")+\n        tm_borders(alpha = 0.5) +\n        tm_compass(type=\"8star\",\n                  position=c(\"right\", \"top\"))\n\ntmap mode set to plotting\n\n\n\ncmap3\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\n\n\n\n\n\n\n13.3 Visual interpretation of clusters - Parallel Plot.\n\nggparcoord(data = geoCluster,\n           columns = c(7,8,16,17,18,20:23),\n           scale = \"std\",\n           alphaLines = 0.2,\n           boxplot = TRUE,\n           title = \"Multiple Parallel Coordinates Plots of Non spatially constrained Variables by Cluster\") +\n  facet_grid(~ `Geo cluster`) +\n  theme(axis.text.x = element_text(angle = 30))\n\n\n\n\n\n\n13.4 Spatially constrained hierarchical clustering using ClustGeo method.\n\ndist <- st_distance(nga_wp_clus, nga_wp_clus)\ndistmat <- as.dist(dist)\ncr <- choicealpha(D0 = proxmat, \n                  D1 = distmat, \n                  range.alpha = seq(0, 1, 0.1),\n                  K=5, \n                  graph = TRUE)\n\n\n\n\n\n\n\n\nset.seed(3456)\nclustG <- hclustgeo(proxmat, distmat, alpha = 0.3)\ngroups <- as.factor(cutree(clustG, k=4))\nspConstrainedCluster <- cbind(nga_wp_clus, as.matrix(groups)) %>%\n  rename(`spatial constrained cluster` = `as.matrix.groups.`)\n\n\ncmap4 <- tm_shape (spConstrainedCluster) +\n          tm_polygons(\"spatial constrained cluster\",\n          title = \"spatial constrained cluster\") +\n          tm_layout(main.title = \"Spatially constraied - GeoCluster\",\n                    main.title.position = \"center\",\n                    main.title.size = .5,\n                    legend.height = .5, \n                    legend.width = .5,\n                    legend.text.size = .5,\n                    legend.title.size = .5,\n                    main.title.fontface = \"bold\",\n                    frame = TRUE) +\n        tmap_mode(\"plot\")+\n        tm_borders(alpha = 0.5) +\n        tm_compass(type=\"8star\",\n                  position=c(\"right\", \"top\"))\n\ntmap mode set to plotting\n\n\n\ncmap4\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\n\n\n\n\n\n\n\n13.5 Visual interpretation of clusters - Parallel Plot.\n\nggparcoord(data = spConstrainedCluster,\n           columns = c(7,8,16,17,18,20:23),\n           scale = \"std\",\n           alphaLines = 0.2,\n           boxplot = TRUE,\n           title = \"Multiple Parallel Coordinates Plots of spatially constrained Variables by Cluster\") +\n  facet_grid(~ `spatial constrained cluster`) +\n  theme(axis.text.x = element_text(angle = 30))\n\n\n\n\n\ntmap_arrange(cmap1, cmap2, cmap3, cmap4,\n             nrow = 2,\n             ncol = 2)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them)."
  }
]